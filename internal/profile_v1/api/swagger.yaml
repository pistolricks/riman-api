---
swagger: "2.0"
info:
  description: "A Microsoft WebApi2 application. For use by Jeunesse and its Partners,\
    \ this api has a focus on product and order creation"
  version: "v1"
  title: "Profile-Api v1.0"
host: "profile-api.riman.com"
schemes:
- "https"
paths:
  /api/v1/address/auto-complete:
    get:
      tags:
      - "Address"
      summary: "gets a list of potential address matches. Uses long/lat to narrow\
        \ focus if provided."
      operationId: "Address_AddressAutocomplete"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "AddressString"
        in: "query"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "AddressString"
      - name: "Country"
        in: "query"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "Country"
      - name: "Latitude"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Latitude"
        x-optionalDataType: "String"
      - name: "Longitude"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Longitude"
        x-optionalDataType: "String"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Jeunesse.Profile.Core.Address.AddressModelView"
  /api/v1/address/validate:
    get:
      tags:
      - "Address"
      summary: "Validate address by dynamic library"
      operationId: "Address_AddressValidate"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      - name: "selectedShippingMethod"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "SelectedShippingMethod"
        x-optionalDataType: "Int32"
      - name: "isAutoComplete"
        in: "query"
        required: false
        type: "boolean"
        x-exportParamName: "IsAutoComplete"
        x-optionalDataType: "Bool"
      - name: "description"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Description"
        x-optionalDataType: "String"
      - name: "address1"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Address1"
        x-optionalDataType: "String"
      - name: "city"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "City"
        x-optionalDataType: "String"
      - name: "state"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "State"
        x-optionalDataType: "String"
      - name: "zipCode"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "ZipCode"
        x-optionalDataType: "String"
      - name: "country"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Country"
        x-optionalDataType: "String"
      - name: "placeId"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "PlaceId"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Address.Models.AddressValidationViewModel"
    post:
      tags:
      - "Address"
      summary: "Gets detailed address of provided address or placeId\r\nUse placeId\
        \ instead of address if possible to reduce cost"
      operationId: "Address_AddressGetDetails"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "PlaceId"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "PlaceId"
        x-optionalDataType: "String"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Address.AddressModelView"
  /api/v1/approvals:
    get:
      tags:
      - "Approval"
      summary: "Gets a list of Approval Tasks."
      operationId: "Approval_GetApprovalTasks"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      - name: "distributorSiteUrl"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "DistributorSiteUrl"
        x-optionalDataType: "String"
      - name: "reqSiteUrl"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "ReqSiteUrl"
        x-optionalDataType: "String"
      - name: "typeFK"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "TypeFK"
        x-optionalDataType: "Int32"
      - name: "statusFKs"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "StatusFKs"
        x-optionalDataType: "String"
      - name: "pageSize"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      - name: "pageNumber"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "PageNumber"
        x-optionalDataType: "Int32"
      - name: "orderBy"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "OrderBy"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.Approvals.ApprovalTasksViewModel"
    put:
      tags:
      - "Approval"
      summary: "Edit a Approval Task."
      operationId: "Approval_EditTicket"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "Query"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.Approvals.ApprovalTaskUpdateQueryModel"
        x-exportParamName: "Query"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "boolean"
  /api/v1/dashboards/team:
    get:
      tags:
      - "Dashboards"
      summary: "Get Team details"
      operationId: "Dashboards_GetTeamDetails"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Jeunesse.Profile.Core.Dashboards.Models.TeamMembersModel"
  /api/v1/dashboards/promo-id:
    get:
      tags:
      - "Dashboards"
      summary: "Get dashboard promotion report id"
      operationId: "Dashboards_GetDashboardPromotionId"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "integer"
            format: "int32"
  /api/v1/dashboards/commissions:
    get:
      tags:
      - "Dashboards"
      summary: "Get Commissions data"
      operationId: "Dashboards_GetCommisions"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Dashboards.Models.CommissionModel"
  /api/v1/dashboards/personal-info:
    get:
      tags:
      - "Dashboards"
      summary: "Get data for Personal Info"
      operationId: "Dashboards_GetPersonalInfo"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Dashboards.Models.PersonalInfoModel"
  /api/v1/dashboards/top-producers:
    get:
      tags:
      - "Dashboards"
      summary: "Get Top producers"
      operationId: "Dashboards_GetTopProducers"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Dashboards.Models.TopProducersModel"
  /api/v1/dashboards/bp-sp-snapshot:
    get:
      tags:
      - "Dashboards"
      summary: "Get data for Personal snapshot"
      operationId: "Dashboards_GetBpSpSnapshot"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Jeunesse.Profile.Core.Dashboards.Models.BpSpSnapshotModel"
  /api/v1/dashboards/personal-snapshot:
    get:
      tags:
      - "Dashboards"
      summary: "Get data for Personal snapshot"
      operationId: "Dashboards_GetPersonalSnapshot"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Dashboards.Models.PersonalSnapshotModel"
  /api/v1/dashboards/show-agree/{siteUrl}:
    get:
      tags:
      - "Dashboards"
      summary: "Get main user details"
      operationId: "Dashboards_CheckIfShouldShowAgree"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "siteUrl"
        in: "path"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "SiteUrl"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "boolean"
  /api/v1/dashboards/flush-points-days-left:
    get:
      tags:
      - "Dashboards"
      summary: "Get flush points days left count to show it on UI"
      operationId: "Dashboards_GetFlushPointsDaysLeft"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "integer"
            format: "int32"
  /api/v1/dashboards/enrollee-sales/{siteUrl}:
    get:
      tags:
      - "Dashboards"
      summary: "Get Enrollee sales details"
      operationId: "Dashboards_GetEnrolleeSalesDetails"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "siteUrl"
        in: "path"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "SiteUrl"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Jeunesse.Profile.Core.Dashboards.Models.EnrolleeSalesModel"
  /api/v1/dashboards/commissions-tier/{siteUrl}:
    get:
      tags:
      - "Dashboards"
      summary: "Get Commissions Tier data"
      operationId: "Dashboards_GetCustCommTier"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "siteUrl"
        in: "path"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "SiteUrl"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Dashboards.Models.CustomerCommissionsTierModel"
  /api/v1/dashboards/customers/{siteUrl}/{year}:
    get:
      tags:
      - "Dashboards"
      summary: "Get referred customers"
      operationId: "Dashboards_GetCustomers"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "siteUrl"
        in: "path"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "SiteUrl"
      - name: "year"
        in: "path"
        description: ""
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Year"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Jeunesse.Profile.Core.Dashboards.Models.CustomerSalesCommissionsModel"
  /api/v1/dashboards/promo-winners/{promotionId}:
    get:
      tags:
      - "Dashboards"
      summary: "Get list of winners for specific promotion"
      operationId: "Dashboards_DashbortdPromoWinnersModel"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "promotionId"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "PromotionId"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Jeunesse.Profile.Core.Dashboards.Models.DashbortdPromoWinnerModel"
  /api/v1/dashboards/promo-user-data/{promotionId}:
    get:
      tags:
      - "Dashboards"
      summary: "Get user data for specific promotion"
      operationId: "Dashboards_GetDashboardPromoUserData"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "promotionId"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "PromotionId"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Dashboards.Models.DashboardPromoUserDataModel"
  /api/v1/dashboards/volume-rsb-sales/{siteUrl}/{year}:
    get:
      tags:
      - "Dashboards"
      summary: "Get Customer Sales data"
      operationId: "Dashboards_GetVolRSBSales"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "siteUrl"
        in: "path"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "SiteUrl"
      - name: "year"
        in: "path"
        description: ""
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Year"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Jeunesse.Profile.Core.Dashboards.Models.CustomerSalesCommissionsModel"
  /api/v1/dashboards/massive-action-bonus/{promotionId}:
    get:
      tags:
      - "Dashboards"
      summary: "Get data for Massive Action Bonus Promo"
      operationId: "Dashboards_GetDistMassiveActionBonusPromoData"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "promotionId"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "PromotionId"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Jeunesse.Profile.Core.Dashboards.Models.MassiveBonusPromoModel"
  /api/v1/dashboards/volume-rsb-commissions/{siteUrl}/{year}:
    get:
      tags:
      - "Dashboards"
      summary: "Get Customer Commissions data"
      operationId: "Dashboards_GetVolRSBCommisions"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "siteUrl"
        in: "path"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "SiteUrl"
      - name: "year"
        in: "path"
        description: ""
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Year"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Jeunesse.Profile.Core.Dashboards.Models.CustomerSalesCommissionsModel"
  /api/v1/dashboards/signups:
    get:
      tags:
      - "Dashboards"
      summary: "Returns a list of monthly datapoints containing new contact type counts."
      operationId: "Dashboards_GetNewContactCounts"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      - name: "startDate"
        in: "query"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "StartDate"
        x-optionalDataType: "Time"
      - name: "endDate"
        in: "query"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "EndDate"
        x-optionalDataType: "Time"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Jeunesse.Profile.Core.Dashboards.Models.SmartMobile.GetNewContactCountsApiResponseModel"
  /api/v1/dashboards/new-reps:
    get:
      tags:
      - "Dashboards"
      summary: "Returns a list of monthly datapoints containing new signup rep counts."
      operationId: "Dashboards_GetNewReps"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      - name: "startDate"
        in: "query"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "StartDate"
        x-optionalDataType: "Time"
      - name: "endDate"
        in: "query"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "EndDate"
        x-optionalDataType: "Time"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Jeunesse.Profile.Core.Users.Models.SmartMobile.ContactModel"
  /api/v1/dashboards/commissions-total:
    get:
      tags:
      - "Dashboards"
      summary: "Returns commission total for specified time range."
      operationId: "Dashboards_GetCommissionsTotal"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      - name: "startDate"
        in: "query"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "StartDate"
        x-optionalDataType: "Time"
      - name: "endDate"
        in: "query"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "EndDate"
        x-optionalDataType: "Time"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Dashboards.Models.GetCommissionsTotalApiResponseModel"
  /api/v1/dashboards/top-sales-contact:
    get:
      tags:
      - "Dashboards"
      summary: "Returns top customer for specified date range."
      operationId: "Dashboards_GetTopSalesContact"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      - name: "startDate"
        in: "query"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "StartDate"
        x-optionalDataType: "Time"
      - name: "endDate"
        in: "query"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "EndDate"
        x-optionalDataType: "Time"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Users.Models.SmartMobile.ContactModel"
  /api/v1/dashboards/monthly-sales-data:
    get:
      tags:
      - "Dashboards"
      summary: "Returns a list of monthly datapoints containing sales totals for the\
        \ requested date range."
      operationId: "Dashboards_GetMonthlySalesData"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      - name: "startDate"
        in: "query"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "StartDate"
        x-optionalDataType: "Time"
      - name: "endDate"
        in: "query"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "EndDate"
        x-optionalDataType: "Time"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Jeunesse.Profile.Core.Dashboards.Models.SmartMobile.GetMonthlySalesDataApiResponseModel"
  /api/v1/dashboards/monthly-product-data:
    get:
      tags:
      - "Dashboards"
      summary: "Returns a list of monthly datapoints containing product totals for\
        \ the requested date range in the requested language."
      operationId: "Dashboards_GetMonthlyProductData"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      - name: "startDate"
        in: "query"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "StartDate"
        x-optionalDataType: "Time"
      - name: "endDate"
        in: "query"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "EndDate"
        x-optionalDataType: "Time"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Jeunesse.Profile.Core.Dashboards.Models.SmartMobile.GetMonthlyProductDataApiResponseModel"
  /api/v1/dashboards/event-tickets-snapshot:
    get:
      tags:
      - "Dashboards"
      summary: "Get data for event tickets snapshot"
      operationId: "Dashboards_GetEventTicketsSnapshots"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "eventId"
        in: "query"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "EventId"
      - name: "searchDay"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "SearchDay"
        x-optionalDataType: "String"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Jeunesse.Profile.Core.Dashboards.Models.EventTicketsSnapshot"
  /api/v1/dashboards/smartNews:
    get:
      tags:
      - "Dashboards"
      summary: "Get smart news feed"
      operationId: "Dashboards_GetSmartNewsFeed"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      - name: "siteUrl"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "SiteUrl"
        x-optionalDataType: "String"
      - name: "mainFK"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "MainFK"
        x-optionalDataType: "Int32"
      - name: "length"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "Length"
        x-optionalDataType: "Int32"
      - name: "usePinPriority"
        in: "query"
        required: false
        type: "boolean"
        x-exportParamName: "UsePinPriority"
        x-optionalDataType: "Bool"
      - name: "country"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Country"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/discount:
    post:
      tags:
      - "Discount"
      summary: "generate discounts"
      operationId: "Discount_DiscountGenerate"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "discount"
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Discount.Models.DiscountModel"
        x-exportParamName: "Discount"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
    put:
      tags:
      - "Discount"
      summary: "extend discount expiration"
      operationId: "Discount_DiscountExtend"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "discount"
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Discount.Models.DiscountModel"
        x-exportParamName: "Discount"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/dynamic-fields/get-data:
    get:
      tags:
      - "DynamicFields"
      summary: "Call to get existing user data for the sent array of fields\r\nIt\
        \ checks against the UpdateSchema JSON to find where to\r\nretrieve from for\
        \ the key(s) provided"
      operationId: "DynamicFields_GetDynamicFieldData"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "country"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Country"
        x-optionalDataType: "String"
      - name: "schemaType"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "SchemaType"
        x-optionalDataType: "Int32"
      - name: "signupKey"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "SignupKey"
        x-optionalDataType: "String"
      - name: "mainPk"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "MainPk"
        x-optionalDataType: "Int32"
      - name: "cartKey"
        in: "query"
        required: false
        type: "string"
        format: "uuid"
        x-exportParamName: "CartKey"
      - name: "fields"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Fields"
      - name: "inputName"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "InputName"
        x-optionalDataType: "String"
      - name: "fieldValues"
        in: "query"
        required: false
        type: "array"
        items: {}
        collectionFormat: "multi"
        x-exportParamName: "FieldValues"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Jeunesse.Profile.Core.DynamicFields.Models.DynamicValuesViewModel"
  /api/v1/form:
    get:
      tags:
      - "DynamicFields"
      summary: "Retrieves the Json form data for the specified country and form type"
      operationId: "DynamicFields_GetJsonFormData"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "countryCode"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "CountryCode"
        x-optionalDataType: "String"
      - name: "formType"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "FormType"
        x-optionalDataType: "Int32"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Jeunesse.Profile.Core.DynamicFields.Models.DynamicFormModel"
  /api/v1/form/data-source:
    post:
      tags:
      - "DynamicFields"
      summary: "Used to pull data source values for a <select></select> type input.\
        \ Simply pass the \r\nname of the input and expect a list of SelectListItem\
        \ values back. \r\ni.e. { name: string, value: string } An example of this\
        \ would be pulling a \r\nlist of States for the passed in country. Pass the\
        \ countryCode and the \r\ninputName of \"state\" and get the data needed.\
        \ In this case the dependent fields\r\nproperty would be empty.\r\nA slightly\
        \ more complicated example of when we'd use this would be for \r\npopulating\
        \ the <select></select> list of shipping methods. Because the shipping \r\n\
        methods require the state, country, zip (maybe city too), we'd pass their\
        \ names and \r\nvalues in the dependent fields property to get the shipping\
        \ methods."
      operationId: "DynamicFields_GetDataSourceValuesForInputName"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "queryModel"
        description: "model of data to retrieve"
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.DynamicFields.Models.PopulateInputQueryModel"
        x-exportParamName: "QueryModel"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/System.Web.WebPages.Html.SelectListItem"
  /api/v1/form/input-value:
    post:
      tags:
      - "DynamicFields"
      summary: "Used to pull an actual value for an input based on other inputs entered.\
        \ This would \r\nalways be tied to a populate-type rule associated with the\
        \ form. An example would \r\nbe for the Brazil address form where filling\
        \ in the postal code will trigger this \r\nAPI for the Neighborhood, City,\
        \ etc inputs to auto-populate with values."
      operationId: "DynamicFields_GetValueForInputName"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "queryModel"
        description: "model of data to retrieve"
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.DynamicFields.Models.PopulateValuesQueryModel"
        x-exportParamName: "QueryModel"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Jeunesse.Profile.Core.DynamicFields.Models.FormInputModel"
  /api/v1/dynamic-fields/set-data:
    post:
      tags:
      - "DynamicFields"
      summary: "Call to update user data for dynamic fields. Checks against the UpdateSchema\
        \ JSON\r\nto determine where to store data by the fields provided"
      operationId: "DynamicFields_SetDynamicFieldData"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.DynamicFields.Models.DynamicValuesPostFormModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Jeunesse.Profile.Core.DynamicFields.Models.DynamicValuesViewModel"
  /api/v1/dynamic-fields/validation:
    post:
      tags:
      - "DynamicFields"
      summary: "Does validation for to check for duplicates and/or run a\r\nsproc\
        \ or function to validate the format. Checks against the\r\nUpdateSchema JSON\
        \ to get info on if it is checking duplicates\r\nor if it needs to build a\
        \ query for the JSON"
      operationId: "DynamicFields_Validation"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.DynamicFields.Models.DynamicValuesPostFormModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Jeunesse.Profile.Core.DynamicFields.Models.DynamicValuesViewModel"
  /api/v1/form/validate/{countryCode}:
    post:
      tags:
      - "DynamicFields"
      summary: "Used to validate the value of a single input. Designed for inputs\
        \ that would \r\nrequire API calls to validate. An example would be when we\
        \ use the username \r\nfield when checking out a new customer with SmartDelivery.\
        \ We use an API to \r\ndetermine if the username is available."
      operationId: "DynamicFields_ValidateFormInput"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "countryCode"
        in: "path"
        description: "country to get data for"
        required: true
        type: "string"
        x-exportParamName: "CountryCode"
      - in: "body"
        name: "formInput"
        description: "the input to validate with the name and value"
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.DynamicFields.Models.FormInputModel"
        x-exportParamName: "FormInput"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Jeunesse.Profile.Core.DynamicFields.Models.InputValidatedModel"
  /api/v1/dynamic-fields/options-search:
    post:
      tags:
      - "DynamicFields"
      summary: "Call to get options list for dropdowns source\r\nWorks with parameters"
      operationId: "DynamicFields_OptionsSearchPost"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.DynamicFields.Models.DynamicValuesGetFormModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/dynamic-fields/migrate:
    post:
      tags:
      - "DynamicFields"
      summary: "Migrates data for signup users to the relevant tables. Uses\r\nthe\
        \ UpdateSchema field to determine where the data should be migrated to.\r\n\
        After copying over it removes the record from the signup dynamic table."
      operationId: "DynamicFields_MigrateDynamicSignupData"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "signupKey"
        in: "query"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "SignupKey"
      - name: "MainPk"
        in: "query"
        description: ""
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainPk"
      - name: "country"
        in: "query"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "Country"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/lacoreconnect/notification-process:
    post:
      tags:
      - "LacoreConnect"
      operationId: "LacoreConnect_NotificationProcess"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "lacoreOrder"
        required: true
        schema:
          type: "object"
        x-exportParamName: "LacoreOrder"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/legal/documents:
    get:
      tags:
      - "Legal"
      summary: "Returns the legal documents required for a specific country and language"
      operationId: "Legal_GetLegalDocument"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "countryCode"
        in: "query"
        required: true
        type: "string"
        x-exportParamName: "CountryCode"
      - name: "langID"
        in: "query"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "LangID"
      - name: "fromPage"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "FromPage"
        x-optionalDataType: "String"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/legal/check-agreements:
    get:
      tags:
      - "Legal"
      summary: "Checks if user needs to agree to current legal documents"
      operationId: "Legal_CheckAgreements"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainPk"
        in: "query"
        description: ""
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainPk"
      - name: "mainTypeFk"
        in: "query"
        description: ""
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainTypeFk"
      - name: "country"
        in: "query"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "Country"
      - name: "langId"
        in: "query"
        description: ""
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "LangId"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "integer"
            format: "int32"
  /api/v1/legal/log-agreements-by-mainpk:
    post:
      tags:
      - "Legal"
      summary: "Logs agreement documents by logged in users mainPk"
      description: "\"from\" is the page where the call is coming from\r\n\"purpose\"\
        \ is an optional field for why they are agreeing. Currently only \"wcAgree\"\
        \ does anything different"
      operationId: "Legal_LogAgreedToDocumentsByMainPk"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "from"
        in: "query"
        required: true
        type: "string"
        x-exportParamName: "From"
      - name: "purpose"
        in: "query"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "Purpose"
      - name: "mainTypeFk"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int32"
        x-exportParamName: "MainTypeFk"
        x-optionalDataType: "Int32"
      - name: "selectedAll"
        in: "query"
        required: false
        type: "boolean"
        default: true
        x-exportParamName: "SelectedAll"
        x-optionalDataType: "Bool"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/legal/log-agreements-by-guid:
    post:
      tags:
      - "Legal"
      summary: "Logs documents that users have agreed to."
      operationId: "Legal_LogAgreedToDocumentsByGuid"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "Guid"
        in: "query"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "Guid"
      - name: "Usage"
        in: "query"
        required: true
        type: "string"
        x-exportParamName: "Usage"
      - name: "SubUsage"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "SubUsage"
        x-optionalDataType: "String"
      - name: "MainTypeFk"
        in: "query"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "MainTypeFk"
        x-optionalDataType: "Int32"
      - name: "selectedAll"
        in: "query"
        required: false
        type: "boolean"
        default: true
        x-exportParamName: "SelectedAll"
        x-optionalDataType: "Bool"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/localization/timezones:
    get:
      tags:
      - "Localization"
      operationId: "Localization_GetTimezones"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Jeunesse.Profile.Core.Localization.Models.TimeZoneViewModel"
  /api/v1/localization/invalidate:
    get:
      tags:
      - "Localization"
      operationId: "Localization_InvalidateLocalization"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/localization/all-countries:
    get:
      tags:
      - "Localization"
      summary: "Get list of all countries"
      operationId: "Localization_GetAllCountries"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Jeunesse.Profile.Core.Localization.Models.CountrySimpleModel"
  /api/v1/localization/country-groups:
    get:
      tags:
      - "Localization"
      summary: "Get list of country groups"
      operationId: "Localization_GetCountryGroups"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/localization/gateway-address:
    get:
      tags:
      - "Localization"
      operationId: "Localization_GetGatewayAddress"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/localization/streets/{areaId}:
    get:
      tags:
      - "Localization"
      summary: "Turkey where it grabs street values"
      operationId: "Localization_GetStreetsForArea"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "areaId"
        in: "path"
        description: "The initiating CountryAreas"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "AreaId"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/localization/billing/countries:
    get:
      tags:
      - "Localization"
      summary: "Returns a list of countries to be used with a billing address."
      operationId: "Localization_GetBillingCountries"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Jeunesse.Profile.Core.Localization.Models.BillingCountriesViewModel"
  /api/v1/localization/eu-gateway-countries:
    get:
      tags:
      - "Localization"
      operationId: "Localization_GetEuGatewayCountries"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/localization/countries/{countryCode}:
    get:
      tags:
      - "Localization"
      summary: "Returns a list of regions for a specified country."
      operationId: "Localization_GetRegions"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "countryCode"
        in: "path"
        description: "Two Letter ISO Country code. Example: US for United States"
        required: true
        type: "string"
        x-exportParamName: "CountryCode"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/localization/comuna/{stateOrProvince}:
    get:
      tags:
      - "Localization"
      summary: "Get List of Comuna Codes"
      operationId: "Localization_ComunaCheck"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "stateOrProvince"
        in: "path"
        description: "State or Porvince for searching"
        required: true
        type: "string"
        x-exportParamName: "StateOrProvince"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/localization/min-age:
    get:
      tags:
      - "Localization"
      operationId: "Localization_GetMinEnrollmentAge"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "country"
        in: "query"
        required: true
        type: "string"
        x-exportParamName: "Country"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "integer"
            format: "int32"
  /api/v1/localization/areas/{cityId}/{countryCode}:
    get:
      tags:
      - "Localization"
      summary: ""
      operationId: "Localization_GetAreasForCity"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "cityId"
        in: "path"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "CityId"
      - name: "countryCode"
        in: "path"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "CountryCode"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/localization/cities/{countryCode}/{isoCode}:
    get:
      tags:
      - "Localization"
      summary: ""
      operationId: "Localization_GetCitiesForCountry"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "countryCode"
        in: "path"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "CountryCode"
      - name: "isoCode"
        in: "path"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "IsoCode"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/localization/shipping/countries/{countryCode}:
    get:
      tags:
      - "Localization"
      summary: "Based on the country requesting, will provide a listing of available\
        \ countries that can be shipped to"
      operationId: "Localization_GetShippingCountries"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "countryCode"
        in: "path"
        description: "The initiating country"
        required: true
        type: "string"
        x-exportParamName: "CountryCode"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/localization/jp-address-lookup:
    get:
      tags:
      - "Localization"
      summary: "Looks for adress suggestions for JP based on provide postal code value"
      operationId: "Localization_LookupJPAddressByPostalCode"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      - name: "postalCode"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "PostalCode"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Jeunesse.Profile.Core.Localization.Models.JPAddressLookupViewModel"
  /api/v1/localization/get-country-zip-formats:
    get:
      tags:
      - "Localization"
      operationId: "Localization_GetCountryZipFormats"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "cultureCode"
        in: "query"
        required: true
        type: "string"
        x-exportParamName: "CultureCode"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/localization/id:
    get:
      tags:
      - "Localization"
      operationId: "Localization_GetIdTypes"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "country"
        in: "query"
        required: true
        type: "string"
        x-exportParamName: "Country"
      - name: "langId"
        in: "query"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "LangId"
        x-optionalDataType: "Int32"
      - name: "pageName"
        in: "query"
        required: false
        type: "string"
        default: "addnew"
        x-exportParamName: "PageName"
        x-optionalDataType: "String"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Jeunesse.Profile.Core.Localization.Models.IdTypesModel"
  /api/v1/localization/countries:
    get:
      tags:
      - "Localization"
      summary: "Get list of countries"
      operationId: "Localization_GetCountries"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      - name: "countryGroups"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "CountryGroups"
        x-optionalDataType: "String"
      - name: "singleCountryCode"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "SingleCountryCode"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/main-extension/it-card:
    get:
      tags:
      - "MainExtension"
      summary: "Get card data for Italy user"
      operationId: "MainExtension_GetItalyCardData"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.MainExtension.Models.MainITExtensionModel"
  /api/v1/users/{MainPK}:
    get:
      tags:
      - "MainUsers"
      summary: "Returns a user by MainPk"
      operationId: "MainUsers_GetUser"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "MainPK"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainPK"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Users.Models.MainUserModel"
  /api/v1/users/award-types:
    get:
      tags:
      - "MainUsers"
      summary: ""
      operationId: "MainUsers_GetAwardsTypes"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Jeunesse.Back.Data.Poco.Awards.AwardType"
  /api/v1/users/awards/{MainPK}:
    get:
      tags:
      - "MainUsers"
      summary: ""
      operationId: "MainUsers_GetUserAwards"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "MainPK"
        in: "path"
        description: ""
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainPK"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Jeunesse.Back.Data.Poco.Awards.Award"
  /api/v1/users/siteUrl/{SiteUrl}:
    get:
      tags:
      - "MainUsers"
      summary: "Returns a user by siteUrl"
      operationId: "MainUsers_GetUserBySiteUrl"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "SiteUrl"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "SiteUrl"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Users.Models.MainUserModel"
  /api/v1/users/can-change-sponsor:
    get:
      tags:
      - "MainUsers"
      summary: "Check is user can change his sponsor"
      operationId: "MainUsers_CanUserChangeSponsor"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "boolean"
  /api/v1/users/marketing/{MainPK}:
    get:
      tags:
      - "MainUsers"
      summary: ""
      operationId: "MainUsers_GetUserMarketingInfo"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "MainPK"
        in: "path"
        description: ""
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainPK"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Users.Models.UserMarketingModel"
  /api/v1/users/signup:
    get:
      tags:
      - "MainUsers"
      summary: "gets a signup user"
      operationId: "MainUsers_GetSignupUser"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "guid"
        in: "query"
        description: ""
        required: false
        type: "string"
        x-exportParamName: "Guid"
        x-optionalDataType: "String"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Users.Models.SignupUserViewModel"
    post:
      tags:
      - "MainUsers"
      summary: "Creates a new signup user"
      description: "minimum populated fields are country, languageFk, referrerSiteUrl,\
        \ maintypeFk, source, lastUrl"
      operationId: "MainUsers_CreateSignupUser"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Users.Models.SignupUserFormModel"
        x-exportParamName: "Model"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Users.Models.SignupUserViewModel"
    put:
      tags:
      - "MainUsers"
      summary: "updates a signup user"
      description: "minimum populated fields are country, languageFk, referrerSiteUrl,\
        \ maintypeFk, source, lastUrl"
      operationId: "MainUsers_UpdateSignupUser"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Users.Models.SignupUserFormModel"
        x-exportParamName: "Model"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Users.Models.SignupUserViewModel"
  /api/v1/users/recognition/{MainPK}:
    get:
      tags:
      - "MainUsers"
      summary: ""
      operationId: "MainUsers_GetUserRecognitionInfo"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "MainPK"
        in: "path"
        description: ""
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainPK"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Users.Models.UserRecognitionModel"
  /api/v1/users/allow-change-username:
    get:
      tags:
      - "MainUsers"
      summary: "Check is user can change username"
      operationId: "MainUsers_AllowUserChangeUsername"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "boolean"
  /api/v1/users/e-signature:
    get:
      tags:
      - "MainUsers"
      summary: "Returns the E-Signature info for the provided user."
      operationId: "MainUsers_GetESignatureInfo"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      - name: "mainPK"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "MainPK"
        x-optionalDataType: "Int32"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Users.Models.ESignatureInfoViewModel"
    post:
      tags:
      - "MainUsers"
      summary: "Sets the E-Signature info for a user."
      operationId: "MainUsers_SetESignatureInfo"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Users.Models.ESignatureInfoPostModel"
        x-exportParamName: "Model"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Users.Models.ESignatureInfoViewModel"
  /api/v1/users/is-sponsor-valid/{sponsorSiteUrl}:
    get:
      tags:
      - "MainUsers"
      summary: "Check is sponsor is valid for user"
      operationId: "MainUsers_IsNewSponsorValid"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "sponsorSiteUrl"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "SponsorSiteUrl"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "boolean"
  /api/v1/users/{MainPk}/downline/{DownlineMainPk}:
    get:
      tags:
      - "MainUsers"
      summary: "Checks a user Downline for a specific user"
      operationId: "MainUsers_CheckUserDownline"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "MainPk"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainPk"
      - name: "DownlineMainPk"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "DownlineMainPk"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Users.Models.MainUserDownlineCheckModel"
  /api/v1/users/get-renewal-status-info:
    get:
      tags:
      - "MainUsers"
      summary: "Returns the renewal info of the user."
      operationId: "MainUsers_GetRenewalStatusInfoAsync"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      - name: "mainPK"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "MainPK"
        x-optionalDataType: "Int32"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Users.Models.RenewalStatusInfo"
  /api/v1/users/user-highest-rank:
    get:
      tags:
      - "MainUsers"
      summary: "Get User highest rank for talkDesk system"
      operationId: "MainUsers_GetUserHighestRank"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      - name: "mainPK"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "MainPK"
        x-optionalDataType: "Int32"
      - name: "key"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Key"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/users/{MainPk}/enroller-tree/{EnrollerTreeMainPk}:
    get:
      tags:
      - "MainUsers"
      summary: "Checks a user Enroller Tree for a specific user"
      operationId: "MainUsers_CheckUserEnrollerTree"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "MainPk"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainPk"
      - name: "EnrollerTreeMainPk"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "EnrollerTreeMainPk"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Users.Models.MainUserEnrollerTreeModel"
  /api/v1/users/customers/sync:
    get:
      tags:
      - "MainUsers"
      summary: "Sync specific user"
      operationId: "MainUsers_SyncCustomers"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "lastSyncedDate"
        in: "query"
        description: ""
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "LastSyncedDate"
        x-optionalDataType: "Time"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Users.Models.SmartMobile.ContactsResponseModel"
  /api/v1/users/referrer:
    get:
      tags:
      - "MainUsers"
      summary: "Anonymous; gets limited referer info"
      operationId: "MainUsers_GetReferrerInfo"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "SiteUrl"
        in: "query"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "SiteUrl"
      - name: "checkFlow"
        in: "query"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "CheckFlow"
        x-optionalDataType: "Bool"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Users.Models.SignupUserViewModel"
  /api/v1/users/sponsor-placement:
    get:
      tags:
      - "MainUsers"
      summary: "Returns sponsor placement display text"
      operationId: "MainUsers_GetMainUserSponsorPlacementView"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      - name: "mainFK"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "MainFK"
        x-optionalDataType: "Int32"
      - name: "languageFk"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "LanguageFk"
        x-optionalDataType: "Int32"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Users.Models.MainUserSponsorPlacementViewModel"
  /api/v1/users/get-redirect-rule:
    get:
      tags:
      - "MainUsers"
      summary: "Returns the redirection rule of the user."
      operationId: "MainUsers_GetRedirectRule"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      - name: "mainPK"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "MainPK"
        x-optionalDataType: "Int32"
      - name: "country"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Country"
        x-optionalDataType: "String"
      - name: "sourceURL"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "SourceURL"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Users.Models.RedirectRule"
  /api/v1/users:
    get:
      tags:
      - "MainUsers"
      summary: "Returns a list of users from the Main Table"
      operationId: "MainUsers_GetUsers"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      - name: "search"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Search"
        x-optionalDataType: "String"
      - name: "exactSearch"
        in: "query"
        required: false
        type: "boolean"
        x-exportParamName: "ExactSearch"
        x-optionalDataType: "Bool"
      - name: "siteUrl"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "SiteUrl"
        x-optionalDataType: "String"
      - name: "mainPK"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "MainPK"
        x-optionalDataType: "Int32"
      - name: "email"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Email"
        x-optionalDataType: "String"
      - name: "firstName"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "FirstName"
        x-optionalDataType: "String"
      - name: "lastName"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "LastName"
        x-optionalDataType: "String"
      - name: "company"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Company"
        x-optionalDataType: "String"
      - name: "phone"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Phone"
        x-optionalDataType: "String"
      - name: "sponsorSiteUrl"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "SponsorSiteUrl"
        x-optionalDataType: "String"
      - name: "orderNumber"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "OrderNumber"
        x-optionalDataType: "Int32"
      - name: "skipCount"
        in: "query"
        required: false
        type: "boolean"
        x-exportParamName: "SkipCount"
        x-optionalDataType: "Bool"
      - name: "mainType"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "MainType"
        x-optionalDataType: "String"
      - name: "orderBy"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "OrderBy"
        x-optionalDataType: "String"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Users.Models.MainUsersSimpleViewModel"
    put:
      tags:
      - "MainUsers"
      summary: "Updates the profile info for the logged in user."
      operationId: "MainUsers_UpdateProfile"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Member.Models.MemberFormModel"
        x-exportParamName: "Model"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Users.Models.MainUserModel"
  /api/v1/users/marketing:
    put:
      tags:
      - "MainUsers"
      summary: "Updates user marketing info"
      operationId: "MainUsers_UpdateMarketingInfo"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Users.Models.UserMarketingFormModel"
        x-exportParamName: "Model"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Users.Models.UserMarketingModel"
  /api/v1/users/recognition:
    put:
      tags:
      - "MainUsers"
      summary: "Updates user recognition info"
      operationId: "MainUsers_UpdateUserRecognitionInfo"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Users.Models.UserRecognitionFormModel"
        x-exportParamName: "Model"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Users.Models.UserRecognitionFormModel"
  /api/v1/users/update-success-on-demand/{MainPk}/{NewStatus}:
    put:
      tags:
      - "MainUsers"
      summary: "Updates Success on Demand status"
      operationId: "MainUsers_UpdateSoD"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "MainPk"
        in: "path"
        description: ""
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainPk"
      - name: "NewStatus"
        in: "path"
        description: ""
        required: true
        type: "boolean"
        x-exportParamName: "NewStatus"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "boolean"
  /api/v1/users/award:
    post:
      tags:
      - "MainUsers"
      summary: ""
      operationId: "MainUsers_AddUserAward"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "award"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Back.Data.Poco.Awards.Award"
        x-exportParamName: "Award"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Jeunesse.Back.Data.Poco.Awards.Award"
  /api/v1/users/reset-password:
    post:
      tags:
      - "MainUsers"
      summary: "Resets password for specific user."
      operationId: "MainUsers_ResetPassword"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Users.Models.ResetPasswordModel"
        x-exportParamName: "Model"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "string"
  /api/v1/users/validate-email:
    post:
      tags:
      - "MainUsers"
      summary: "Validates whether the given email is unique across all member types\
        \ (customers/planners) and listed countries."
      operationId: "MainUsers_ValidateEmail"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "request"
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Users.Models.EmailValidationQueryModel"
        x-exportParamName: "Request"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "boolean"
  /api/v1/users/remind-username:
    post:
      tags:
      - "MainUsers"
      summary: "Remind username for specific user."
      operationId: "MainUsers_RemindUsername"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Users.Models.RemindUsernameModel"
        x-exportParamName: "Model"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "string"
  /api/v1/users/update-password:
    post:
      tags:
      - "MainUsers"
      summary: "Reset password by resetcode"
      operationId: "MainUsers_UpdatePassword"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Users.Models.UpdatePasswordModel"
        x-exportParamName: "Model"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "boolean"
  /api/v1/users/change-user-sponsor:
    post:
      tags:
      - "MainUsers"
      summary: "Change user sponsor data"
      operationId: "MainUsers_ChangeUserSponsor"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Users.Models.UserSponsorChangeModel"
        x-exportParamName: "Model"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "boolean"
  /api/v1/users/change-username:
    post:
      tags:
      - "MainUsers"
      operationId: "MainUsers_ChangeUsername"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "newUsername"
        in: "query"
        required: true
        type: "string"
        x-exportParamName: "NewUsername"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "boolean"
  /api/v1/payment:
    get:
      tags:
      - "Member"
      summary: "Gets a list of payment details"
      operationId: "Member_GetPaymentDetails"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Jeunesse.Profile.Core.Member.Models.PaymentViewModel"
    post:
      tags:
      - "Member"
      summary: "Creates a new payment method and returns an updated list of payment\
        \ details"
      operationId: "Member_CreatePaymentMethod"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Member.Models.PaymentFormModel"
        x-exportParamName: "Model"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Member.Models.PaymentViewModel"
    put:
      tags:
      - "Member"
      summary: "updates a single payment detail for a user and returns an updated\
        \ list of payment details"
      operationId: "Member_UpdatePaymentDetails"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Member.Models.PaymentFormModel"
        x-exportParamName: "Model"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Member.Models.CreatePaymentMethodModel"
  /api/v1/highestrank:
    get:
      tags:
      - "Member"
      summary: "To get highest rank of user."
      operationId: "Member_GetHighestRealRank"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "integer"
            format: "int32"
  /api/v1/member/{mainpk}:
    get:
      tags:
      - "Member"
      summary: "Will lookup a customer by their primary key, if found, will return\
        \ the key to their referrer"
      operationId: "Member_GetMemberInfo"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainpk"
        in: "path"
        description: ""
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Mainpk"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Member.CustomerModel"
  /api/v1/member/alertCheck:
    get:
      tags:
      - "Member"
      operationId: "Member_UserAlertCheck"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/member/unread-counts:
    get:
      tags:
      - "Member"
      summary: "Collect all unread counts to display in badges"
      operationId: "Member_GetUserUnreadCounts"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/payment/requires-cvv:
    get:
      tags:
      - "Member"
      summary: "Checks to see if user will need cvv field in recurring cc info"
      operationId: "Member_RequiresCvv"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "boolean"
  /api/v1/member/address/billing:
    get:
      tags:
      - "Member"
      summary: "Returns the saved shipping address for a member"
      operationId: "Member_GetBillingAddress"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
    put:
      tags:
      - "Member"
      summary: "Updates a member's billing address."
      description: "Required Fields:\r\nFirstName, LastName, Address1, City, State,\
        \ PostalCode, Country\r\nbilling address should only be updated in connection\
        \ with a credit card (when updating credit card info)"
      operationId: "Member_UpdateBillingAddress"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Member.AddressModel"
        x-exportParamName: "Model"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "boolean"
  /api/v1/payment/paypal-agreement:
    get:
      tags:
      - "Member"
      summary: "Checks to see if PayPal Agreement available for user country"
      operationId: "Member_PayPalAgreementAvailable"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "boolean"
  /api/v1/member/ims/send-email/{siteurl}:
    get:
      tags:
      - "Member"
      summary: "Utilized by IMS, this will send an email to the users downline if\
        \ all criteria is met"
      operationId: "Member_SendImsEmailToUser"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "siteurl"
        in: "path"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "Siteurl"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/member/IsIxoPayActiveForGateway:
    get:
      tags:
      - "Member"
      summary: "Returns config for IxoPay tokenEx iframe"
      operationId: "Member_IsIxoPayActiveForGateway"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/member/unified-donation-options:
    get:
      tags:
      - "Member"
      summary: "Returns a list of donation type options for Taiwan Unified settings"
      operationId: "Member_GetTWUnifiedDonationOrgOptions"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Member.Models.TWUnified.TWUnifiedDonationOrgOptions"
  /api/v1/member/referrer:
    get:
      tags:
      - "Member"
      summary: "Returns the referrer information for the currently logged in user,\r\
        \nor if the siteurl of a distributor is passed in it will return the referrer\
        \ info\r\nif for the siteurl if they are under the logged in distributors\
        \ downline."
      operationId: "Member_GetReferrer"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "siteUrl"
        in: "query"
        description: "Optional SiteURL"
        required: false
        type: "string"
        x-exportParamName: "SiteUrl"
        x-optionalDataType: "String"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
    put:
      tags:
      - "Member"
      summary: ""
      operationId: "Member_SetReferrer"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Member.Models.SetReferrerFormModel"
        x-exportParamName: "Model"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/member/upgrade-link/{mainPk}/{code2}:
    get:
      tags:
      - "Member"
      summary: ""
      operationId: "Member_GetUpgradeLink"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainPk"
        in: "path"
        description: ""
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainPk"
      - name: "code2"
        in: "path"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "Code2"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/member/address/shipping:
    get:
      tags:
      - "Member"
      summary: "A function to return the saved shipping address for a member"
      operationId: "Member_GetShippingAddress"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      - name: "isOTG"
        in: "query"
        required: false
        type: "boolean"
        x-exportParamName: "IsOTG"
        x-optionalDataType: "Bool"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
    put:
      tags:
      - "Member"
      summary: "Updates a member's shipping address."
      description: "Required Fields:\r\nFirstName, LastName, Address1, City, State,\
        \ PostalCode, Country"
      operationId: "Member_UpdateShippingAddress"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Member.AddressModel"
        x-exportParamName: "Model"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "boolean"
  /api/v1/member/unified-profile:
    get:
      tags:
      - "Member"
      summary: "Returns the unified info options including the set values for the\
        \ main user."
      operationId: "Member_GetTWUnifiedInfo"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      - name: "mainFK"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "MainFK"
        x-optionalDataType: "Int32"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Jeunesse.Profile.Core.Member.Models.TWUnified.TWUnifiedInfo"
    post:
      tags:
      - "Member"
      summary: "Inserts or updates the Unified Invoice profile settings for a TW distributor."
      operationId: "Member_InsertUpdateTWUnifiedInfo"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "request"
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Member.Models.TWUnified.TWUnifiedInfo"
        x-exportParamName: "Request"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Member.Models.TWUnified.TWUnifiedInfo"
  /api/v1/member/zipcode/{countryCode}/{zipCode}:
    get:
      tags:
      - "Member"
      summary: "Grabs Brazil address values: Address2, Address3, City, and State"
      description: "Require Fields\r\ncountryCode and zipCode"
      operationId: "Member_GetAddressLookUp"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "countryCode"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "CountryCode"
      - name: "zipCode"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ZipCode"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/member/verify-cpf:
    get:
      tags:
      - "Member"
      summary: ""
      operationId: "Member_VerifyCpf"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "cpf"
        in: "query"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "Cpf"
      - name: "mainPk"
        in: "query"
        description: ""
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainPk"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/member/bonus-credits-going-to-expire/{daysCount}:
    get:
      tags:
      - "Member"
      summary: "Check if user has bonus credits going to expire"
      operationId: "Member_BonusCreditsGoingToExpire"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "daysCount"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "DaysCount"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/member/sms:
    get:
      tags:
      - "Member"
      operationId: "Member_SendSmsMessage"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "phoneNumber"
        in: "query"
        required: true
        type: "string"
        x-exportParamName: "PhoneNumber"
      - name: "message"
        in: "query"
        required: true
        type: "string"
        x-exportParamName: "Message"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/member/upgrade:
    get:
      tags:
      - "Member"
      summary: "Update affiliate to Distributor"
      operationId: "Member_Upgrade"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "state"
        in: "query"
        required: true
        type: "string"
        x-exportParamName: "State"
      - name: "mainType"
        in: "query"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainType"
      - name: "mainFk"
        in: "query"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainFk"
      - name: "agreeTerms"
        in: "query"
        required: true
        type: "boolean"
        x-exportParamName: "AgreeTerms"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "boolean"
  /api/v1/password:
    put:
      tags:
      - "Member"
      summary: "Updates the users password"
      operationId: "Member_UpdatePassword"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces: []
      parameters:
      - in: "body"
        name: "model"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Member.Models.PasswordFormModel"
        x-exportParamName: "Model"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "204":
          description: "No Content"
  /api/v1/payment/order:
    put:
      tags:
      - "Member"
      summary: "updates a single payment order"
      operationId: "Member_UpdatePaymentOrder"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Member.Models.PaymentOrderModel"
        x-exportParamName: "Model"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "boolean"
  /api/v1/member/update-show-welcome:
    put:
      tags:
      - "Member"
      operationId: "Member_UpdateShowWelcome"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "boolean"
  /api/v1/payment/{sequencePk}/{useOrder}:
    put:
      tags:
      - "Member"
      summary: "deletes a single payment detail for a user and returns an updated\
        \ list of payment details"
      operationId: "Member_RemovePaymentMethod"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "sequencePk"
        in: "path"
        description: ""
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "SequencePk"
      - name: "useOrder"
        in: "path"
        description: ""
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "UseOrder"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Member.Models.PaymentViewModel"
  /api/v1/member/update-isUseShippingAddress:
    put:
      tags:
      - "Member"
      summary: "Update isUseShippingAddress in Main Table"
      operationId: "Member_UpdateIsShippingAddress"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Member.Models.UpdateIsShippingAddressModel"
        x-exportParamName: "Model"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "boolean"
  /api/v1/member:
    post:
      tags:
      - "Member"
      summary: "Creates a new Jeunesse member"
      description: "Required Fields:\r\nPlease use the V2 version of this call!\r\n\
        SiteUrl, FirstName, LastName, Address1, City, State, PostalCode, Country,\
        \ ShipFirstName, ShipLastName, ShipAddress1, ShipCity, ShipState, ShipPostalCode,\
        \ ShipCountry, PhoneNumber, Email, Password, Referrer, MainType"
      operationId: "Member_CreateMember"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Member.MemberModel"
        x-exportParamName: "Model"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "integer"
            format: "int32"
  /api/v1/member/tos:
    post:
      tags:
      - "Member"
      summary: "Updates a user's terms of service status."
      operationId: "Member_UpdateTOSStatus"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/member/convert:
    post:
      tags:
      - "Member"
      summary: "Used to convert an anonymous member account to a customer log in account."
      operationId: "Member_ConvertAnonymousMemberToCustomer"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Member.Models.ConvertAnonymousMemberFormModel"
        x-exportParamName: "Model"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: true
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/set-price-list:
    post:
      tags:
      - "Member"
      summary: "Sets the pricelistPK on an existing member's account"
      operationId: "Member_SetMemberPriceList"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Member.Models.SetMemberPriceListFormModel"
        x-exportParamName: "Model"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/member/create-ticket:
    post:
      tags:
      - "Member"
      summary: "Allow distributors from India create a compliance ticket."
      operationId: "Member_CreateTicket"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Member.Models.ComplianceFormModel"
        x-exportParamName: "Model"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/member/gov-id/validate:
    post:
      tags:
      - "Member"
      summary: "Validates if government ID is valid for the given country"
      description: "CN_Ssn = 1,\r\nTW_ResidentID = 2,\r\nTH_ID = 5,\r\nUS_Ssn = 6,\r\
        \nMX_Ssn = 7,\r\nVN_ResidentID = 8,\r\nPH_Ssn = 11,\r\nID_Ssn = 12,\r\nMY_Ssn\
        \ = 13,\r\nSG_Ssm = 14,\r\nCA_Sin = 15,\r\nUS_Ein = 16,\r\nTW_Arc = 17,\r\n\
        TW_UnifiedID = 18,\r\nKR_Ssn = 19,\r\nVN_PassportNo = 20,\r\nHK_IdCard = 22,\r\
        \nHK_PassportNo = 23,\r\nHK_BR =24,\r\nID_PassportNo = 25,\r\nID_DrivingLicense\
        \ = 26,\r\nID_IdentityNumber = 27,\r\nDO_Ssn = 28,\r\nCX_Cpf = 29,\r\nTR_NationalID\
        \ = 31,\r\nKW_Ssn = 32,\r\nKW_Ein = 33,\r\nUS_Fin = 34,\r\nFR_Ssn = 35,\r\n\
        FR_Siret = 36,\r\nIL_IdNumber = 37,\r\nIT_Ssn = 38,\r\nIT_IdCard = 39,\r\n\
        IT_Passport = 40,\r\nIT_DriversLicense = 41,\r\nPE_Ssn = 42,\r\nPA_Ssn = 43,\r\
        \nPE_Dni = 44,\r\nPE_CE = 45,\r\nPE_Rui = 46,\r\nCO_CitizenID = 47,\r\nCO_ForeignerID\
        \ = 48,\r\nCO_Passport = 49,\r\nIL_CompanyNumber = 50,\r\nCA_BusinessNumber\
        \ = 51,\r\nCR_CitizenID = 52,\r\nCR_ForeignerID = 53"
      operationId: "Member_ValidateSiteUrl"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Member.GovIdModel"
        x-exportParamName: "Model"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/member-from-event-guest:
    post:
      tags:
      - "Member"
      summary: "Sets up a new member record for event guest checkout"
      operationId: "Member_CreateMemberFromEventGuest"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Api.ViewModels.AddMemberFromEventGuestFormModel"
        x-exportParamName: "Model"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Member.Models.MemberFromEventGuestViewModel"
  /api/v1/member/set-email-and-password:
    post:
      tags:
      - "Member"
      summary: "Used to set the email and password for a guest account after checkout."
      operationId: "Member_SetEmailAndPassword"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        description: "Post Model"
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Member.Models.UpgradeRetailFormModel"
        x-exportParamName: "Model"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "boolean"
  /api/v1/messages/news:
    get:
      tags:
      - "Messages"
      summary: "Get smart news feed"
      operationId: "Messages_GetNews"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      - name: "username"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Username"
        x-optionalDataType: "String"
      - name: "lastArticleFK"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "LastArticleFK"
        x-optionalDataType: "Int32"
      - name: "length"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "Length"
        x-optionalDataType: "Int32"
      - name: "categories"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Categories"
        x-optionalDataType: "String"
      - name: "categoryKeys"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "CategoryKeys"
      - name: "mainFK"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "MainFK"
        x-optionalDataType: "Int32"
      - name: "deviceCultureName"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "DeviceCultureName"
        x-optionalDataType: "String"
      - name: "title"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Title"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/messages/alerts:
    get:
      tags:
      - "Messages"
      summary: "Get user Alerts"
      operationId: "Messages_GetUserAlerts"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/messages/alerts/count:
    get:
      tags:
      - "Messages"
      summary: "Get unread alerts count"
      operationId: "Messages_GetUnreadAlertsCount"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/messages/alerts/types:
    get:
      tags:
      - "Messages"
      summary: "Get unread alerts count"
      operationId: "Messages_GetAlertTypes"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/messages/mailbox/count:
    get:
      tags:
      - "Messages"
      summary: "Get unread messages count"
      operationId: "Messages_GetUnreadMessagesCount"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/messages/mailbox/folders:
    get:
      tags:
      - "Messages"
      summary: "Get list of folders with unread messages count"
      operationId: "Messages_GetFolders"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
    post:
      tags:
      - "Messages"
      summary: "Create new folder\r\n<param name=\"query\">Name and Parent Folder\
        \ ID.</param>"
      operationId: "Messages_CreateFolder"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "query"
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Messages.Models.FolderQueryModel"
        x-exportParamName: "Query"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/messages/news/categories:
    get:
      tags:
      - "Messages"
      summary: "Get news categories"
      operationId: "Messages_GetNewsCategories"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/messages/news/{articlePK}:
    get:
      tags:
      - "Messages"
      summary: "Get news article"
      operationId: "Messages_GetNewsDetails"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "articlePK"
        in: "path"
        description: ""
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ArticlePK"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/messages/mailbox/{folderID}/user-messages/{messageID}:
    get:
      tags:
      - "Messages"
      summary: "Get mailbox message"
      operationId: "Messages_GetMessage"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "folderID"
        in: "path"
        description: "The ID of the user's folder."
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "FolderID"
      - name: "messageID"
        in: "path"
        description: "The ID of the message to get."
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MessageID"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/messages/mailbox/{folderID}/user-messages:
    get:
      tags:
      - "Messages"
      summary: "Get mailbox messages for the user."
      operationId: "Messages_GetMessages"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "folderID"
        in: "path"
        description: "The ID of the user's folder."
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "FolderID"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      - name: "query.username"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "QueryUsername"
        x-optionalDataType: "String"
      - name: "query.isFavorite"
        in: "query"
        required: false
        type: "boolean"
        x-exportParamName: "QueryIsFavorite"
        x-optionalDataType: "Bool"
      - name: "query.pageNumber"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "QueryPageNumber"
        x-optionalDataType: "Int32"
      - name: "query.pageSize"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "QueryPageSize"
        x-optionalDataType: "Int32"
      - name: "query.searchTerm"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "QuerySearchTerm"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
    put:
      tags:
      - "Messages"
      summary: "Updates messages to mark as read or deleted."
      operationId: "Messages_UpdateMessages"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "folderID"
        in: "path"
        description: "The ID of the user's folder."
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "FolderID"
      - in: "body"
        name: "query"
        description: "Message Request Model to be updated. [fromBody]"
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Messages.Models.MailUpdateQueryModel"
        x-exportParamName: "Query"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/messages/mailbox/{folderID}:
    put:
      tags:
      - "Messages"
      summary: "Rename folder\r\n<param name=\"folderID\">The ID of the user's folder.</param><param\
        \ name=\"query\">New folder name</param>"
      operationId: "Messages_RenameeFolder"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "folderID"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "FolderID"
      - in: "body"
        name: "query"
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Messages.Models.FolderQueryModel"
        x-exportParamName: "Query"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
    delete:
      tags:
      - "Messages"
      summary: "Delete folder\r\n<param name=\"folderID\">The ID of the user's folder.</param>"
      operationId: "Messages_DeleteFolder"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "folderID"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "FolderID"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/messages/mailbox/{folderID}/mark-all-read:
    put:
      tags:
      - "Messages"
      summary: "Update the message to mark as read"
      operationId: "Messages_UpdateAllMessages"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "folderID"
        in: "path"
        description: "The ID of the user's folder."
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "FolderID"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/messages/mailbox/{folderID}/move-messages:
    put:
      tags:
      - "Messages"
      summary: "Move messages to other folder."
      operationId: "Messages_MoveMessages"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "folderID"
        in: "path"
        description: "The ID of the target user's folder."
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "FolderID"
      - in: "body"
        name: "query"
        description: "Message Request Model to be updated. [fromBody]"
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Messages.Models.MailUpdateQueryModel"
        x-exportParamName: "Query"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/messages/alerts/mark-as-read:
    post:
      tags:
      - "Messages"
      summary: "Mark selected Alert(s) as read"
      operationId: "Messages_MarkUserAlertsAsRead"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "query"
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Messages.Models.AlertsQueryModel"
        x-exportParamName: "Query"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/messages/alerts/mark-all-read:
    post:
      tags:
      - "Messages"
      summary: "Mark ALL Alerts as read"
      operationId: "Messages_MarkAllUserAlertsAsRead"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/messages/alerts/delete:
    delete:
      tags:
      - "Messages"
      summary: "Delete selected Alert(s)"
      operationId: "Messages_DeleteUserAlerts"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      - name: "query.mainFK"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "QueryMainFK"
        x-optionalDataType: "Int32"
      - name: "query.deviceCultureName"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "QueryDeviceCultureName"
        x-optionalDataType: "String"
      - name: "query.alertIDs"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "QueryAlertIDs"
        x-optionalDataType: "String"
      - name: "query.alertPKs"
        in: "query"
        required: false
        type: "array"
        items:
          type: "integer"
          format: "int32"
        collectionFormat: "multi"
        x-exportParamName: "QueryAlertPKs"
      - name: "query.isRead"
        in: "query"
        required: false
        type: "boolean"
        x-exportParamName: "QueryIsRead"
        x-optionalDataType: "Bool"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/messages/alerts/delete-all:
    delete:
      tags:
      - "Messages"
      summary: "Delete ALL Alerts\r\n----------------\r\nWrapper to be consistent\
        \ with SM API. \r\nThere is currently no use case to call it from Message\
        \ Center UI"
      operationId: "Messages_DeleteAllUserAlerts"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/messages/mailbox/{folderID}/delete-all:
    delete:
      tags:
      - "Messages"
      summary: "Update the message to mark as read"
      operationId: "Messages_DeleteAllMessages"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "folderID"
        in: "path"
        description: "The ID of the user's folder."
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "FolderID"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/optin/{email}/{culture}:
    get:
      tags:
      - "OptIn"
      summary: "Returns a list of opt in subscription items for an email."
      operationId: "OptIn_GetOptInSettings"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "email"
        in: "path"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "Email"
      - name: "culture"
        in: "path"
        description: ""
        required: true
        type: "string"
        default: "en-US"
        x-exportParamName: "Culture"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Jeunesse.Profile.Core.OptIn.Models.OptInItemViewModel"
  /api/v1/optin/{email}:
    put:
      tags:
      - "OptIn"
      summary: "Updates an email's opt in subscription settings."
      operationId: "OptIn_UpdateOptInSettings"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "email"
        in: "path"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "Email"
      - in: "body"
        name: "model"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.OptIn.Models.OptInFormModel"
        x-exportParamName: "Model"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Jeunesse.Profile.Core.OptIn.Models.OptInItemViewModel"
    delete:
      tags:
      - "OptIn"
      summary: "Removes an email from all subscriptions"
      operationId: "OptIn_Unsubscribe"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "email"
        in: "path"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "Email"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/r3global/matrix:
    get:
      tags:
      - "R3Global"
      summary: "Get the 2x2 Matrix data for the authenticated user."
      operationId: "R3Global_GetUser2x2Matrix"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      - name: "request.childLegs"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "RequestChildLegs"
        x-optionalDataType: "Int32"
      - name: "request.outputDepth"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "RequestOutputDepth"
        x-optionalDataType: "Int32"
      - name: "request.shouldOverrideFullLegsCheck"
        in: "query"
        required: false
        type: "boolean"
        x-exportParamName: "RequestShouldOverrideFullLegsCheck"
        x-optionalDataType: "Bool"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Jeunesse.Profile.Core.R3Global.Models.MatrixNodeModel"
  /api/v1/r3global/matrix/{mainpk}/reset:
    put:
      tags:
      - "R3Global"
      summary: "Get the 2x2 Matrix data for the authenticated user."
      operationId: "R3Global_Reset2x2MatrixTimer"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainpk"
        in: "path"
        description: "The mainPK of the user whose timer is to be reset"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Mainpk"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/repsite:
    get:
      tags:
      - "RepSite"
      summary: "Gets the sponsor's replicated site information for the currently logged\
        \ in user."
      operationId: "RepSite_GetRepsiteInfo"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.RepSite.Models.ReplicateSiteViewModel"
  /api/v1/repsite/{alias}:
    get:
      tags:
      - "RepSite"
      summary: "Get replicated site information, this is primarily used by the jfront\
        \ for header navigation links"
      operationId: "RepSite_GetRepsiteInfo"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "alias"
        in: "path"
        description: "The siteurl of the distributor"
        required: true
        type: "string"
        x-exportParamName: "Alias"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.RepSite.Models.ReplicateSiteViewModel"
  /api/v1/repsite/invalidate:
    get:
      tags:
      - "RepSite"
      operationId: "RepSite_InvalidateRepSiteInfo"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/repsite/mainpk/{alias}:
    get:
      tags:
      - "RepSite"
      summary: "Gets the unique identifier based on the alias or siturl for a distributor"
      operationId: "RepSite_GetRepSiteMainPk"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "alias"
        in: "path"
        description: "the unique name a distributor has defined for their customers\
          \ and downline"
        required: true
        type: "string"
        x-exportParamName: "Alias"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "string"
  /api/v1/repsite/gawords/{alias}:
    get:
      tags:
      - "RepSite"
      summary: ""
      operationId: "RepSite_GetAdWords"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "alias"
        in: "path"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "Alias"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/repsite/impressum/{country}/{alias}:
    get:
      tags:
      - "RepSite"
      summary: "Get replicated site impressum information, this is used by Germany\
        \ and Austria"
      operationId: "RepSite_GetImpressumInfo"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "country"
        in: "path"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "Country"
      - name: "alias"
        in: "path"
        description: "The siteurl of the distributor"
        required: true
        type: "string"
        x-exportParamName: "Alias"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/repsite/discount-codes/{alias}:
    get:
      tags:
      - "RepSite"
      summary: "Returns active discount codes for a specific distributor and their\
        \ downline"
      operationId: "RepSite_GetDistributorDiscountCodes"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "alias"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Alias"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      - name: "cartType"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "CartType"
        x-optionalDataType: "String"
      - name: "countryCode"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "CountryCode"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Jeunesse.Profile.Core.RepSite.Models.DiscountCodeViewModel"
  /api/v1/repsite/sample/refer:
    post:
      tags:
      - "RepSite"
      summary: ""
      operationId: "RepSite_SendReferrerEmail"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.RepSite.Models.SampleReferrerFormModel"
        x-exportParamName: "Model"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/repsite/social/addlead:
    post:
      tags:
      - "RepSite"
      summary: "This is a pass through end point that redirects the data to the smart\
        \ mobile api.\r\nIt manages a couple of different calls to that api and was\
        \ determined to be better handled\r\nServer side rather than client"
      operationId: "RepSite_AddLead"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "lead"
        description: "Object with identifying properties of the lead"
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Social.Models.NewLeadFormModel"
        x-exportParamName: "Lead"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/repsite/url/validate/{siteUrl}:
    post:
      tags:
      - "RepSite"
      summary: "Validates if requested siteUrl is available and valid"
      operationId: "RepSite_ValidateSiteUrl"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "siteUrl"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "SiteUrl"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/server-reports/report-pdf/{reportId}:
    get:
      tags:
      - "ServerReports"
      summary: "Test endpoint for getting generated pdf from reportServer"
      operationId: "ServerReports_GetPdf"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "reportId"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ReportId"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/smartmobile/move-user/{mainPk}/{siteUrl}:
    get:
      tags:
      - "SmartMobile"
      summary: "Move Main user to SmartMobile."
      operationId: "SmartMobile_MoveMainUserToSmartMobile"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainPk"
        in: "path"
        description: "Main Users MainPK"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainPk"
      - name: "siteUrl"
        in: "path"
        description: "Main Users SitreUrl (Optional)."
        required: true
        type: "string"
        x-exportParamName: "SiteUrl"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: true
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/smartmobile/reports/{reportId}/parameters:
    get:
      tags:
      - "SmartMobile"
      summary: "Get report parameters."
      operationId: "SmartMobile_GetReportParameters"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "reportId"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ReportId"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/smartmobile/reports:
    get:
      tags:
      - "SmartMobile"
      summary: "Gets user's reports."
      operationId: "SmartMobile_GetReports"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      - name: "request.companyPK"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "RequestCompanyPK"
        x-optionalDataType: "Int32"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/smartmobile/mailbox/{folderID}/user-messages:
    get:
      tags:
      - "SmartMobile"
      summary: "Get mailbox messages for the user."
      operationId: "SmartMobile_GetMessage"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "folderID"
        in: "path"
        description: "The ID of the user's folder."
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "FolderID"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
    put:
      tags:
      - "SmartMobile"
      summary: "Updates messages to mark as read or deleted."
      operationId: "SmartMobile_UpdateAllMessages"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "folderID"
        in: "path"
        description: "The ID of the user's folder."
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "FolderID"
      - in: "body"
        name: "requestModel"
        description: "Message Request Model to be updated. [fromBody]"
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.SmartMobile.UpdateMessageRequest"
        x-exportParamName: "RequestModel"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/smartmobile/mailbox/{folderID}/user-messages/{messageID}:
    put:
      tags:
      - "SmartMobile"
      summary: "Update the message to mark as read or deleted."
      operationId: "SmartMobile_UpdateMessage"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "folderID"
        in: "path"
        description: "The ID of the user's folder."
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "FolderID"
      - name: "messageID"
        in: "path"
        description: "The ID of the user's message."
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MessageID"
      - in: "body"
        name: "requestModel"
        description: "Message Request Model to be updated. [fromBody]"
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.SmartMobile.UpdateMessageRequest"
        x-exportParamName: "RequestModel"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/smartmobile/registerDeviceToken:
    post:
      tags:
      - "SmartMobile"
      summary: "Register Mobile Application that will receive Push Notifications."
      operationId: "SmartMobile_RegisterDeviceToken"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "request"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.SmartMobile.RegisterDeviceTokenRequestModel"
        x-exportParamName: "Request"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/sponsorship/sponsor/{siteUrl}:
    get:
      tags:
      - "Sponsorship"
      summary: "Get the sponsor siteUrl"
      operationId: "Sponsorship_GetSponsorSiteUrl"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "siteUrl"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "SiteUrl"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/sponsorship/inDownline/{mainSiteUrl}/{downlineSiteUrl}:
    get:
      tags:
      - "Sponsorship"
      summary: "Check is user downline"
      operationId: "Sponsorship_TreeInDownline"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainSiteUrl"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "MainSiteUrl"
      - name: "downlineSiteUrl"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "DownlineSiteUrl"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/sponsorship:
    get:
      tags:
      - "Sponsorship"
      summary: "Get the sponsorship report data"
      operationId: "Sponsorship_GetSponsorshipTotal"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      - name: "mainSiteUrl"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "MainSiteUrl"
        x-optionalDataType: "String"
      - name: "siteURL"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "SiteURL"
        x-optionalDataType: "String"
      - name: "fName"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "FName"
        x-optionalDataType: "String"
      - name: "lName"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "LName"
        x-optionalDataType: "String"
      - name: "displayName"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "DisplayName"
        x-optionalDataType: "String"
      - name: "isCountedByPlatinum"
        in: "query"
        required: false
        type: "boolean"
        x-exportParamName: "IsCountedByPlatinum"
        x-optionalDataType: "Bool"
      - name: "statuses"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Statuses"
        x-optionalDataType: "String"
      - name: "highestRanks"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "HighestRanks"
        x-optionalDataType: "String"
      - name: "searchMainPK"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "SearchMainPK"
        x-optionalDataType: "Int32"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/sync/{entityName}:
    get:
      tags:
      - "Sync"
      operationId: "Sync_GetDataToSync"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "entityName"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "EntityName"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "string"
  /api/v1/sync/getPushOrders:
    get:
      tags:
      - "Sync"
      summary: ""
      operationId: "Sync_GetPushOrders"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters: []
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Synchronization.Models.PushOrderData"
  /api/v1/sync/getQueryStatusOrders:
    get:
      tags:
      - "Sync"
      summary: ""
      operationId: "Sync_GetQueryStatusOrders"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters: []
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Synchronization.Models.QueryOrderStatusData"
  /api/v1/sync:
    post:
      tags:
      - "Sync"
      operationId: "Sync_Sync"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Synchronization.Models.SyncDataFormModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "string"
  /api/v1/sync/set-status:
    post:
      tags:
      - "Sync"
      operationId: "Sync_SetSyncStatus"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Synchronization.Models.SyncDataFormModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "string"
  /api/v1/sync/processPushResults/{shippingOrdersFK}:
    post:
      tags:
      - "Sync"
      summary: ""
      operationId: "Sync_ProcessPushResults"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "shippingOrdersFK"
        in: "path"
        description: ""
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ShippingOrdersFK"
      - in: "body"
        name: "result"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Synchronization.Models.PushOrdersResult"
        x-exportParamName: "Result"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "boolean"
  /api/v1/sync/processQueryStatusResults/{queryStatusID}:
    post:
      tags:
      - "Sync"
      summary: ""
      operationId: "Sync_ProcessQueryStatusResults"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "queryStatusID"
        in: "path"
        description: ""
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "QueryStatusID"
      - in: "body"
        name: "result"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Synchronization.Models.QueryOrderResultData"
        x-exportParamName: "Result"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "boolean"
  /api/v1/test:
    get:
      tags:
      - "Test"
      operationId: "Test_Get"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "string"
  /api/v1/nuget-test:
    get:
      tags:
      - "Test"
      operationId: "Test_NugetTester"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "string"
  /api/v1/training/records:
    get:
      tags:
      - "Training"
      summary: "Returns the list to training records available from Moodle."
      operationId: "Training_GetTrainingRecordsForUser"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Jeunesse.Profile.Core.Training.Models.TrainingRecordViewModel"
  /api/v1/training/setup:
    post:
      tags:
      - "Training"
      summary: "Sets up a training record for a user and returns the training url."
      operationId: "Training_SetupTrainingRecordsForUser"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Training.Models.TrainingSetupQueryModel"
        x-exportParamName: "Model"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Training.Models.TrainingSetupViewModel"
  /api/v1/training/record:
    post:
      tags:
      - "Training"
      summary: "Records a training log for a user"
      operationId: "Training_RecordTrainingAction"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "user"
        in: "query"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "User"
      - name: "events"
        in: "query"
        required: true
        type: "string"
        x-exportParamName: "Events"
      - name: "date"
        in: "query"
        required: true
        type: "string"
        format: "date-time"
        x-exportParamName: "Date"
      - name: "course"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Course"
        x-optionalDataType: "String"
      - name: "chapter"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Chapter"
        x-optionalDataType: "String"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "string"
  /api/v1/wallet/settings:
    get:
      tags:
      - "Wallet"
      operationId: "Wallet_GetWalletSettings"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.WalletHomeSettings"
  /api/v1/wallet/paycard/state:
    get:
      tags:
      - "Wallet"
      operationId: "Wallet_GetPayCardState"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.PayCardRegisterAllowed"
  /api/v1/wallet/paycard/replace:
    get:
      tags:
      - "Wallet"
      operationId: "Wallet_GetPayCardReplaceState"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.PayCardRegisterAllowed"
    post:
      tags:
      - "Wallet"
      operationId: "Wallet_ReplacePayCard"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.PayCardRegisterAllowed"
  /api/v1/wallet/payment-methods:
    get:
      tags:
      - "Wallet"
      operationId: "Wallet_GetUserPaymentMethods"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.PaymentMethodModel"
  /api/v1/wallet/paycard/ipayoutbin:
    get:
      tags:
      - "Wallet"
      operationId: "Wallet_GetIPayoutCardsBin"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              type: "string"
  /api/v1/wallet/account:
    get:
      tags:
      - "Wallet"
      operationId: "Wallet_GetAccountDetails"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainId"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "MainId"
        x-optionalDataType: "Int32"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.AccountDetailsModel"
  /api/v1/wallet/photoId:
    get:
      tags:
      - "Wallet"
      operationId: "Wallet_GetPhotoIdData"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainId"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "MainId"
        x-optionalDataType: "Int32"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.PhotoIdModel"
    post:
      tags:
      - "Wallet"
      operationId: "Wallet_UpdatePhotoIdData"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.PhotoId.UpdatePhotoIdFormModel"
        x-exportParamName: "Model"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.PhotoIdModel"
  /api/v1/wallet/bank-book:
    get:
      tags:
      - "Wallet"
      operationId: "Wallet_GetUserBankBook"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainId"
        in: "query"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainId"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.BankBook.BankBookFormModel"
    post:
      tags:
      - "Wallet"
      operationId: "Wallet_UpdateUserBankBook"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "bankBook"
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.BankBook.BankBookFormModel"
        x-exportParamName: "BankBook"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "string"
  /api/v1/wallet/bank-document:
    get:
      tags:
      - "Wallet"
      operationId: "Wallet_GetUserBankDocument"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainId"
        in: "query"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainId"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.BankDocument.BankDocumentModel"
    post:
      tags:
      - "Wallet"
      operationId: "Wallet_UpdateUserBankDocument"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "bankDocument"
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.BankDocument.BankDocumentFormModel"
        x-exportParamName: "BankDocument"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "string"
  /api/v1/wallet/eft/local/status:
    get:
      tags:
      - "Wallet"
      operationId: "Wallet_GetEFTLocalStatus"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainFk"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "MainFk"
        x-optionalDataType: "Int32"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.EFT.EFTLocalStatusModel"
  /api/v1/wallet/eft/personal-info:
    get:
      tags:
      - "Wallet"
      operationId: "Wallet_GetPersonalInfo"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainFk"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "MainFk"
        x-optionalDataType: "Int32"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.AccountDetailsModel"
  /api/v1/wallet/eft/account-currencies/{bankCountry}:
    get:
      tags:
      - "Wallet"
      operationId: "Wallet_GetAccountCurrencies"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "bankCountry"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "BankCountry"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.EFT.AccountCurrencyModel"
  /api/v1/wallet/fund-request-checkruns:
    get:
      tags:
      - "Wallet"
      operationId: "Wallet_GetFundRequestCheckRuns"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainId"
        in: "query"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainId"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.FundRequestInvoice.FundRequestCheckRunModel"
  /api/v1/wallet/eft/local/personal-info:
    get:
      tags:
      - "Wallet"
      operationId: "Wallet_GetPersonalInfoLocal"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainFk"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "MainFk"
        x-optionalDataType: "Int32"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.AccountDetailsModel"
  /api/v1/wallet/funds-request/settings:
    get:
      tags:
      - "Wallet"
      operationId: "Wallet_GetFundsRequestSettings"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "userName"
        in: "query"
        required: true
        type: "string"
        x-exportParamName: "UserName"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.FundRequest.FundRequestSettingsModel"
  /api/v1/wallet/payout-methods/{activeOnly}:
    get:
      tags:
      - "Wallet"
      operationId: "Wallet_GetUserPayoutMethods"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "activeOnly"
        in: "path"
        required: true
        type: "boolean"
        x-exportParamName: "ActiveOnly"
      - name: "mainId"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "MainId"
        x-optionalDataType: "Int32"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.PayoutMethodModel"
  /api/v1/wallet/eft/local/required-documents:
    get:
      tags:
      - "Wallet"
      operationId: "Wallet_GetEFTRequiredDocuments"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainFk"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "MainFk"
        x-optionalDataType: "Int32"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.EFT.DocumentModel"
  /api/v1/wallet/identification-types:
    get:
      tags:
      - "Wallet"
      operationId: "Wallet_GetIdentificationTypes"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "countryCode"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "CountryCode"
        x-optionalDataType: "String"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.IdentificationTypeModel"
  /api/v1/wallet/eft/bank-countries/{isLocalEFT}:
    get:
      tags:
      - "Wallet"
      operationId: "Wallet_GetBankCountries"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "isLocalEFT"
        in: "path"
        required: true
        type: "boolean"
        x-exportParamName: "IsLocalEFT"
      - name: "mainFk"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "MainFk"
        x-optionalDataType: "Int32"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.EFT.BankCountryModel"
  /api/v1/wallet/account-history/wallet-balance:
    get:
      tags:
      - "Wallet"
      operationId: "Wallet_GetWalletBalance"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      - name: "query.userName"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "QueryUserName"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.FundRequest.FundRequestModel"
  /api/v1/wallet/fund-request-invoice-details:
    get:
      tags:
      - "Wallet"
      operationId: "Wallet_GetFundRequestInvoiceDetails"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainId"
        in: "query"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainId"
      - name: "withholdRecordId"
        in: "query"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "WithholdRecordId"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.FundRequestInvoice.FundRequestInvoiceModel"
  /api/v1/wallet/funds-request:
    get:
      tags:
      - "Wallet"
      operationId: "Wallet_GetFundsRequest"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      - name: "query.mainId"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "QueryMainId"
        x-optionalDataType: "Int32"
      - name: "query.pageSize"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "QueryPageSize"
        x-optionalDataType: "Int32"
      - name: "query.pageNumber"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "QueryPageNumber"
        x-optionalDataType: "Int32"
      - name: "query.orderBy"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "QueryOrderBy"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.FundRequest.FundRequestModel"
    post:
      tags:
      - "Wallet"
      operationId: "Wallet_CreateFundRequest"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "formModel"
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.FundRequest.FundRequestFormModel"
        x-exportParamName: "FormModel"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "boolean"
  /api/v1/wallet/account-history:
    get:
      tags:
      - "Wallet"
      operationId: "Wallet_GetAccountHistory"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      - name: "query.isSequential"
        in: "query"
        required: false
        type: "boolean"
        x-exportParamName: "QueryIsSequential"
        x-optionalDataType: "Bool"
      - name: "query.userName"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "QueryUserName"
        x-optionalDataType: "String"
      - name: "query.pageSize"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "QueryPageSize"
        x-optionalDataType: "Int32"
      - name: "query.pageNumber"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "QueryPageNumber"
        x-optionalDataType: "Int32"
      - name: "query.orderBy"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "QueryOrderBy"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.FundRequest.FundRequestModel"
  /api/v1/wallet/signup-tokens:
    get:
      tags:
      - "Wallet"
      operationId: "Wallet_GetSignupTokens"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      - name: "mainId"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "MainId"
        x-optionalDataType: "Int32"
      - name: "tokenName"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "TokenName"
        x-optionalDataType: "String"
      - name: "tokenStartDate"
        in: "query"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "TokenStartDate"
        x-optionalDataType: "Time"
      - name: "tokenEndDate"
        in: "query"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "TokenEndDate"
        x-optionalDataType: "Time"
      - name: "tokenStatus"
        in: "query"
        required: true
        type: "string"
        x-exportParamName: "TokenStatus"
      - name: "useMainOrdersFK"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "UseMainOrdersFK"
        x-optionalDataType: "Int32"
      - name: "pageSize"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      - name: "pageNumber"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "PageNumber"
        x-optionalDataType: "Int32"
      - name: "orderBy"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "OrderBy"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.SignupTokens.SignupTokenViewModel"
    post:
      tags:
      - "Wallet"
      operationId: "Wallet_CreateSignupToken"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "commandFormModel"
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.SignupTokens.SignupTokenFormModel"
        x-exportParamName: "CommandFormModel"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.SignupTokens.GetSignupTokensReportResult"
  /api/v1/wallet/paycard:
    post:
      tags:
      - "Wallet"
      operationId: "Wallet_RegisterPaycard"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.RegisterPayСardFormModel"
        x-exportParamName: "Model"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.RegisterPayС\
              ardViewModel"
  /api/v1/wallet/add-funds:
    post:
      tags:
      - "Wallet"
      operationId: "Wallet_AddFundsGetRedirectUrl"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "form"
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.AddFundsFormModel"
        x-exportParamName: "Form"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "string"
  /api/v1/wallet/admin-photoId:
    post:
      tags:
      - "Wallet"
      operationId: "Wallet_AdminUpdatePhotoIdData"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.PhotoId.AdminUpdatePhotoIdFormModel"
        x-exportParamName: "Model"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "string"
  /api/v1/wallet/paycard/validate:
    post:
      tags:
      - "Wallet"
      operationId: "Wallet_GetPayCardValidation"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.PayCardModel"
        x-exportParamName: "Model"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.PayCardRegisterAllowed"
  /api/v1/wallet/ewallet-login-form:
    post:
      tags:
      - "Wallet"
      operationId: "Wallet_GetEWalletLoginForm"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.MerchantIPayoutModel"
  /api/v1/wallet/fund-request-update-invoice:
    post:
      tags:
      - "Wallet"
      operationId: "Wallet_UpdateUserFundRequestInvoice"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "fundRequestInvoice"
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.FundRequestInvoice.FundRequestInvoiceFormModel"
        x-exportParamName: "FundRequestInvoice"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "string"
  /api/v1/wallet/eft/bank-info:
    post:
      tags:
      - "Wallet"
      operationId: "Wallet_SaveEFTBankInfo"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.EFT.EFTFormModel"
        x-exportParamName: "Model"
      - name: "mainFk"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "MainFk"
        x-optionalDataType: "Int32"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "boolean"
  /api/v1/wallet/eft/deactivate:
    post:
      tags:
      - "Wallet"
      operationId: "Wallet_DeactivateBankAccount"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainId"
        in: "query"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainId"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.EFT.EFTResponseModel"
  /api/v1/wallet/payout-methods:
    post:
      tags:
      - "Wallet"
      operationId: "Wallet_UpdateUserPayoutMethods"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "methods"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.PayoutMethodModel"
        x-exportParamName: "Methods"
      - name: "mainId"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "MainId"
        x-optionalDataType: "Int32"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/wallet/reset-password:
    post:
      tags:
      - "Wallet"
      operationId: "Wallet_ResetWalletPassword"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainId"
        in: "query"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainId"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "string"
  /api/v1/wallet/eft/local/bank-info:
    post:
      tags:
      - "Wallet"
      operationId: "Wallet_SaveEFTLocalBankInfo"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.EFT.EFTLocalFormModel"
        x-exportParamName: "Model"
      - name: "mainFk"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "MainFk"
        x-optionalDataType: "Int32"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.EFT.EFTResponseModel"
  /api/v1/wallet/signup-tokens/{tokenId}:
    delete:
      tags:
      - "Wallet"
      operationId: "Wallet_DeleteSignupToken"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "tokenId"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "TokenId"
      - name: "mainId"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "MainId"
        x-optionalDataType: "Int32"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.SignupTokens.GetSignupTokensReportResult"
  /api/v1/wallet/funds-request/{fundRequestId}:
    delete:
      tags:
      - "Wallet"
      operationId: "Wallet_DeleteFundRequest"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "fundRequestId"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "FundRequestId"
      - name: "mainId"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "MainId"
        x-optionalDataType: "Int32"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "boolean"
  /api/v1/wallet-member/question:
    get:
      tags:
      - "WalletMember"
      summary: "Get question for reset password"
      operationId: "WalletMember_GetSecurityQuestions"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.CheckAttemptsResponse"
  /api/v1/wallet-member/questions:
    get:
      tags:
      - "WalletMember"
      summary: "Get questions list"
      operationId: "WalletMember_GetQuestionsList"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.QuestionAnswer"
    post:
      tags:
      - "WalletMember"
      summary: "Set security questions and answers"
      operationId: "WalletMember_SetQuestions"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.QuestionsFormModel"
        x-exportParamName: "Model"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "boolean"
  /api/v1/wallet-member/check-attempts:
    get:
      tags:
      - "WalletMember"
      summary: "Check actual state of wallet login process"
      operationId: "WalletMember_CheckAttempts"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.CheckAttemptsResponse"
  /api/v1/wallet-member/create:
    post:
      tags:
      - "WalletMember"
      summary: "Create walet account"
      operationId: "WalletMember_CreateWalletAccount"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.CreateAccountModel"
        x-exportParamName: "Model"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "boolean"
  /api/v1/wallet-member/reset-code:
    post:
      tags:
      - "WalletMember"
      summary: "Generate reset code and send to email\\sms"
      operationId: "WalletMember_GetResetCode"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.GenerateResetCodeFormModel"
        x-exportParamName: "Model"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "boolean"
  /api/v1/wallet-member/reset-password:
    post:
      tags:
      - "WalletMember"
      summary: "Reset password by resetcode"
      operationId: "WalletMember_ResetPassword"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.ResetPasswordFormModel"
        x-exportParamName: "Model"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "string"
  /api/v1/wallet-member/update-password:
    post:
      tags:
      - "WalletMember"
      summary: "Reset password by resetcode"
      operationId: "WalletMember_UpdatePassword"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        required: true
        schema:
          $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.UpdatePasswordFormModel"
        x-exportParamName: "Model"
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1.0"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "boolean"
securityDefinitions:
  apiKey:
    description: "API Key Authentication"
    type: "apiKey"
    name: "authToken"
    in: "header"
definitions:
  Jeunesse.Profile.Core.Address.AddressModelView:
    type: "object"
    properties:
      description:
        type: "string"
      address1:
        type: "string"
      city:
        type: "string"
      state:
        type: "string"
      zipCode:
        type: "string"
      country:
        type: "string"
      placeId:
        type: "string"
    example:
      zipCode: "zipCode"
      country: "country"
      city: "city"
      address1: "address1"
      placeId: "placeId"
      description: "description"
      state: "state"
  Jeunesse.Profile.Core.Address.AddressValidationQueryModel:
    type: "object"
    properties:
      selectedShippingMethod:
        type: "integer"
        format: "int32"
      isAutoComplete:
        type: "boolean"
      description:
        type: "string"
      address1:
        type: "string"
      city:
        type: "string"
      state:
        type: "string"
      zipCode:
        type: "string"
      country:
        type: "string"
      placeId:
        type: "string"
  Jeunesse.Profile.Core.Address.Models.AddressValidationViewModel:
    type: "object"
    properties:
      suggestedAddresses:
        type: "array"
        items:
          $ref: "#/definitions/Jeunesse.Profile.Core.Address.AddressModelView"
      isAddressValid:
        type: "boolean"
    example:
      suggestedAddresses:
      - zipCode: "zipCode"
        country: "country"
        city: "city"
        address1: "address1"
        placeId: "placeId"
        description: "description"
        state: "state"
      - zipCode: "zipCode"
        country: "country"
        city: "city"
        address1: "address1"
        placeId: "placeId"
        description: "description"
        state: "state"
      isAddressValid: true
  Jeunesse.Profile.Core.Wallet.Models.Approvals.ApprovalTaskQueryModel:
    type: "object"
    properties:
      distributorSiteUrl:
        type: "string"
      reqSiteUrl:
        type: "string"
      typeFK:
        type: "integer"
        format: "int32"
      statusFKs:
        type: "string"
      pageSize:
        type: "integer"
        format: "int32"
      pageNumber:
        type: "integer"
        format: "int32"
      orderBy:
        type: "string"
  Jeunesse.Profile.Core.Wallet.Models.Approvals.ApprovalTasksViewModel:
    type: "object"
    properties:
      totalCount:
        type: "integer"
        format: "int32"
      tasks:
        type: "array"
        items:
          $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.Approvals.ApprovalTaskResponseModel"
    example:
      totalCount: 0
      tasks:
      - distributorSiteUrl: "distributorSiteUrl"
        approvalDate: "2000-01-23T04:56:07.000+00:00"
        convTotal: 7.061401241503109
        insideTopMainFK: 3
        mainOrdersPK: 5
        description: "description"
        feeTypeDesc: "feeTypeDesc"
        holdDesc: "holdDesc"
        approvalSiteUrl: "approvalSiteUrl"
        score: 2
        dateToPay: "2000-01-23T04:56:07.000+00:00"
        currencyFormatString: "currencyFormatString"
        countryCode: "countryCode"
        approvalQueuePK: 6
        lastComment: "lastComment"
        daysLeft: 5
        amount: "amount"
        decision: "decision"
        level: 9
        isTaxExempt: true
        accountType: "accountType"
        fullName: "fullName"
        requestorSiteUrl: "requestorSiteUrl"
        createdDate: "2000-01-23T04:56:07.000+00:00"
        currencySymblol: "currencySymblol"
        countryName: "countryName"
        xmlReviewOrderHist: "xmlReviewOrderHist"
        mainOrdersFK: 1
        orderDate: "2000-01-23T04:56:07.000+00:00"
        currencyCode: "currencyCode"
        status: "status"
      - distributorSiteUrl: "distributorSiteUrl"
        approvalDate: "2000-01-23T04:56:07.000+00:00"
        convTotal: 7.061401241503109
        insideTopMainFK: 3
        mainOrdersPK: 5
        description: "description"
        feeTypeDesc: "feeTypeDesc"
        holdDesc: "holdDesc"
        approvalSiteUrl: "approvalSiteUrl"
        score: 2
        dateToPay: "2000-01-23T04:56:07.000+00:00"
        currencyFormatString: "currencyFormatString"
        countryCode: "countryCode"
        approvalQueuePK: 6
        lastComment: "lastComment"
        daysLeft: 5
        amount: "amount"
        decision: "decision"
        level: 9
        isTaxExempt: true
        accountType: "accountType"
        fullName: "fullName"
        requestorSiteUrl: "requestorSiteUrl"
        createdDate: "2000-01-23T04:56:07.000+00:00"
        currencySymblol: "currencySymblol"
        countryName: "countryName"
        xmlReviewOrderHist: "xmlReviewOrderHist"
        mainOrdersFK: 1
        orderDate: "2000-01-23T04:56:07.000+00:00"
        currencyCode: "currencyCode"
        status: "status"
  Jeunesse.Profile.Core.Wallet.Models.Approvals.ApprovalTaskResponseModel:
    type: "object"
    properties:
      approvalQueuePK:
        type: "integer"
        format: "int32"
      createdDate:
        type: "string"
        format: "date-time"
      distributorSiteUrl:
        type: "string"
      countryCode:
        type: "string"
      countryName:
        type: "string"
      requestorSiteUrl:
        type: "string"
      status:
        type: "string"
      approvalDate:
        type: "string"
        format: "date-time"
      approvalSiteUrl:
        type: "string"
      lastComment:
        type: "string"
      accountType:
        type: "string"
      amount:
        type: "string"
      dateToPay:
        type: "string"
        format: "date-time"
      description:
        type: "string"
      feeTypeDesc:
        type: "string"
      holdDesc:
        type: "string"
      isTaxExempt:
        type: "boolean"
      mainOrdersFK:
        type: "integer"
        format: "int32"
      mainOrdersPK:
        type: "integer"
        format: "int32"
      orderDate:
        type: "string"
        format: "date-time"
      daysLeft:
        type: "integer"
        format: "int32"
      score:
        type: "integer"
        format: "int32"
      decision:
        type: "string"
      currencyCode:
        type: "string"
      currencySymblol:
        type: "string"
      currencyFormatString:
        type: "string"
      convTotal:
        type: "number"
        format: "double"
      xmlReviewOrderHist:
        type: "string"
      level:
        type: "integer"
        format: "int32"
      insideTopMainFK:
        type: "integer"
        format: "int32"
      fullName:
        type: "string"
    example:
      distributorSiteUrl: "distributorSiteUrl"
      approvalDate: "2000-01-23T04:56:07.000+00:00"
      convTotal: 7.061401241503109
      insideTopMainFK: 3
      mainOrdersPK: 5
      description: "description"
      feeTypeDesc: "feeTypeDesc"
      holdDesc: "holdDesc"
      approvalSiteUrl: "approvalSiteUrl"
      score: 2
      dateToPay: "2000-01-23T04:56:07.000+00:00"
      currencyFormatString: "currencyFormatString"
      countryCode: "countryCode"
      approvalQueuePK: 6
      lastComment: "lastComment"
      daysLeft: 5
      amount: "amount"
      decision: "decision"
      level: 9
      isTaxExempt: true
      accountType: "accountType"
      fullName: "fullName"
      requestorSiteUrl: "requestorSiteUrl"
      createdDate: "2000-01-23T04:56:07.000+00:00"
      currencySymblol: "currencySymblol"
      countryName: "countryName"
      xmlReviewOrderHist: "xmlReviewOrderHist"
      mainOrdersFK: 1
      orderDate: "2000-01-23T04:56:07.000+00:00"
      currencyCode: "currencyCode"
      status: "status"
  Jeunesse.Profile.Core.Wallet.Models.Approvals.ApprovalTaskUpdateQueryModel:
    type: "object"
    properties:
      approvalQueuePK:
        type: "integer"
        format: "int32"
      status:
        type: "string"
      comment:
        type: "string"
  Jeunesse.Profile.Core.Dashboards.Models.TeamMembersModel:
    type: "object"
    properties:
      rank:
        type: "integer"
        format: "int32"
      count:
        type: "integer"
        format: "int32"
      rankName:
        type: "string"
    example:
      rankName: "rankName"
      count: 6
      rank: 0
  Jeunesse.Profile.Core.Dashboards.Models.CommissionModel:
    type: "object"
    properties:
      nextPayDate:
        type: "string"
        format: "date-time"
      commissions:
        type: "array"
        items:
          $ref: "#/definitions/Jeunesse.Profile.Core.Dashboards.Models.CommissionItemModel"
      currencySign:
        type: "string"
    example:
      currencySign: "currencySign"
      commissions:
      - commissionName: "commissionName"
        commissionValue: 0.8008281904610115
      - commissionName: "commissionName"
        commissionValue: 0.8008281904610115
      nextPayDate: "2000-01-23T04:56:07.000+00:00"
  Jeunesse.Profile.Core.Dashboards.Models.CommissionItemModel:
    type: "object"
    properties:
      commissionName:
        type: "string"
      commissionValue:
        type: "number"
        format: "double"
    example:
      commissionName: "commissionName"
      commissionValue: 0.8008281904610115
  Jeunesse.Profile.Core.Dashboards.Models.PersonalInfoModel:
    type: "object"
    properties:
      siteURL:
        type: "string"
      mostRecentMonthSD:
        type: "string"
        format: "date-time"
      mostRecentMonthED:
        type: "string"
        format: "date-time"
      currentRank:
        type: "integer"
        format: "int32"
      currentRankName:
        type: "string"
      nextRank:
        type: "integer"
        format: "int32"
      nextRankName:
        type: "string"
      accumulatingSP:
        type: "number"
        format: "double"
      requireSPForNextRank:
        type: "number"
        format: "double"
      neededSPForNextRank:
        type: "number"
        format: "double"
      legsSM:
        type: "integer"
        format: "int32"
      requiredLegsSM:
        type: "integer"
        format: "int32"
      legsTL:
        type: "integer"
        format: "int32"
      requiredLegsTL:
        type: "integer"
        format: "int32"
      legsD:
        type: "integer"
        format: "int32"
      requiredLegsD:
        type: "integer"
        format: "int32"
      retailCustomerCount:
        type: "integer"
        format: "int32"
      requiredRetailCustomerCount:
        type: "integer"
        format: "int32"
      mOrHigherCount:
        type: "integer"
        format: "int32"
      requiredMOrHigherCount:
        type: "integer"
        format: "int32"
      strMoreThanReqSPLegs:
        type: "string"
      strMoreThanReqMLegs:
        type: "string"
      rankAdvanceEligibleDisplayText:
        type: "string"
      paidAsRankName:
        type: "string"
      highestAchievedRankName:
        type: "string"
      highestAchievedRankDate:
        type: "string"
        format: "date-time"
      isPaidAsQualified:
        type: "boolean"
      currentSP:
        type: "number"
        format: "double"
      requiredMonthlySP:
        type: "number"
        format: "double"
      autoshipCustomerCount:
        type: "integer"
        format: "int32"
      requiredAutoshipCustomerCount:
        type: "integer"
        format: "int32"
    example:
      mOrHigherCount: 1
      requiredLegsD: 4
      siteURL: "siteURL"
      strMoreThanReqSPLegs: "strMoreThanReqSPLegs"
      retailCustomerCount: 7
      requiredMOrHigherCount: 1
      mostRecentMonthSD: "2000-01-23T04:56:07.000+00:00"
      paidAsRankName: "paidAsRankName"
      requiredLegsSM: 7
      currentRank: 0
      legsTL: 9
      requiredAutoshipCustomerCount: 4
      nextRank: 6
      isPaidAsQualified: true
      highestAchievedRankDate: "2000-01-23T04:56:07.000+00:00"
      accumulatingSP: 1.4658129805029452
      legsD: 2
      highestAchievedRankName: "highestAchievedRankName"
      autoshipCustomerCount: 1
      currentRankName: "currentRankName"
      strMoreThanReqMLegs: "strMoreThanReqMLegs"
      currentSP: 6.84685269835264
      neededSPForNextRank: 5.637376656633329
      requiredLegsTL: 3
      rankAdvanceEligibleDisplayText: "rankAdvanceEligibleDisplayText"
      requireSPForNextRank: 5.962133916683182
      nextRankName: "nextRankName"
      legsSM: 2
      mostRecentMonthED: "2000-01-23T04:56:07.000+00:00"
      requiredMonthlySP: 7.457744773683766
      requiredRetailCustomerCount: 1
  Jeunesse.Profile.Core.Dashboards.Models.TopProducersModel:
    type: "object"
    properties:
      topProducers:
        type: "array"
        items:
          $ref: "#/definitions/Jeunesse.Profile.Core.Dashboards.Models.TopProducerModel"
      onDate:
        type: "string"
        format: "date-time"
    example:
      onDate: "2000-01-23T04:56:07.000+00:00"
      topProducers:
      - volume: 6.027456183070403
        siteUrl: "siteUrl"
        name: "name"
        mainPK: 0
      - volume: 6.027456183070403
        siteUrl: "siteUrl"
        name: "name"
        mainPK: 0
  Jeunesse.Profile.Core.Dashboards.Models.TopProducerModel:
    type: "object"
    properties:
      mainPK:
        type: "integer"
        format: "int32"
      siteUrl:
        type: "string"
      name:
        type: "string"
      volume:
        type: "number"
        format: "double"
    example:
      volume: 6.027456183070403
      siteUrl: "siteUrl"
      name: "name"
      mainPK: 0
  Jeunesse.Profile.Core.Dashboards.Models.BpSpSnapshotModel:
    type: "object"
    properties:
      category:
        type: "string"
      bp:
        type: "number"
        format: "double"
      sp:
        type: "number"
        format: "double"
      tlGroupBP:
        type: "number"
        format: "double"
      tlGroupSP:
        type: "number"
        format: "double"
      dGroupBP:
        type: "number"
        format: "double"
      dGroupSP:
        type: "number"
        format: "double"
      sdGroupBP:
        type: "number"
        format: "double"
      sdGroupSP:
        type: "number"
        format: "double"
      ndGroupBP:
        type: "number"
        format: "double"
      ndGroupSP:
        type: "number"
        format: "double"
      spRequired:
        type: "number"
        format: "double"
      spNeeded:
        type: "number"
        format: "double"
      currRank:
        type: "string"
    example:
      tlGroupBP: 1.4658129805029452
      dGroupBP: 5.637376656633329
      sdGroupSP: 9.301444243932576
      ndGroupBP: 3.616076749251911
      spRequired: 4.145608029883936
      spNeeded: 7.386281948385884
      bp: 0.8008281904610115
      tlGroupSP: 5.962133916683182
      dGroupSP: 2.3021358869347655
      sdGroupBP: 7.061401241503109
      ndGroupSP: 2.027123023002322
      category: "category"
      sp: 6.027456183070403
      currRank: "currRank"
  Jeunesse.Profile.Core.Dashboards.Models.PersonalSnapshotModel:
    type: "object"
    properties:
      isInAutoship:
        type: "boolean"
      totalPlannersCount:
        type: "integer"
        format: "int32"
      newPlannersCount:
        type: "integer"
        format: "int32"
      personalPlannersCount:
        type: "integer"
        format: "int32"
      newPersonalPlannersCount:
        type: "integer"
        format: "int32"
      plannersInAutoshipCount:
        type: "integer"
        format: "int32"
      plannersAutoshipOrdersCount:
        type: "integer"
        format: "int32"
      totalCustomersCount:
        type: "integer"
        format: "int32"
      newCustomersCount:
        type: "integer"
        format: "int32"
      personalCustomersCount:
        type: "integer"
        format: "int32"
      newPersonalCustomersCount:
        type: "integer"
        format: "int32"
      customersInAutoshipCount:
        type: "integer"
        format: "int32"
      customersAutoshipOrdersCount:
        type: "integer"
        format: "int32"
      travelPointsEarned:
        type: "integer"
        format: "int32"
      travelPointsNeeded:
        type: "integer"
        format: "int32"
      travelPointsPromoName:
        type: "string"
    example:
      isInAutoship: true
      travelPointsNeeded: 1
      newCustomersCount: 9
      customersInAutoshipCount: 4
      totalPlannersCount: 0
      totalCustomersCount: 7
      customersAutoshipOrdersCount: 7
      newPersonalCustomersCount: 2
      newPersonalPlannersCount: 5
      plannersAutoshipOrdersCount: 2
      travelPointsEarned: 1
      personalPlannersCount: 1
      newPlannersCount: 6
      personalCustomersCount: 3
      travelPointsPromoName: "travelPointsPromoName"
      plannersInAutoshipCount: 5
  Jeunesse.Profile.Core.Dashboards.Models.EnrolleeSalesModel:
    type: "object"
    properties:
      salesDT:
        type: "string"
        format: "date-time"
      salesAmount:
        type: "integer"
        format: "int32"
    example:
      salesAmount: 0
      salesDT: "2000-01-23T04:56:07.000+00:00"
  Jeunesse.Profile.Core.Dashboards.Models.CustomerCommissionsTierModel:
    type: "object"
    properties:
      customerCommTierFK:
        type: "integer"
        format: "int32"
      customerCommTier:
        type: "string"
      earnedRevenue:
        type: "number"
        format: "double"
      leftRevenue:
        type: "number"
        format: "double"
      nextTier:
        type: "string"
      nextCommissionRate:
        type: "number"
        format: "double"
      isActive:
        type: "boolean"
      currentCommissionRate:
        type: "number"
        format: "double"
    example:
      nextTier: "nextTier"
      earnedRevenue: 6.027456183070403
      currentCommissionRate: 5.637376656633329
      customerCommTier: "customerCommTier"
      isActive: true
      customerCommTierFK: 0
      leftRevenue: 1.4658129805029452
      nextCommissionRate: 5.962133916683182
  Jeunesse.Profile.Core.Dashboards.Models.CustomerSalesCommissionsModel:
    type: "object"
    properties:
      fDoM:
        type: "string"
        format: "date-time"
      amount:
        type: "number"
        format: "double"
    example:
      amount: 0.8008281904610115
      fDoM: "2000-01-23T04:56:07.000+00:00"
  Jeunesse.Profile.Core.Dashboards.Models.DashbortdPromoWinnerModel:
    type: "object"
    properties:
      rank:
        type: "integer"
        format: "int32"
      siteURL:
        type: "string"
      salesAmount:
        type: "integer"
        format: "int32"
      refreshDT:
        type: "string"
        format: "date-time"
    example:
      refreshDT: "2000-01-23T04:56:07.000+00:00"
      siteURL: "siteURL"
      salesAmount: 6
      rank: 0
  Jeunesse.Profile.Core.Dashboards.Models.DashboardPromoUserDataModel:
    type: "object"
    properties:
      promoStartDT:
        type: "string"
        format: "date-time"
      promoEndDT:
        type: "string"
        format: "date-time"
      promoName:
        type: "string"
      salesRank:
        type: "string"
      refreshDT:
        type: "string"
        format: "date-time"
      personalVolume:
        type: "integer"
        format: "int32"
      l1Sales:
        type: "integer"
        format: "int32"
      personalSales:
        type: "integer"
        format: "int32"
      totalSales:
        type: "integer"
        format: "int32"
      neededSales:
        type: "integer"
        format: "int32"
    example:
      promoName: "promoName"
      promoStartDT: "2000-01-23T04:56:07.000+00:00"
      promoEndDT: "2000-01-23T04:56:07.000+00:00"
      refreshDT: "2000-01-23T04:56:07.000+00:00"
      l1Sales: 6
      totalSales: 5
      neededSales: 5
      salesRank: "salesRank"
      personalVolume: 0
      personalSales: 1
  Jeunesse.Profile.Core.Dashboards.Models.MassiveBonusPromoModel:
    type: "object"
    properties:
      promoPK:
        type: "integer"
        format: "int32"
      promoTotalPGV:
        type: "integer"
        format: "int32"
      promoBonusAmount:
        type: "integer"
        format: "int32"
      promoRN:
        type: "integer"
        format: "int32"
      distPayLegPGV:
        type: "integer"
        format: "int32"
      isNewMAP:
        type: "boolean"
      distTotalPGV:
        type: "integer"
        format: "int32"
      distExtraTotalPGV:
        type: "integer"
        format: "int32"
      distQualPGV:
        type: "integer"
        format: "int32"
      distExtraQualPGV:
        type: "integer"
        format: "int32"
      distBonusAmount:
        type: "integer"
        format: "int32"
      distExtraBonusAmount:
        type: "integer"
        format: "int32"
      distAddBonus:
        type: "string"
      distExtraAddBonus:
        type: "string"
      distFinishDT:
        type: "string"
      distExtraFinishDT:
        type: "string"
      distDaysLeft:
        type: "integer"
        format: "int32"
      distExtraDaysLeft:
        type: "integer"
        format: "int32"
      distPromoDays:
        type: "integer"
        format: "int32"
      distExtraPromoDays:
        type: "integer"
        format: "int32"
      distStartDT:
        type: "string"
      distQualLevel:
        type: "string"
      promoRecalcDT:
        type: "string"
        format: "date-time"
    example:
      distTotalPGV: 2
      distBonusAmount: 2
      promoBonusAmount: 1
      distExtraAddBonus: "distExtraAddBonus"
      distExtraFinishDT: "distExtraFinishDT"
      distPromoDays: 1
      distQualLevel: "distQualLevel"
      distExtraQualPGV: 3
      distAddBonus: "distAddBonus"
      distFinishDT: "distFinishDT"
      distExtraPromoDays: 1
      isNewMAP: true
      distQualPGV: 9
      distExtraTotalPGV: 7
      promoTotalPGV: 6
      distStartDT: "distStartDT"
      distExtraBonusAmount: 4
      distDaysLeft: 7
      distPayLegPGV: 5
      promoRN: 5
      promoPK: 0
      distExtraDaysLeft: 1
      promoRecalcDT: "2000-01-23T04:56:07.000+00:00"
  Jeunesse.Profile.Core.Dashboards.Models.DateRangeRequestModel:
    type: "object"
    properties:
      startDate:
        type: "string"
        format: "date-time"
      endDate:
        type: "string"
        format: "date-time"
  Jeunesse.Profile.Core.Dashboards.Models.SmartMobile.GetNewContactCountsApiResponseModel:
    type: "object"
    properties:
      monthYear:
        type: "integer"
        format: "int32"
      contactCounts:
        type: "array"
        items:
          $ref: "#/definitions/Jeunesse.Profile.Core.Dashboards.Models.SmartMobile.ContactCountsApiResponseModel"
    example:
      monthYear: 0
      contactCounts:
      - month: 1
        year: 6
        monthYear: 5
        count: 2
        contactTypeID: 5
      - month: 1
        year: 6
        monthYear: 5
        count: 2
        contactTypeID: 5
  Jeunesse.Profile.Core.Dashboards.Models.SmartMobile.ContactCountsApiResponseModel:
    type: "object"
    properties:
      year:
        type: "integer"
        format: "int32"
      month:
        type: "integer"
        format: "int32"
      monthYear:
        type: "integer"
        format: "int32"
        readOnly: true
      contactTypeID:
        type: "integer"
        format: "int32"
      count:
        type: "integer"
        format: "int32"
    example:
      month: 1
      year: 6
      monthYear: 5
      count: 2
      contactTypeID: 5
  Jeunesse.Profile.Core.Users.Models.SmartMobile.ContactModel:
    type: "object"
    properties:
      contactID:
        type: "integer"
        format: "int32"
      contactTypeID:
        type: "integer"
        format: "int32"
      mainFK:
        type: "integer"
        format: "int32"
      leadFK:
        type: "integer"
        format: "int32"
      firstName:
        type: "string"
      lastName:
        type: "string"
      phone1:
        type: "string"
      phone2:
        type: "string"
      email:
        type: "string"
      address1:
        type: "string"
      address2:
        type: "string"
      address3:
        type: "string"
      country:
        type: "string"
      state:
        type: "string"
      city:
        type: "string"
      postalCode:
        type: "string"
      dateOfBirth:
        type: "string"
        format: "date-time"
      lastDateModified:
        type: "string"
        format: "date-time"
      dateCreated:
        type: "string"
        format: "date-time"
      totalSalesValue:
        type: "number"
        format: "double"
      totalSales:
        readOnly: true
        $ref: "#/definitions/Jeunesse.Profile.Core.Dashboards.Models.SmartMobile.CurrencyModel"
      lastOrderDate:
        type: "string"
        format: "date-time"
      tier:
        type: "string"
    example:
      lastName: "lastName"
      country: "country"
      address3: "address3"
      contactID: 0
      address2: "address2"
      city: "city"
      address1: "address1"
      postalCode: "postalCode"
      phone2: "phone2"
      leadFK: 5
      dateOfBirth: "2000-01-23T04:56:07.000+00:00"
      totalSales:
        shouldShowDecimal: true
        prefix: "prefix"
        price: 2.3021358869347655
        suffix: "suffix"
        currencyCode: "currencyCode"
      lastOrderDate: "2000-01-23T04:56:07.000+00:00"
      phone1: "phone1"
      totalSalesValue: 5.637376656633329
      firstName: "firstName"
      dateCreated: "2000-01-23T04:56:07.000+00:00"
      tier: "tier"
      mainFK: 1
      state: "state"
      lastDateModified: "2000-01-23T04:56:07.000+00:00"
      contactTypeID: 6
      email: "email"
  Jeunesse.Profile.Core.Dashboards.Models.SmartMobile.CurrencyModel:
    type: "object"
    properties:
      prefix:
        type: "string"
      price:
        type: "number"
        format: "double"
      suffix:
        type: "string"
      shouldShowDecimal:
        type: "boolean"
      currencyCode:
        type: "string"
    example:
      shouldShowDecimal: true
      prefix: "prefix"
      price: 2.3021358869347655
      suffix: "suffix"
      currencyCode: "currencyCode"
  Jeunesse.Profile.Core.Dashboards.Models.GetCommissionsTotalApiResponseModel:
    type: "object"
    properties:
      currencySymbol:
        type: "string"
      currencyFormat:
        type: "string"
      currencyCode:
        type: "string"
      totalCommisions:
        type: "number"
        format: "double"
      totalCommisionsValue:
        readOnly: true
        $ref: "#/definitions/Jeunesse.Profile.Core.Dashboards.Models.SmartMobile.CurrencyModel"
    example:
      totalCommisionsValue:
        shouldShowDecimal: true
        prefix: "prefix"
        price: 2.3021358869347655
        suffix: "suffix"
        currencyCode: "currencyCode"
      currencySymbol: "currencySymbol"
      totalCommisions: 0.8008281904610115
      currencyCode: "currencyCode"
      currencyFormat: "currencyFormat"
  Jeunesse.Profile.Core.Dashboards.Models.SmartMobile.GetMonthlySalesDataApiResponseModel:
    type: "object"
    properties:
      year:
        type: "integer"
        format: "int32"
      month:
        type: "integer"
        format: "int32"
      monthYear:
        type: "integer"
        format: "int32"
        readOnly: true
      currencySymbol:
        type: "string"
      currencyFormat:
        type: "string"
      currencyCode:
        type: "string"
      totalSales:
        type: "number"
        format: "double"
      maxSale:
        type: "number"
        format: "double"
      autoshipSales:
        type: "number"
        format: "double"
      normalSales:
        type: "number"
        format: "double"
      abandonedSales:
        type: "number"
        format: "double"
      totalSalesValue:
        readOnly: true
        $ref: "#/definitions/Jeunesse.Profile.Core.Dashboards.Models.SmartMobile.CurrencyModel"
      totalSalesCount:
        type: "integer"
        format: "int32"
      maxSaleValue:
        readOnly: true
        $ref: "#/definitions/Jeunesse.Profile.Core.Dashboards.Models.SmartMobile.CurrencyModel"
      autoshipSalesValue:
        readOnly: true
        $ref: "#/definitions/Jeunesse.Profile.Core.Dashboards.Models.SmartMobile.CurrencyModel"
      normalSalesValue:
        readOnly: true
        $ref: "#/definitions/Jeunesse.Profile.Core.Dashboards.Models.SmartMobile.CurrencyModel"
      abandonedSalesValue:
        readOnly: true
        $ref: "#/definitions/Jeunesse.Profile.Core.Dashboards.Models.SmartMobile.CurrencyModel"
    example:
      maxSale: 5.637376656633329
      year: 0
      abandonedSales: 9.301444243932576
      currencySymbol: "currencySymbol"
      totalSales: 5.962133916683182
      currencyFormat: "currencyFormat"
      normalSalesValue:
        shouldShowDecimal: true
        prefix: "prefix"
        price: 2.3021358869347655
        suffix: "suffix"
        currencyCode: "currencyCode"
      totalSalesValue:
        shouldShowDecimal: true
        prefix: "prefix"
        price: 2.3021358869347655
        suffix: "suffix"
        currencyCode: "currencyCode"
      autoshipSales: 2.3021358869347655
      totalSalesCount: 3
      month: 6
      autoshipSalesValue:
        shouldShowDecimal: true
        prefix: "prefix"
        price: 2.3021358869347655
        suffix: "suffix"
        currencyCode: "currencyCode"
      monthYear: 1
      normalSales: 7.061401241503109
      maxSaleValue:
        shouldShowDecimal: true
        prefix: "prefix"
        price: 2.3021358869347655
        suffix: "suffix"
        currencyCode: "currencyCode"
      abandonedSalesValue:
        shouldShowDecimal: true
        prefix: "prefix"
        price: 2.3021358869347655
        suffix: "suffix"
        currencyCode: "currencyCode"
      currencyCode: "currencyCode"
  Jeunesse.Profile.Core.Dashboards.Models.SmartMobile.GetMonthlyProductDataApiResponseModel:
    type: "object"
    properties:
      monthYear:
        type: "integer"
        format: "int32"
      productCounts:
        type: "array"
        items:
          $ref: "#/definitions/Jeunesse.Profile.Core.Dashboards.Models.SmartMobile.ProductCountApiResponseModel"
    example:
      monthYear: 0
      productCounts:
      - totalSalesValue:
          shouldShowDecimal: true
          prefix: "prefix"
          price: 2.3021358869347655
          suffix: "suffix"
          currencyCode: "currencyCode"
        totalSalesCount: 7
        month: 1
        productID: 5
        year: 6
        monthYear: 5
        name: "name"
        currencySymbol: "currencySymbol"
        totalSales: 2.3021358869347655
        percent: 9
        currencyCode: "currencyCode"
        currencyFormat: "currencyFormat"
      - totalSalesValue:
          shouldShowDecimal: true
          prefix: "prefix"
          price: 2.3021358869347655
          suffix: "suffix"
          currencyCode: "currencyCode"
        totalSalesCount: 7
        month: 1
        productID: 5
        year: 6
        monthYear: 5
        name: "name"
        currencySymbol: "currencySymbol"
        totalSales: 2.3021358869347655
        percent: 9
        currencyCode: "currencyCode"
        currencyFormat: "currencyFormat"
  Jeunesse.Profile.Core.Dashboards.Models.SmartMobile.ProductCountApiResponseModel:
    type: "object"
    properties:
      year:
        type: "integer"
        format: "int32"
      month:
        type: "integer"
        format: "int32"
      monthYear:
        type: "integer"
        format: "int32"
        readOnly: true
      productID:
        type: "integer"
        format: "int32"
      name:
        type: "string"
      totalSales:
        type: "number"
        format: "double"
      totalSalesValue:
        readOnly: true
        $ref: "#/definitions/Jeunesse.Profile.Core.Dashboards.Models.SmartMobile.CurrencyModel"
      totalSalesCount:
        type: "integer"
        format: "int32"
      percent:
        type: "integer"
        format: "int32"
      currencySymbol:
        type: "string"
      currencyFormat:
        type: "string"
      currencyCode:
        type: "string"
    example:
      totalSalesValue:
        shouldShowDecimal: true
        prefix: "prefix"
        price: 2.3021358869347655
        suffix: "suffix"
        currencyCode: "currencyCode"
      totalSalesCount: 7
      month: 1
      productID: 5
      year: 6
      monthYear: 5
      name: "name"
      currencySymbol: "currencySymbol"
      totalSales: 2.3021358869347655
      percent: 9
      currencyCode: "currencyCode"
      currencyFormat: "currencyFormat"
  Jeunesse.Profile.Core.Dashboards.Models.EventTicketsSnapshot:
    type: "object"
    properties:
      mainPK:
        type: "integer"
        format: "int32"
      fullName:
        type: "string"
      memberID:
        type: "string"
      username:
        type: "string"
      rankPK:
        type: "integer"
        format: "int32"
      rankCode:
        type: "string"
      rankName:
        type: "string"
      groupTickets:
        type: "integer"
        format: "int32"
      persTickets:
        type: "integer"
        format: "int32"
      teamTickets:
        type: "integer"
        format: "int32"
      rn:
        type: "integer"
        format: "int32"
      totalRegistrants:
        type: "integer"
        format: "int32"
      totalCheckIns:
        type: "integer"
        format: "int32"
      totalOrders:
        type: "integer"
        format: "int32"
      totalSales:
        type: "number"
        format: "double"
      totalRefunded:
        type: "number"
        format: "double"
      totalPurchasers:
        type: "integer"
        format: "int32"
      groupTicketsWOPers:
        type: "integer"
        format: "int32"
    example:
      totalRegistrants: 7
      rankCode: "rankCode"
      totalCheckIns: 9
      totalPurchasers: 7
      fullName: "fullName"
      totalSales: 2.027123023002322
      teamTickets: 5
      persTickets: 5
      rankPK: 6
      rankName: "rankName"
      groupTickets: 1
      totalRefunded: 4.145608029883936
      totalOrders: 3
      groupTicketsWOPers: 1
      mainPK: 0
      rn: 2
      memberID: "memberID"
      username: "username"
  Jeunesse.Profile.Core.Dashboards.Models.NewsQueryModel:
    type: "object"
    properties:
      siteUrl:
        type: "string"
      mainFK:
        type: "integer"
        format: "int32"
      length:
        type: "integer"
        format: "int32"
      usePinPriority:
        type: "boolean"
      country:
        type: "string"
  Jeunesse.Profile.Core.Discount.Models.DiscountModel:
    type: "object"
    properties:
      siteUrl:
        type: "string"
      discountTypeFK:
        type: "integer"
        format: "int32"
      emailNotification:
        type: "boolean"
      discountCodePK:
        type: "integer"
        format: "int32"
      dateOfExpiry:
        type: "string"
        format: "date-time"
  Jeunesse.Profile.Core.DynamicFields.Models.DynamicValuesGetFormModel:
    type: "object"
    properties:
      country:
        type: "string"
      schemaType:
        type: "integer"
        format: "int32"
      signupKey:
        type: "string"
      mainPk:
        type: "integer"
        format: "int32"
      cartKey:
        type: "string"
        format: "uuid"
      fields:
        type: "array"
        items:
          type: "string"
      inputName:
        type: "string"
      fieldValues:
        type: "array"
        items:
          $ref: "#/definitions/Jeunesse.Profile.Core.DynamicFields.Models.FieldValue"
  Jeunesse.Profile.Core.DynamicFields.Models.FieldValue:
    type: "object"
    properties:
      field:
        type: "string"
      value:
        type: "string"
  Jeunesse.Profile.Core.DynamicFields.Models.DynamicValuesViewModel:
    type: "object"
    properties:
      fieldName:
        type: "string"
      fieldValue:
        type: "string"
      errorResonse:
        type: "string"
    example:
      fieldName: "fieldName"
      errorResonse: "errorResonse"
      fieldValue: "fieldValue"
  Jeunesse.Profile.Core.DynamicFields.Models.DynamicFieldsQueryModel:
    type: "object"
    properties:
      countryCode:
        type: "string"
      formType:
        type: "integer"
        format: "int32"
  Jeunesse.Profile.Core.DynamicFields.Models.DynamicFormModel:
    type: "object"
    properties:
      dynamicFormPK:
        type: "integer"
        format: "int32"
      schemaName:
        type: "string"
      schemaType:
        type: "integer"
        format: "int32"
      schemaData:
        type: "string"
    example:
      schemaData: "schemaData"
      dynamicFormPK: 0
      schemaType: 6
      schemaName: "schemaName"
  Jeunesse.Profile.Core.DynamicFields.Models.PopulateInputQueryModel:
    type: "object"
    properties:
      countryCode:
        type: "string"
      inputName:
        type: "string"
      dependentFields:
        type: "array"
        items:
          $ref: "#/definitions/Jeunesse.Profile.Core.DynamicFields.Models.FormInputModel"
  Jeunesse.Profile.Core.DynamicFields.Models.FormInputModel:
    type: "object"
    properties:
      name:
        type: "string"
      value:
        type: "string"
    example:
      name: "name"
      value: "value"
  System.Web.WebPages.Html.SelectListItem:
    type: "object"
    properties:
      text:
        type: "string"
      value:
        type: "string"
      selected:
        type: "boolean"
    example:
      text: "text"
      value: "value"
      selected: true
  Jeunesse.Profile.Core.DynamicFields.Models.PopulateValuesQueryModel:
    type: "object"
    properties:
      countryCode:
        type: "string"
      inputNames:
        type: "array"
        items:
          type: "string"
      dependentFields:
        type: "array"
        items:
          $ref: "#/definitions/Jeunesse.Profile.Core.DynamicFields.Models.FormInputModel"
  Jeunesse.Profile.Core.DynamicFields.Models.DynamicValuesPostFormModel:
    type: "object"
    properties:
      country:
        type: "string"
      schemaType:
        type: "integer"
        format: "int32"
      signupKey:
        type: "string"
      cartKey:
        type: "string"
        format: "uuid"
      mainPk:
        type: "integer"
        format: "int32"
      mainOrderPk:
        type: "integer"
        format: "int32"
      fieldValues:
        type: "array"
        items:
          $ref: "#/definitions/Jeunesse.Profile.Core.DynamicFields.Models.FieldValue"
  Jeunesse.Profile.Core.DynamicFields.Models.InputValidatedModel:
    type: "object"
    properties:
      isValid:
        type: "boolean"
      message:
        type: "string"
    example:
      isValid: true
      message: "message"
  Jeunesse.Profile.Core.Localization.Models.TimeZoneViewModel:
    type: "object"
    properties:
      gmtOffset:
        type: "integer"
        format: "int32"
      name:
        type: "string"
    example:
      gmtOffset: 0
      name: "name"
  Jeunesse.Profile.Core.Localization.Models.CountrySimpleModel:
    type: "object"
    properties:
      name:
        type: "string"
      code2:
        type: "string"
      code3:
        type: "string"
    example:
      code3: "code3"
      code2: "code2"
      name: "name"
  Jeunesse.Profile.Core.Localization.Models.BillingCountriesViewModel:
    type: "object"
    properties:
      code:
        type: "string"
      name:
        type: "string"
    example:
      code: "code"
      name: "name"
  Jeunesse.Profile.Core.Localization.Models.JPAddressLookupQueryModel:
    type: "object"
    properties:
      postalCode:
        type: "string"
  Jeunesse.Profile.Core.Localization.Models.JPAddressLookupViewModel:
    type: "object"
    properties:
      postalCode:
        type: "string"
      address1Kana:
        type: "string"
      address2Kana:
        type: "string"
      address3Kana:
        type: "string"
      address1:
        type: "string"
      address2:
        type: "string"
      address3:
        type: "string"
      isoCode:
        type: "string"
    example:
      address1Kana: "address1Kana"
      address2Kana: "address2Kana"
      address3: "address3"
      address2: "address2"
      isoCode: "isoCode"
      address1: "address1"
      postalCode: "postalCode"
      address3Kana: "address3Kana"
  Jeunesse.Profile.Core.Localization.Models.IdTypesModel:
    type: "object"
    properties:
      idType:
        type: "string"
      desc:
        type: "string"
      mainIdTypePk:
        type: "integer"
        format: "int32"
      maxLength:
        type: "integer"
        format: "int32"
      regExFormat:
        type: "string"
      langVariable:
        type: "string"
      isCompany:
        type: "boolean"
      country:
        type: "string"
      requireIfSelected:
        type: "boolean"
      validationString:
        type: "string"
      askExpirationDate:
        type: "boolean"
    example:
      country: "country"
      mainIdTypePk: 0
      idType: "idType"
      askExpirationDate: true
      regExFormat: "regExFormat"
      langVariable: "langVariable"
      validationString: "validationString"
      isCompany: true
      maxLength: 6
      desc: "desc"
      requireIfSelected: true
  Jeunesse.Profile.Core.Localization.Models.CountryQueryModel:
    type: "object"
    properties:
      countryGroups:
        type: "string"
      singleCountryCode:
        type: "string"
  Jeunesse.Profile.Core.MainExtension.Models.MainITExtensionModel:
    type: "object"
    properties:
      mainFK:
        type: "integer"
        format: "int32"
      firstName:
        type: "string"
      lastName:
        type: "string"
      cardId:
        type: "integer"
        format: "int32"
      cardGeneratedDate:
        type: "string"
        format: "date-time"
    example:
      firstName: "firstName"
      lastName: "lastName"
      mainFK: 0
      cardId: 6
      cardGeneratedDate: "2000-01-23T04:56:07.000+00:00"
  Jeunesse.Profile.Core.Users.Models.MainUserModel:
    type: "object"
    required:
    - "mainPK"
    - "siteUrl"
    properties:
      validationType:
        type: "string"
      validationNumber:
        type: "string"
      sponsorFirstName:
        type: "string"
      sponsorLastName:
        type: "string"
      statusFK:
        type: "string"
      statusName:
        type: "string"
      countryFK:
        type: "string"
      countryName:
        type: "string"
      sponsorFK:
        type: "integer"
        format: "int32"
      mainTypeFK:
        type: "integer"
        format: "int32"
      languageFK:
        type: "integer"
        format: "int32"
      languageName:
        type: "string"
      rank:
        type: "integer"
        format: "int32"
      rankName:
        type: "string"
      autoShipOn:
        type: "string"
        format: "date-time"
      courtesyTitle:
        type: "string"
      middleName:
        type: "string"
      suffix:
        type: "string"
      dateOfBirth:
        type: "string"
        format: "date-time"
      secondPhone:
        type: "string"
      faxNumber:
        type: "string"
      mobilePhone:
        type: "string"
      willReceiveEmail:
        type: "boolean"
      willReceiveSms:
        type: "boolean"
      smsInEnglish:
        type: "boolean"
      accptSmsCharges:
        type: "boolean"
      accptSmsNotReq:
        type: "boolean"
      mailingAddress1:
        type: "string"
      mailingAddress2:
        type: "string"
      mailingAddress3:
        type: "string"
      mailingCity:
        type: "string"
      mailingState:
        type: "string"
      mailingStateName:
        type: "string"
      mailingZipCode:
        type: "string"
      lockPlacementLra:
        type: "string"
      showContactInfo:
        type: "string"
      anniversaryDate:
        type: "string"
        format: "date-time"
      isCorporate:
        type: "boolean"
      corporate:
        type: "boolean"
      taxIdNumber:
        type: "string"
      coAppName:
        type: "string"
      coAppID:
        type: "string"
      displayName:
        type: "string"
      taxExempt:
        type: "boolean"
      w9OnFile:
        type: "boolean"
      t4A1099Exempt:
        type: "boolean"
      allowInsidePlacement:
        type: "boolean"
      insidePlacementLevel:
        type: "integer"
        format: "int32"
      insideTopMainFk:
        type: "integer"
        format: "int32"
      insideSignupSponsorSide:
        type: "string"
      mipDisabledAdmin:
        type: "boolean"
      sponsorType:
        type: "string"
      canSponsorAffiliate:
        type: "boolean"
      itAgreedToTermsDate:
        type: "string"
        format: "date-time"
      businessNumber:
        type: "string"
      applicationReceived:
        type: "boolean"
      applicationReceivedDate:
        type: "string"
        format: "date-time"
      memberID:
        type: "string"
      gender:
        type: "string"
      mainPK:
        type: "integer"
        format: "int32"
      siteUrl:
        type: "string"
      firstName:
        type: "string"
      firstName2:
        type: "string"
      firstName3:
        type: "string"
      lastName:
        type: "string"
      lastName2:
        type: "string"
      lastName3:
        type: "string"
      email:
        type: "string"
      phone:
        type: "string"
      company:
        type: "string"
      mainTypeName:
        type: "string"
      dateCreated:
        type: "string"
        format: "date-time"
      sponsorSiteUrl:
        type: "string"
      statusFk:
        type: "string"
      facebookUrl:
        type: "string"
      skypeAccount:
        type: "string"
      twitterAccount:
        type: "string"
      instagramAccount:
        type: "string"
      tiktokAccount:
        type: "string"
      allowChangeUsername:
        type: "boolean"
      countryCode:
        type: "string"
    example:
      siteUrl: "siteUrl"
      validationType: "validationType"
      accptSmsCharges: true
      applicationReceived: true
      suffix: "suffix"
      sponsorFK: 0
      itAgreedToTermsDate: "2000-01-23T04:56:07.000+00:00"
      mailingAddress3: "mailingAddress3"
      mailingAddress2: "mailingAddress2"
      isCorporate: true
      rankName: "rankName"
      mailingAddress1: "mailingAddress1"
      mailingZipCode: "mailingZipCode"
      rank: 5
      accptSmsNotReq: true
      lastName2: "lastName2"
      lastName3: "lastName3"
      skypeAccount: "skypeAccount"
      mailingState: "mailingState"
      secondPhone: "secondPhone"
      smsInEnglish: true
      taxExempt: true
      allowChangeUsername: true
      t4A1099Exempt: true
      mainTypeFK: 6
      allowInsidePlacement: true
      applicationReceivedDate: "2000-01-23T04:56:07.000+00:00"
      insideSignupSponsorSide: "insideSignupSponsorSide"
      statusFK: "statusFK"
      firstName: "firstName"
      mobilePhone: "mobilePhone"
      phone: "phone"
      countryName: "countryName"
      lockPlacementLra: "lockPlacementLra"
      coAppName: "coAppName"
      tiktokAccount: "tiktokAccount"
      sponsorSiteUrl: "sponsorSiteUrl"
      lastName: "lastName"
      validationNumber: "validationNumber"
      countryFK: "countryFK"
      gender: "gender"
      twitterAccount: "twitterAccount"
      firstName2: "firstName2"
      displayName: "displayName"
      autoShipOn: "2000-01-23T04:56:07.000+00:00"
      firstName3: "firstName3"
      coAppID: "coAppID"
      languageName: "languageName"
      statusFk: "statusFk"
      w9OnFile: true
      facebookUrl: "facebookUrl"
      showContactInfo: "showContactInfo"
      dateCreated: "2000-01-23T04:56:07.000+00:00"
      countryCode: "countryCode"
      statusName: "statusName"
      company: "company"
      sponsorLastName: "sponsorLastName"
      email: "email"
      taxIdNumber: "taxIdNumber"
      insidePlacementLevel: 5
      sponsorType: "sponsorType"
      sponsorFirstName: "sponsorFirstName"
      courtesyTitle: "courtesyTitle"
      mailingCity: "mailingCity"
      instagramAccount: "instagramAccount"
      languageFK: 1
      willReceiveSms: true
      insideTopMainFk: 2
      mainTypeName: "mainTypeName"
      dateOfBirth: "2000-01-23T04:56:07.000+00:00"
      businessNumber: "businessNumber"
      willReceiveEmail: true
      anniversaryDate: "2000-01-23T04:56:07.000+00:00"
      mipDisabledAdmin: true
      canSponsorAffiliate: true
      corporate: true
      mailingStateName: "mailingStateName"
      faxNumber: "faxNumber"
      middleName: "middleName"
      mainPK: 7
      memberID: "memberID"
  Jeunesse.Back.Data.Poco.Awards.AwardType:
    type: "object"
    required:
    - "awardTypePk"
    - "useQty"
    - "useRank"
    properties:
      awardTypePk:
        type: "integer"
        format: "int32"
      useRank:
        type: "boolean"
      useQty:
        type: "boolean"
      awardName:
        type: "string"
        minLength: 0
        maxLength: 255
    example:
      awardTypePk: 0
      useQty: true
      awardName: "awardName"
      useRank: true
  Jeunesse.Back.Data.Poco.Awards.Award:
    type: "object"
    required:
    - "awardPk"
    - "awardTypeFk"
    - "dateReceived"
    - "mainFk"
    - "receivedBy"
    properties:
      awardPk:
        type: "integer"
        format: "int32"
      awardTypeFk:
        type: "integer"
        format: "int32"
      awardRankFk:
        type: "integer"
        format: "int32"
      awardForQty:
        type: "integer"
        format: "int32"
      mainFk:
        type: "integer"
        format: "int32"
      dateReceived:
        type: "string"
        format: "date-time"
      receivedBy:
        type: "integer"
        format: "int32"
      location:
        type: "string"
        minLength: 0
        maxLength: 100
    example:
      receivedBy: 2
      awardPk: 0
      mainFk: 5
      dateReceived: "2000-01-23T04:56:07.000+00:00"
      awardRankFk: 1
      awardForQty: 5
      location: "location"
      awardTypeFk: 6
  Jeunesse.Profile.Core.Users.Models.UserMarketingModel:
    type: "object"
    properties:
      skypeAccount:
        type: "string"
      twitterAccount:
        type: "string"
      facebookUrl:
        type: "string"
      facebookPixelId:
        type: "string"
      facebookDomainKey:
        type: "string"
      googleAnalyticsUa:
        type: "string"
      retailAdWordsId:
        type: "string"
      retailAdWordsLabel:
        type: "string"
      wholesaleAdWordsId:
        type: "string"
      wholesaleAdWordsLabel:
        type: "string"
      successOnDemandEnrolled:
        type: "boolean"
      mainPk:
        type: "integer"
        format: "int32"
      phrase:
        type: "string"
      bio:
        type: "string"
    example:
      googleAnalyticsUa: "googleAnalyticsUa"
      twitterAccount: "twitterAccount"
      facebookDomainKey: "facebookDomainKey"
      retailAdWordsLabel: "retailAdWordsLabel"
      bio: "bio"
      facebookUrl: "facebookUrl"
      facebookPixelId: "facebookPixelId"
      phrase: "phrase"
      wholesaleAdWordsId: "wholesaleAdWordsId"
      successOnDemandEnrolled: true
      skypeAccount: "skypeAccount"
      wholesaleAdWordsLabel: "wholesaleAdWordsLabel"
      mainPk: 0
      retailAdWordsId: "retailAdWordsId"
  Jeunesse.Profile.Core.Users.Models.SignupUserViewModel:
    type: "object"
    properties:
      signupKey:
        type: "string"
      country:
        type: "string"
      languageFk:
        type: "integer"
        format: "int32"
      culture:
        type: "string"
      fname:
        type: "string"
      lname:
        type: "string"
      fname2:
        type: "string"
      lname2:
        type: "string"
      shipname:
        type: "string"
      shipLname:
        type: "string"
      company:
        type: "string"
      email:
        type: "string"
      phone:
        type: "string"
      receiveTexts:
        type: "boolean"
      siteUrl:
        type: "string"
      addressOne:
        type: "string"
      addressTwo:
        type: "string"
      addressThree:
        type: "string"
      zip:
        type: "string"
      city:
        type: "string"
      state:
        type: "string"
      idCharCount:
        type: "integer"
        format: "int32"
      checkedW8BEN:
        type: "boolean"
      doB:
        type: "string"
        format: "date-time"
      coAppName:
        type: "string"
      coAppIdCharCount:
        type: "integer"
        format: "int32"
      referrerSiteUrl:
        type: "string"
      referrerMainFk:
        type: "integer"
        format: "int32"
      mainFk:
        type: "integer"
        format: "int32"
      mainTypeFk:
        type: "integer"
        format: "int32"
      mainIdTypeFk:
        type: "integer"
        format: "int32"
      isCorporate:
        type: "boolean"
      cartKey:
        type: "string"
      lastUrl:
        type: "string"
      lockedMainType:
        type: "boolean"
      flow:
        type: "string"
      allowCompany:
        type: "boolean"
      allowCoApp:
        type: "boolean"
      isEEAMarket:
        type: "boolean"
      isCountryUseStaticID:
        type: "boolean"
      idExpDate:
        type: "string"
        format: "date-time"
      idNoExpiry:
        type: "boolean"
      isPlacementChoice:
        type: "boolean"
      numIDtype_I:
        type: "integer"
        format: "int32"
      numIDtype_C:
        type: "integer"
        format: "int32"
    example:
      country: "country"
      siteUrl: "siteUrl"
      numIDtype_I: 9
      lockedMainType: true
      city: "city"
      languageFk: 0
      isEEAMarket: true
      mainTypeFk: 2
      lastUrl: "lastUrl"
      allowCompany: true
      checkedW8BEN: true
      lname: "lname"
      cartKey: "cartKey"
      addressTwo: "addressTwo"
      doB: "2000-01-23T04:56:07.000+00:00"
      mainFk: 5
      isCorporate: true
      idNoExpiry: true
      mainIdTypeFk: 7
      isCountryUseStaticID: true
      company: "company"
      state: "state"
      lname2: "lname2"
      email: "email"
      flow: "flow"
      isPlacementChoice: true
      zip: "zip"
      fname: "fname"
      receiveTexts: true
      addressThree: "addressThree"
      fname2: "fname2"
      referrerMainFk: 5
      signupKey: "signupKey"
      coAppIdCharCount: 1
      idCharCount: 6
      phone: "phone"
      allowCoApp: true
      idExpDate: "2000-01-23T04:56:07.000+00:00"
      culture: "culture"
      numIDtype_C: 3
      shipLname: "shipLname"
      addressOne: "addressOne"
      coAppName: "coAppName"
      shipname: "shipname"
      referrerSiteUrl: "referrerSiteUrl"
  Jeunesse.Profile.Core.Users.Models.SignupUserFormModel:
    type: "object"
    properties:
      signupUsersPk:
        type: "integer"
        format: "int32"
      signupKey:
        type: "string"
      mainPk:
        type: "integer"
        format: "int32"
      country:
        type: "string"
      languageFk:
        type: "integer"
        format: "int32"
      culture:
        type: "string"
      fname:
        type: "string"
      lname:
        type: "string"
      fname2:
        type: "string"
      lname2:
        type: "string"
      shipname:
        type: "string"
      shipLname:
        type: "string"
      company:
        type: "string"
      email:
        type: "string"
      phone:
        type: "string"
      receiveTexts:
        type: "boolean"
      siteUrl:
        type: "string"
      addressOne:
        type: "string"
      addressTwo:
        type: "string"
      addressThree:
        type: "string"
      zip:
        type: "string"
      city:
        type: "string"
      state:
        type: "string"
      id:
        type: "string"
      encId:
        type: "string"
      checkedW8BEN:
        type: "boolean"
      checkedW8BENDate:
        type: "string"
        format: "date-time"
      doB:
        type: "string"
        format: "date-time"
      coAppName:
        type: "string"
      coAppId:
        type: "string"
      coAppEncId:
        type: "string"
      referrerSiteUrl:
        type: "string"
      referrerMainFk:
        type: "integer"
        format: "int32"
      mainFk:
        type: "integer"
        format: "int32"
      mainTypeFk:
        type: "integer"
        format: "int32"
      source:
        type: "string"
      isCorporate:
        type: "boolean"
      mainIdTypeFk:
        type: "integer"
        format: "int32"
      cartKey:
        type: "string"
      lastUrl:
        type: "string"
      leadFk:
        type: "integer"
        format: "int32"
      flow:
        type: "string"
      lockedMainType:
        type: "boolean"
      idExpDate:
        type: "string"
        format: "date-time"
      idNoExpiry:
        type: "boolean"
      isPlacementChoice:
        type: "boolean"
      password:
        type: "string"
      customsId:
        type: "string"
      userValidation:
        $ref: "#/definitions/Jeunesse.Profile.Core.Users.Models.UserVerification.SignupUserValidationModel"
  Jeunesse.Profile.Core.Users.Models.UserVerification.SignupUserValidationModel:
    type: "object"
    properties:
      ci:
        type: "string"
      di:
        type: "string"
      dateOfBirth:
        type: "string"
      name:
        type: "string"
      isKorean:
        type: "boolean"
      gender:
        type: "string"
      phoneNumber:
        type: "string"
      requestNumber:
        type: "string"
      responseNumber:
        type: "string"
      authType:
        type: "string"
  Jeunesse.Profile.Core.Users.Models.UserRecognitionModel:
    type: "object"
    properties:
      mainPk:
        type: "integer"
        format: "int32"
      phrase:
        type: "string"
      bio:
        type: "string"
      imageLink:
        type: "string"
      recognitionName:
        type: "string"
      isActive:
        type: "boolean"
      memberStatus:
        type: "string"
      highestNormalizedRank:
        type: "integer"
        format: "int32"
      highestNormalizedRankName:
        type: "string"
      highestAchievedRankDate:
        type: "string"
        format: "date-time"
    example:
      imageLink: "imageLink"
      highestNormalizedRankName: "highestNormalizedRankName"
      phrase: "phrase"
      highestNormalizedRank: 6
      bio: "bio"
      memberStatus: "memberStatus"
      highestAchievedRankDate: "2000-01-23T04:56:07.000+00:00"
      mainPk: 0
      isActive: true
      recognitionName: "recognitionName"
  Jeunesse.Profile.Core.Users.Models.ESignatureInfoQueryModel:
    type: "object"
    properties:
      mainPK:
        type: "integer"
        format: "int32"
  Jeunesse.Profile.Core.Users.Models.ESignatureInfoViewModel:
    type: "object"
    properties:
      mainPK:
        type: "integer"
        format: "int32"
      siteUrl:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      declarationText:
        type: "string"
      needFillReqDef:
        type: "boolean"
      agreedToElSig:
        type: "boolean"
    example:
      firstName: "firstName"
      lastName: "lastName"
      needFillReqDef: true
      siteUrl: "siteUrl"
      declarationText: "declarationText"
      mainPK: 0
      agreedToElSig: true
  Jeunesse.Profile.Core.Users.Models.ESignatureInfoPostModel:
    type: "object"
    properties:
      mainPK:
        type: "integer"
        format: "int32"
      country:
        type: "string"
      userKey:
        type: "string"
      reqDefKey:
        type: "string"
  Jeunesse.Profile.Core.Users.Models.MainUserDownlineCheckModel:
    type: "object"
    properties:
      isInDownline:
        type: "boolean"
    example:
      isInDownline: true
  Jeunesse.Profile.Core.Users.Models.RenewalStatusInfoQueryModel:
    type: "object"
    properties:
      mainPK:
        type: "integer"
        format: "int32"
  Jeunesse.Profile.Core.Users.Models.RenewalStatusInfo:
    type: "object"
    properties:
      isRenewalMode:
        type: "boolean"
      currentStatus:
        type: "string"
    example:
      currentStatus: "currentStatus"
      isRenewalMode: true
  Jeunesse.Profile.Core.Users.Models.TalkDeskUserQueryModel:
    type: "object"
    properties:
      mainPK:
        type: "integer"
        format: "int32"
      key:
        type: "string"
  Jeunesse.Profile.Core.Users.Models.MainUserEnrollerTreeModel:
    type: "object"
    required:
    - "mainPK"
    - "side"
    - "siteUrl"
    - "sponsorLevel"
    properties:
      sponsorLevel:
        type: "integer"
        format: "int32"
      side:
        type: "string"
      validationType:
        type: "string"
      validationNumber:
        type: "string"
      sponsorFirstName:
        type: "string"
      sponsorLastName:
        type: "string"
      statusFK:
        type: "string"
      statusName:
        type: "string"
      countryFK:
        type: "string"
      countryName:
        type: "string"
      sponsorFK:
        type: "integer"
        format: "int32"
      mainTypeFK:
        type: "integer"
        format: "int32"
      languageFK:
        type: "integer"
        format: "int32"
      languageName:
        type: "string"
      rank:
        type: "integer"
        format: "int32"
      rankName:
        type: "string"
      autoShipOn:
        type: "string"
        format: "date-time"
      courtesyTitle:
        type: "string"
      middleName:
        type: "string"
      suffix:
        type: "string"
      dateOfBirth:
        type: "string"
        format: "date-time"
      secondPhone:
        type: "string"
      faxNumber:
        type: "string"
      mobilePhone:
        type: "string"
      willReceiveEmail:
        type: "boolean"
      willReceiveSms:
        type: "boolean"
      smsInEnglish:
        type: "boolean"
      accptSmsCharges:
        type: "boolean"
      accptSmsNotReq:
        type: "boolean"
      mailingAddress1:
        type: "string"
      mailingAddress2:
        type: "string"
      mailingAddress3:
        type: "string"
      mailingCity:
        type: "string"
      mailingState:
        type: "string"
      mailingStateName:
        type: "string"
      mailingZipCode:
        type: "string"
      lockPlacementLra:
        type: "string"
      showContactInfo:
        type: "string"
      anniversaryDate:
        type: "string"
        format: "date-time"
      isCorporate:
        type: "boolean"
      corporate:
        type: "boolean"
      taxIdNumber:
        type: "string"
      coAppName:
        type: "string"
      coAppID:
        type: "string"
      displayName:
        type: "string"
      taxExempt:
        type: "boolean"
      w9OnFile:
        type: "boolean"
      t4A1099Exempt:
        type: "boolean"
      allowInsidePlacement:
        type: "boolean"
      insidePlacementLevel:
        type: "integer"
        format: "int32"
      insideTopMainFk:
        type: "integer"
        format: "int32"
      insideSignupSponsorSide:
        type: "string"
      mipDisabledAdmin:
        type: "boolean"
      sponsorType:
        type: "string"
      canSponsorAffiliate:
        type: "boolean"
      itAgreedToTermsDate:
        type: "string"
        format: "date-time"
      businessNumber:
        type: "string"
      applicationReceived:
        type: "boolean"
      applicationReceivedDate:
        type: "string"
        format: "date-time"
      memberID:
        type: "string"
      gender:
        type: "string"
      mainPK:
        type: "integer"
        format: "int32"
      siteUrl:
        type: "string"
      firstName:
        type: "string"
      firstName2:
        type: "string"
      firstName3:
        type: "string"
      lastName:
        type: "string"
      lastName2:
        type: "string"
      lastName3:
        type: "string"
      email:
        type: "string"
      phone:
        type: "string"
      company:
        type: "string"
      mainTypeName:
        type: "string"
      dateCreated:
        type: "string"
        format: "date-time"
      sponsorSiteUrl:
        type: "string"
      statusFk:
        type: "string"
      facebookUrl:
        type: "string"
      skypeAccount:
        type: "string"
      twitterAccount:
        type: "string"
      instagramAccount:
        type: "string"
      tiktokAccount:
        type: "string"
      allowChangeUsername:
        type: "boolean"
      countryCode:
        type: "string"
    example:
      siteUrl: "siteUrl"
      validationType: "validationType"
      accptSmsCharges: true
      applicationReceived: true
      suffix: "suffix"
      sponsorFK: 6
      itAgreedToTermsDate: "2000-01-23T04:56:07.000+00:00"
      mailingAddress3: "mailingAddress3"
      mailingAddress2: "mailingAddress2"
      isCorporate: true
      rankName: "rankName"
      mailingAddress1: "mailingAddress1"
      mailingZipCode: "mailingZipCode"
      rank: 5
      accptSmsNotReq: true
      lastName2: "lastName2"
      lastName3: "lastName3"
      skypeAccount: "skypeAccount"
      mailingState: "mailingState"
      secondPhone: "secondPhone"
      smsInEnglish: true
      taxExempt: true
      allowChangeUsername: true
      t4A1099Exempt: true
      mainTypeFK: 1
      allowInsidePlacement: true
      applicationReceivedDate: "2000-01-23T04:56:07.000+00:00"
      insideSignupSponsorSide: "insideSignupSponsorSide"
      statusFK: "statusFK"
      firstName: "firstName"
      mobilePhone: "mobilePhone"
      phone: "phone"
      countryName: "countryName"
      lockPlacementLra: "lockPlacementLra"
      coAppName: "coAppName"
      tiktokAccount: "tiktokAccount"
      sponsorSiteUrl: "sponsorSiteUrl"
      lastName: "lastName"
      validationNumber: "validationNumber"
      countryFK: "countryFK"
      gender: "gender"
      twitterAccount: "twitterAccount"
      firstName2: "firstName2"
      displayName: "displayName"
      autoShipOn: "2000-01-23T04:56:07.000+00:00"
      firstName3: "firstName3"
      coAppID: "coAppID"
      languageName: "languageName"
      statusFk: "statusFk"
      w9OnFile: true
      facebookUrl: "facebookUrl"
      showContactInfo: "showContactInfo"
      dateCreated: "2000-01-23T04:56:07.000+00:00"
      countryCode: "countryCode"
      statusName: "statusName"
      company: "company"
      sponsorLastName: "sponsorLastName"
      email: "email"
      side: "side"
      taxIdNumber: "taxIdNumber"
      insidePlacementLevel: 2
      sponsorType: "sponsorType"
      sponsorFirstName: "sponsorFirstName"
      courtesyTitle: "courtesyTitle"
      mailingCity: "mailingCity"
      instagramAccount: "instagramAccount"
      languageFK: 5
      willReceiveSms: true
      insideTopMainFk: 7
      mainTypeName: "mainTypeName"
      dateOfBirth: "2000-01-23T04:56:07.000+00:00"
      businessNumber: "businessNumber"
      willReceiveEmail: true
      anniversaryDate: "2000-01-23T04:56:07.000+00:00"
      mipDisabledAdmin: true
      canSponsorAffiliate: true
      corporate: true
      sponsorLevel: 0
      mailingStateName: "mailingStateName"
      faxNumber: "faxNumber"
      middleName: "middleName"
      mainPK: 9
      memberID: "memberID"
  Jeunesse.Profile.Core.Users.Models.SmartMobile.ContactsResponseModel:
    type: "object"
    properties:
      contacts:
        type: "array"
        items:
          $ref: "#/definitions/Jeunesse.Profile.Core.Users.Models.SmartMobile.ContactModel"
      deletions:
        type: "array"
        items:
          $ref: "#/definitions/Jeunesse.Profile.Core.Users.Models.SmartMobile.DeleteContactModel"
      validationIDs:
        type: "array"
        items:
          type: "integer"
          format: "int32"
    example:
      validationIDs:
      - 6
      - 6
      deletions:
      - contactID: 0
        deletionDate: "2000-01-23T04:56:07.000+00:00"
      - contactID: 0
        deletionDate: "2000-01-23T04:56:07.000+00:00"
      contacts:
      - lastName: "lastName"
        country: "country"
        address3: "address3"
        contactID: 0
        address2: "address2"
        city: "city"
        address1: "address1"
        postalCode: "postalCode"
        phone2: "phone2"
        leadFK: 5
        dateOfBirth: "2000-01-23T04:56:07.000+00:00"
        totalSales:
          shouldShowDecimal: true
          prefix: "prefix"
          price: 2.3021358869347655
          suffix: "suffix"
          currencyCode: "currencyCode"
        lastOrderDate: "2000-01-23T04:56:07.000+00:00"
        phone1: "phone1"
        totalSalesValue: 5.637376656633329
        firstName: "firstName"
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        tier: "tier"
        mainFK: 1
        state: "state"
        lastDateModified: "2000-01-23T04:56:07.000+00:00"
        contactTypeID: 6
        email: "email"
      - lastName: "lastName"
        country: "country"
        address3: "address3"
        contactID: 0
        address2: "address2"
        city: "city"
        address1: "address1"
        postalCode: "postalCode"
        phone2: "phone2"
        leadFK: 5
        dateOfBirth: "2000-01-23T04:56:07.000+00:00"
        totalSales:
          shouldShowDecimal: true
          prefix: "prefix"
          price: 2.3021358869347655
          suffix: "suffix"
          currencyCode: "currencyCode"
        lastOrderDate: "2000-01-23T04:56:07.000+00:00"
        phone1: "phone1"
        totalSalesValue: 5.637376656633329
        firstName: "firstName"
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        tier: "tier"
        mainFK: 1
        state: "state"
        lastDateModified: "2000-01-23T04:56:07.000+00:00"
        contactTypeID: 6
        email: "email"
  Jeunesse.Profile.Core.Users.Models.SmartMobile.DeleteContactModel:
    type: "object"
    properties:
      contactID:
        type: "integer"
        format: "int32"
      deletionDate:
        type: "string"
        format: "date-time"
    example:
      contactID: 0
      deletionDate: "2000-01-23T04:56:07.000+00:00"
  Jeunesse.Profile.Core.Users.Models.MainUserSponsorPlacementQueryModel:
    type: "object"
    properties:
      mainFK:
        type: "integer"
        format: "int32"
      languageFk:
        type: "integer"
        format: "int32"
  Jeunesse.Profile.Core.Users.Models.MainUserSponsorPlacementViewModel:
    type: "object"
    properties:
      sponsorSide:
        type: "string"
      country:
        type: "string"
      displayText:
        type: "string"
    example:
      country: "country"
      displayText: "displayText"
      sponsorSide: "sponsorSide"
  Jeunesse.Profile.Core.Users.Models.RedirectRuleQueryModel:
    type: "object"
    properties:
      mainPK:
        type: "integer"
        format: "int32"
      country:
        type: "string"
      sourceURL:
        type: "string"
  Jeunesse.Profile.Core.Users.Models.RedirectRule:
    type: "object"
    properties:
      redirectURL:
        type: "string"
    example:
      redirectURL: "redirectURL"
  Jeunesse.Profile.Core.Users.Models.MainUserQueryModel:
    type: "object"
    properties:
      search:
        type: "string"
      exactSearch:
        type: "boolean"
      siteUrl:
        type: "string"
      mainPK:
        type: "integer"
        format: "int32"
      email:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      company:
        type: "string"
      phone:
        type: "string"
      sponsorSiteUrl:
        type: "string"
      orderNumber:
        type: "integer"
        format: "int32"
      skipCount:
        type: "boolean"
      mainType:
        type: "string"
      orderBy:
        type: "string"
      offset:
        type: "integer"
        format: "int32"
      limit:
        type: "integer"
        format: "int32"
  Jeunesse.Profile.Core.Users.Models.MainUsersSimpleViewModel:
    type: "object"
    required:
    - "totalCount"
    - "users"
    properties:
      totalCount:
        type: "integer"
        format: "int32"
      users:
        type: "array"
        items:
          $ref: "#/definitions/Jeunesse.Profile.Core.Users.Models.MainUserSimpleModel"
    example:
      totalCount: 0
      users:
      - lastName: "lastName"
        siteUrl: "siteUrl"
        allowChangeUsername: true
        twitterAccount: "twitterAccount"
        firstName2: "firstName2"
        instagramAccount: "instagramAccount"
        mainTypeName: "mainTypeName"
        mainTypeFK: 1
        firstName3: "firstName3"
        statusFk: "statusFk"
        firstName: "firstName"
        facebookUrl: "facebookUrl"
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        phone: "phone"
        countryCode: "countryCode"
        statusName: "statusName"
        lastName2: "lastName2"
        lastName3: "lastName3"
        company: "company"
        skypeAccount: "skypeAccount"
        mainPK: 6
        tiktokAccount: "tiktokAccount"
        sponsorSiteUrl: "sponsorSiteUrl"
        email: "email"
      - lastName: "lastName"
        siteUrl: "siteUrl"
        allowChangeUsername: true
        twitterAccount: "twitterAccount"
        firstName2: "firstName2"
        instagramAccount: "instagramAccount"
        mainTypeName: "mainTypeName"
        mainTypeFK: 1
        firstName3: "firstName3"
        statusFk: "statusFk"
        firstName: "firstName"
        facebookUrl: "facebookUrl"
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        phone: "phone"
        countryCode: "countryCode"
        statusName: "statusName"
        lastName2: "lastName2"
        lastName3: "lastName3"
        company: "company"
        skypeAccount: "skypeAccount"
        mainPK: 6
        tiktokAccount: "tiktokAccount"
        sponsorSiteUrl: "sponsorSiteUrl"
        email: "email"
  Jeunesse.Profile.Core.Users.Models.MainUserSimpleModel:
    type: "object"
    required:
    - "mainPK"
    - "siteUrl"
    properties:
      mainPK:
        type: "integer"
        format: "int32"
      siteUrl:
        type: "string"
      firstName:
        type: "string"
      firstName2:
        type: "string"
      firstName3:
        type: "string"
      lastName:
        type: "string"
      lastName2:
        type: "string"
      lastName3:
        type: "string"
      email:
        type: "string"
      phone:
        type: "string"
      company:
        type: "string"
      mainTypeName:
        type: "string"
      mainTypeFK:
        type: "integer"
        format: "int32"
      dateCreated:
        type: "string"
        format: "date-time"
      sponsorSiteUrl:
        type: "string"
      statusName:
        type: "string"
      statusFk:
        type: "string"
      facebookUrl:
        type: "string"
      skypeAccount:
        type: "string"
      twitterAccount:
        type: "string"
      instagramAccount:
        type: "string"
      tiktokAccount:
        type: "string"
      allowChangeUsername:
        type: "boolean"
      countryCode:
        type: "string"
    example:
      lastName: "lastName"
      siteUrl: "siteUrl"
      allowChangeUsername: true
      twitterAccount: "twitterAccount"
      firstName2: "firstName2"
      instagramAccount: "instagramAccount"
      mainTypeName: "mainTypeName"
      mainTypeFK: 1
      firstName3: "firstName3"
      statusFk: "statusFk"
      firstName: "firstName"
      facebookUrl: "facebookUrl"
      dateCreated: "2000-01-23T04:56:07.000+00:00"
      phone: "phone"
      countryCode: "countryCode"
      statusName: "statusName"
      lastName2: "lastName2"
      lastName3: "lastName3"
      company: "company"
      skypeAccount: "skypeAccount"
      mainPK: 6
      tiktokAccount: "tiktokAccount"
      sponsorSiteUrl: "sponsorSiteUrl"
      email: "email"
  Jeunesse.Profile.Core.Member.Models.MemberFormModel:
    type: "object"
    properties:
      userId:
        type: "integer"
        format: "int32"
      siteURL:
        type: "string"
      courtesyTitle:
        type: "string"
      homePhone:
        type: "string"
      secondPhone:
        type: "string"
      mobilePhone:
        type: "string"
      faxNumber:
        type: "string"
      emailAddress:
        type: "string"
      dateOfBirth:
        type: "string"
        format: "date-time"
      languageFk:
        type: "integer"
        format: "int32"
      receiveEmails:
        type: "boolean"
      receiveSms:
        type: "boolean"
      smsInEnglish:
        type: "boolean"
      currentPassword:
        type: "string"
      newPassword:
        type: "string"
      accptSmsCharges:
        type: "boolean"
      accptSmsNotReq:
        type: "boolean"
      lockPlacementLra:
        type: "string"
      allowInsidePlacement:
        type: "boolean"
      insidePlacementLevel:
        type: "integer"
        format: "int32"
      insideTopMainFk:
        type: "integer"
        format: "int32"
      insideSignupSponsorSide:
        type: "string"
      showContactInfo:
        type: "string"
      displayName:
        type: "string"
      sponsorType:
        type: "string"
      taxIdNumber:
        type: "string"
      company:
        type: "string"
      itAgreedToTermsDate:
        type: "string"
        format: "date-time"
      firstName2:
        type: "string"
      lastName2:
        type: "string"
      firstName3:
        type: "string"
      lastName3:
        type: "string"
      facebookUrl:
        type: "string"
      skypeAccount:
        type: "string"
      twitterAccount:
        type: "string"
      instagramAccount:
        type: "string"
      tiktokAccount:
        type: "string"
      allowChangeUsername:
        type: "boolean"
      memberID:
        type: "string"
      gender:
        type: "string"
  Jeunesse.Profile.Core.Users.Models.UserMarketingFormModel:
    type: "object"
    properties:
      skypeAccount:
        type: "string"
      twitterAccount:
        type: "string"
      facebookUrl:
        type: "string"
      facebookPixelId:
        type: "string"
      facebookDomainKey:
        type: "string"
      googleAnalyticsUa:
        type: "string"
      retailAdWordsId:
        type: "string"
      retailAdWordsLabel:
        type: "string"
      wholesaleAdWordsId:
        type: "string"
      wholesaleAdWordsLabel:
        type: "string"
      successOnDemandEnrolled:
        type: "boolean"
      mainPk:
        type: "integer"
        format: "int32"
      phrase:
        type: "string"
      bio:
        type: "string"
  Jeunesse.Profile.Core.Users.Models.UserRecognitionFormModel:
    type: "object"
    properties:
      mainPk:
        type: "integer"
        format: "int32"
      phrase:
        type: "string"
      bio:
        type: "string"
      imageLink:
        type: "string"
      recognitionName:
        type: "string"
      isActive:
        type: "boolean"
    example:
      imageLink: "imageLink"
      phrase: "phrase"
      bio: "bio"
      mainPk: 0
      isActive: true
      recognitionName: "recognitionName"
  Jeunesse.Profile.Core.Users.Models.ResetPasswordModel:
    type: "object"
    properties:
      userName:
        type: "string"
      email:
        type: "string"
  Jeunesse.Profile.Core.Users.Models.EmailValidationQueryModel:
    type: "object"
    properties:
      email:
        type: "string"
      country:
        type: "string"
  Jeunesse.Profile.Core.Users.Models.RemindUsernameModel:
    type: "object"
    properties:
      email:
        type: "string"
      phone:
        type: "string"
  Jeunesse.Profile.Core.Users.Models.UpdatePasswordModel:
    type: "object"
    properties:
      userName:
        type: "string"
      password:
        type: "string"
      token:
        type: "string"
  Jeunesse.Profile.Core.Users.Models.UserSponsorChangeModel:
    type: "object"
    properties:
      sponsorSiteUrl:
        type: "string"
      moveType:
        type: "string"
      reasonName:
        type: "string"
  Jeunesse.Profile.Core.Member.Models.PaymentViewModel:
    type: "object"
    required:
    - "ccBillingAddr1"
    - "ccBillingCity"
    - "ccBillingCountry"
    - "ccBillingState"
    - "ccBillingZip"
    - "ccExpireMonth"
    - "ccExpireYear"
    - "ccNumberLastFour"
    - "ccType"
    - "sequencePk"
    - "useOrder"
    properties:
      sequencePk:
        type: "integer"
        format: "int32"
      ccHolderName:
        type: "string"
      ccType:
        type: "string"
      ccNumberLastFour:
        type: "string"
      ccExpireMonth:
        type: "string"
      ccExpireYear:
        type: "string"
      ccCVV:
        type: "string"
      useOrder:
        type: "integer"
        format: "int32"
      ccBillingAddr1:
        type: "string"
      ccBillingAddr2:
        type: "string"
      ccBillingAddr3:
        type: "string"
      ccBillingCity:
        type: "string"
      ccBillingState:
        type: "string"
      ccBillingCountry:
        type: "string"
      ccBillingZip:
        type: "string"
      showCvv:
        type: "boolean"
      recurringToken:
        type: "string"
      cardToken:
        type: "string"
    example:
      ccCVV: "ccCVV"
      ccBillingCity: "ccBillingCity"
      recurringToken: "recurringToken"
      ccBillingZip: "ccBillingZip"
      ccExpireYear: "ccExpireYear"
      sequencePk: 0
      ccExpireMonth: "ccExpireMonth"
      ccBillingState: "ccBillingState"
      cardToken: "cardToken"
      ccType: "ccType"
      ccBillingCountry: "ccBillingCountry"
      showCvv: true
      ccBillingAddr3: "ccBillingAddr3"
      ccBillingAddr2: "ccBillingAddr2"
      ccBillingAddr1: "ccBillingAddr1"
      ccNumberLastFour: "ccNumberLastFour"
      useOrder: 6
      ccHolderName: "ccHolderName"
  Jeunesse.Profile.Core.Member.Models.PaymentFormModel:
    type: "object"
    properties:
      sequencePk:
        type: "integer"
        format: "int32"
      useOrder:
        type: "integer"
        format: "int32"
      oldUseOrder:
        type: "integer"
        format: "int32"
      ccName:
        type: "string"
      ccNumber:
        type: "string"
      ccNumberLastFour:
        type: "string"
      ccType:
        type: "string"
      ccExpireMonth:
        type: "string"
      ccExpireYear:
        type: "string"
      ccCvv:
        type: "string"
      cardToken:
        type: "string"
      ccfname:
        type: "string"
      cclname:
        type: "string"
      ccBillingAddr1:
        type: "string"
      ccBillingAddr2:
        type: "string"
      ccBillingAddr3:
        type: "string"
      ccBillingCity:
        type: "string"
      ccBillingState:
        type: "string"
      ccBillingCountry:
        type: "string"
      ccBillingZip:
        type: "string"
      ccBillingPhone:
        type: "string"
      ccBillingEmail:
        type: "string"
      useBillingAddress:
        type: "boolean"
  Jeunesse.Profile.Core.Member.Models.CreatePaymentMethodModel:
    type: "object"
    properties:
      redirectUrl:
        type: "string"
      errorMessage:
        type: "string"
      paymentViewModels:
        type: "array"
        items:
          $ref: "#/definitions/Jeunesse.Profile.Core.Member.Models.PaymentViewModel"
    example:
      redirectUrl: "redirectUrl"
      errorMessage: "errorMessage"
      paymentViewModels:
      - ccCVV: "ccCVV"
        ccBillingCity: "ccBillingCity"
        recurringToken: "recurringToken"
        ccBillingZip: "ccBillingZip"
        ccExpireYear: "ccExpireYear"
        sequencePk: 0
        ccExpireMonth: "ccExpireMonth"
        ccBillingState: "ccBillingState"
        cardToken: "cardToken"
        ccType: "ccType"
        ccBillingCountry: "ccBillingCountry"
        showCvv: true
        ccBillingAddr3: "ccBillingAddr3"
        ccBillingAddr2: "ccBillingAddr2"
        ccBillingAddr1: "ccBillingAddr1"
        ccNumberLastFour: "ccNumberLastFour"
        useOrder: 6
        ccHolderName: "ccHolderName"
      - ccCVV: "ccCVV"
        ccBillingCity: "ccBillingCity"
        recurringToken: "recurringToken"
        ccBillingZip: "ccBillingZip"
        ccExpireYear: "ccExpireYear"
        sequencePk: 0
        ccExpireMonth: "ccExpireMonth"
        ccBillingState: "ccBillingState"
        cardToken: "cardToken"
        ccType: "ccType"
        ccBillingCountry: "ccBillingCountry"
        showCvv: true
        ccBillingAddr3: "ccBillingAddr3"
        ccBillingAddr2: "ccBillingAddr2"
        ccBillingAddr1: "ccBillingAddr1"
        ccNumberLastFour: "ccNumberLastFour"
        useOrder: 6
        ccHolderName: "ccHolderName"
  Jeunesse.Profile.Core.Member.CustomerModel:
    type: "object"
    properties:
      mainPK:
        type: "integer"
        format: "int32"
      referrerMainFK:
        type: "integer"
        format: "int32"
      firstName:
        type: "string"
      lastName:
        type: "string"
      cultureName:
        type: "string"
      email:
        type: "string"
      phone:
        type: "string"
      address1:
        type: "string"
      address2:
        type: "string"
      city:
        type: "string"
      state:
        type: "string"
      zip:
        type: "string"
      country:
        type: "string"
      dateCreated:
        type: "string"
        format: "date-time"
      siteURL:
        type: "string"
      titleCourtesy:
        type: "string"
      dob:
        type: "string"
        format: "date-time"
      mi:
        type: "string"
      suffix:
        type: "string"
      willReceiveSms:
        type: "boolean"
      willReceiveEmail:
        type: "boolean"
      secondphone:
        type: "string"
      fax:
        type: "string"
    example:
      zip: "zip"
      lastName: "lastName"
      country: "country"
      siteURL: "siteURL"
      address2: "address2"
      city: "city"
      address1: "address1"
      titleCourtesy: "titleCourtesy"
      willReceiveSms: true
      secondphone: "secondphone"
      cultureName: "cultureName"
      willReceiveEmail: true
      suffix: "suffix"
      referrerMainFK: 6
      firstName: "firstName"
      dateCreated: "2000-01-23T04:56:07.000+00:00"
      phone: "phone"
      dob: "2000-01-23T04:56:07.000+00:00"
      state: "state"
      mainPK: 0
      mi: "mi"
      fax: "fax"
      email: "email"
  Jeunesse.Profile.Core.Member.AddressModel:
    type: "object"
    required:
    - "address1"
    - "city"
    - "country"
    - "state"
    properties:
      firstName:
        type: "string"
        minLength: 0
        maxLength: 50
      lastName:
        type: "string"
        minLength: 0
        maxLength: 50
      address1:
        type: "string"
        minLength: 0
        maxLength: 250
      address2:
        type: "string"
        minLength: 0
        maxLength: 250
      address3:
        type: "string"
        minLength: 0
        maxLength: 250
      city:
        type: "string"
        minLength: 0
        maxLength: 50
      state:
        type: "string"
        minLength: 0
        maxLength: 50
      postalCode:
        type: "string"
        minLength: 0
        maxLength: 50
      country:
        type: "string"
        minLength: 0
        maxLength: 50
      phone:
        type: "string"
        minLength: 0
        maxLength: 50
      secondPhone:
        type: "string"
        minLength: 0
        maxLength: 50
      email:
        type: "string"
        minLength: 0
        maxLength: 100
      mainTypeFk:
        type: "integer"
        format: "int32"
      area:
        type: "string"
        minLength: 0
        maxLength: 250
      ssn:
        type: "string"
      taxIdNumber:
        type: "string"
        minLength: 0
        maxLength: 20
      isUseShippingAddress:
        type: "boolean"
      isOTG:
        type: "boolean"
  Jeunesse.Profile.Core.Member.Models.TWUnified.TWUnifiedDonationOrgOptions:
    type: "object"
    properties:
      optionValue:
        type: "integer"
        format: "int32"
      optionName:
        type: "string"
    example:
      optionValue: 0
      optionName: "optionName"
  Jeunesse.Profile.Core.Member.Models.SetReferrerFormModel:
    type: "object"
    properties:
      mainPk:
        type: "integer"
        format: "int32"
      siteUrl:
        type: "string"
  Jeunesse.Profile.Core.Member.Models.AddressQueryViewModel:
    type: "object"
    properties:
      isOTG:
        type: "boolean"
  Jeunesse.Profile.Core.Member.Models.TWUnified.TWUnifiedQueryModel:
    type: "object"
    properties:
      mainFK:
        type: "integer"
        format: "int32"
  Jeunesse.Profile.Core.Member.Models.TWUnified.TWUnifiedInfo:
    type: "object"
    properties:
      containerType:
        type: "integer"
        format: "int32"
      containerNumber:
        type: "string"
        minLength: 0
        maxLength: 100
      containerTypeCode:
        type: "string"
        minLength: 0
        maxLength: 100
      containerCode:
        type: "string"
        minLength: 0
        maxLength: 100
      isCurrentOption:
        type: "boolean"
    example:
      containerNumber: "containerNumber"
      containerType: 0
      containerCode: "containerCode"
      containerTypeCode: "containerTypeCode"
      isCurrentOption: true
  Jeunesse.Profile.Core.Member.Models.PasswordFormModel:
    type: "object"
    required:
    - "newPassword"
    - "oldPassword"
    properties:
      oldPassword:
        type: "string"
      newPassword:
        type: "string"
  Jeunesse.Profile.Core.Member.Models.PaymentOrderModel:
    type: "object"
    properties:
      sequencePk:
        type: "integer"
        format: "int32"
      useOrder:
        type: "integer"
        format: "int32"
      oldUseOrder:
        type: "integer"
        format: "int32"
  Jeunesse.Profile.Core.Member.Models.UpdateIsShippingAddressModel:
    type: "object"
    properties:
      mainPK:
        type: "integer"
        format: "int32"
      isUseShippingAddress:
        type: "boolean"
  Jeunesse.Profile.Core.Member.MemberModel:
    type: "object"
    required:
    - "country"
    - "email"
    - "firstName"
    - "lastName"
    - "mainTypeFK"
    - "password"
    - "phoneNumber"
    - "referrer"
    - "siteUrl"
    properties:
      siteUrl:
        type: "string"
        minLength: 0
        maxLength: 50
      sponsorUsername:
        type: "string"
        minLength: 0
        maxLength: 50
      firstName:
        type: "string"
        minLength: 0
        maxLength: 50
      middleName:
        type: "string"
        minLength: 0
        maxLength: 50
      courtesyTitle:
        type: "string"
        minLength: 0
        maxLength: 10
      lastName:
        type: "string"
        minLength: 0
        maxLength: 50
      suffix:
        type: "string"
        minLength: 0
        maxLength: 50
      firstName2:
        type: "string"
        minLength: 0
        maxLength: 50
      lastName2:
        type: "string"
        minLength: 0
        maxLength: 50
      company:
        type: "string"
        minLength: 0
        maxLength: 100
      screenName:
        type: "string"
        minLength: 0
        maxLength: 100
      payee:
        type: "string"
      address1:
        type: "string"
        minLength: 0
        maxLength: 250
      address2:
        type: "string"
        minLength: 0
        maxLength: 250
      address3:
        type: "string"
        minLength: 0
        maxLength: 250
      city:
        type: "string"
        minLength: 0
        maxLength: 50
      state:
        type: "string"
        minLength: 0
        maxLength: 50
      otherState:
        type: "string"
        minLength: 0
        maxLength: 50
      postalCode:
        type: "string"
        minLength: 0
        maxLength: 50
      country:
        type: "string"
        minLength: 0
        maxLength: 50
      useBilling:
        type: "boolean"
      shipFirstName:
        type: "string"
        minLength: 0
        maxLength: 50
      shipLastName:
        type: "string"
        minLength: 0
        maxLength: 50
      shipAddress1:
        type: "string"
        minLength: 0
        maxLength: 250
      shipAddress2:
        type: "string"
        minLength: 0
        maxLength: 250
      shipAddress3:
        type: "string"
        minLength: 0
        maxLength: 250
      shipCity:
        type: "string"
        minLength: 0
        maxLength: 50
      shipState:
        type: "string"
        minLength: 0
        maxLength: 50
      shipOtherState:
        type: "string"
        minLength: 0
        maxLength: 50
      shipPostalCode:
        type: "string"
        minLength: 0
        maxLength: 50
      shipCountry:
        type: "string"
        minLength: 0
        maxLength: 2
      phoneNumber:
        type: "string"
        minLength: 0
        maxLength: 50
      phoneNumber2:
        type: "string"
        minLength: 0
        maxLength: 50
      fax:
        type: "string"
        minLength: 0
        maxLength: 50
      email:
        type: "string"
        minLength: 0
        maxLength: 100
      password:
        type: "string"
        minLength: 0
        maxLength: 250
      ssn:
        type: "string"
        minLength: 0
        maxLength: 250
      idType:
        type: "integer"
        format: "int32"
      referrer:
        type: "integer"
        format: "int32"
      area:
        type: "string"
      dateOfBirth:
        type: "string"
      coAppName:
        type: "string"
        minLength: 0
        maxLength: 100
      coAppSsn:
        type: "string"
        minLength: 0
        maxLength: 250
      isCorporate:
        type: "integer"
        format: "int32"
      mainTypeFK:
        type: "integer"
        format: "int32"
      gender:
        type: "string"
        minLength: 0
        maxLength: 1
      personalTaxID:
        type: "string"
        minLength: 0
        maxLength: 20
      languageFK:
        type: "integer"
        format: "int32"
      autoshipDate:
        type: "string"
        format: "date-time"
      anniversaryDate:
        type: "string"
        format: "date-time"
      checkedW8BEN:
        type: "boolean"
      checkedW8BENDate:
        type: "string"
        format: "date-time"
      repSiteService:
        $ref: "#/definitions/Jeunesse.Profile.Core.RepSite.RepSiteService"
      smsPhoneNumber:
        type: "string"
      culture:
        type: "string"
      willReceiveSMS:
        type: "boolean"
      memberID:
        type: "string"
      userValidation:
        $ref: "#/definitions/Jeunesse.Profile.Core.Users.Models.UserVerification.SignupUserValidationModel"
  Jeunesse.Profile.Core.RepSite.RepSiteService:
    type: "object"
  Jeunesse.Profile.Core.Member.Models.ConvertAnonymousMemberFormModel:
    type: "object"
    required:
    - "password"
    - "userName"
    properties:
      userName:
        type: "string"
        minLength: 0
        maxLength: 50
      password:
        type: "string"
        minLength: 0
        maxLength: 250
      orderNumber:
        type: "integer"
        format: "int32"
      mainTypeFK:
        type: "integer"
        format: "int32"
  Jeunesse.Profile.Core.Member.Models.SetMemberPriceListFormModel:
    type: "object"
    properties:
      mainFK:
        type: "integer"
        format: "int32"
      priceListFK:
        type: "integer"
        format: "int32"
      cartType:
        type: "string"
      startDate:
        type: "string"
        format: "date-time"
      endDate:
        type: "string"
        format: "date-time"
      mainOrderTypePK:
        type: "integer"
        format: "int32"
      minOrderTotal:
        type: "number"
        format: "double"
  Jeunesse.Profile.Core.Member.Models.ComplianceFormModel:
    type: "object"
    required:
    - "content"
    - "email"
    - "firstName"
    - "lastName"
    - "phone"
    properties:
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      phone:
        type: "string"
      content:
        type: "string"
  Jeunesse.Profile.Core.Member.GovIdModel:
    type: "object"
    required:
    - "country"
    - "govID"
    - "idType"
    - "mainPK"
    properties:
      govID:
        type: "string"
        minLength: 0
        maxLength: 250
      idType:
        type: "integer"
        format: "int32"
      country:
        type: "string"
        minLength: 0
        maxLength: 2
      mainPK:
        type: "integer"
        format: "int32"
      isCompany:
        type: "boolean"
      languageFk:
        type: "integer"
        format: "int32"
      useComplexValidation:
        type: "boolean"
      firstName:
        type: "string"
      lastName:
        type: "string"
      birthYear:
        type: "string"
        minLength: 0
        maxLength: 4
  Jeunesse.Profile.Api.ViewModels.AddMemberFromEventGuestFormModel:
    type: "object"
    required:
    - "cartKey"
    - "password"
    - "siteUrl"
    properties:
      cartKey:
        type: "string"
        format: "uuid"
      siteUrl:
        type: "string"
      password:
        type: "string"
  Jeunesse.Profile.Core.Member.Models.MemberFromEventGuestViewModel:
    type: "object"
    properties:
      mainPK:
        type: "integer"
        format: "int32"
      mainTypeFK:
        type: "integer"
        format: "int32"
      referrerMainFK:
        type: "integer"
        format: "int32"
      siteURL:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      address1:
        type: "string"
      address2:
        type: "string"
      city:
        type: "string"
      state:
        type: "string"
      zip:
        type: "string"
      country:
        type: "string"
      shipFirstName:
        type: "string"
      shipLastName:
        type: "string"
      shipAddress1:
        type: "string"
      shipAddress2:
        type: "string"
      shipCity:
        type: "string"
      shipState:
        type: "string"
      shipZip:
        type: "string"
      shipCountry:
        type: "string"
      phone:
        type: "string"
      email:
        type: "string"
      status:
        type: "string"
      languageFK:
        type: "integer"
        format: "int32"
    example:
      zip: "zip"
      lastName: "lastName"
      country: "country"
      shipCity: "shipCity"
      siteURL: "siteURL"
      address2: "address2"
      city: "city"
      shipAddress1: "shipAddress1"
      shipZip: "shipZip"
      address1: "address1"
      shipAddress2: "shipAddress2"
      languageFK: 5
      mainTypeFK: 6
      referrerMainFK: 1
      shipFirstName: "shipFirstName"
      shipCountry: "shipCountry"
      firstName: "firstName"
      phone: "phone"
      shipState: "shipState"
      state: "state"
      mainPK: 0
      shipLastName: "shipLastName"
      email: "email"
      status: "status"
  Jeunesse.Profile.Core.Member.Models.UpgradeRetailFormModel:
    type: "object"
    required:
    - "email"
    - "password"
    properties:
      mainFK:
        type: "integer"
        format: "int32"
      mainOrderPrimaryKey:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      mainTypeFK:
        type: "integer"
        format: "int32"
      userValidation:
        $ref: "#/definitions/Jeunesse.Profile.Core.Users.Models.UserVerification.SignupUserValidationModel"
  Jeunesse.Profile.Core.Messages.Models.SMNewsQueryModel:
    type: "object"
    properties:
      username:
        type: "string"
      lastArticleFK:
        type: "integer"
        format: "int32"
      length:
        type: "integer"
        format: "int32"
      categories:
        type: "string"
      categoryKeys:
        type: "array"
        items:
          type: "string"
      mainFK:
        type: "integer"
        format: "int32"
      deviceCultureName:
        type: "string"
      title:
        type: "string"
  Jeunesse.Profile.Core.Messages.Models.FolderQueryModel:
    type: "object"
    properties:
      name:
        type: "string"
      parentFolderId:
        type: "integer"
        format: "int32"
  Jeunesse.Profile.Core.Messages.Models.MailQueryModel:
    type: "object"
    properties:
      username:
        type: "string"
      isFavorite:
        type: "boolean"
      pageNumber:
        type: "integer"
        format: "int32"
      pageSize:
        type: "integer"
        format: "int32"
      searchTerm:
        type: "string"
  Jeunesse.Profile.Core.Messages.Models.MailUpdateQueryModel:
    type: "object"
    properties:
      mainFK:
        type: "integer"
        format: "int32"
      messageIDs:
        type: "string"
      messagePKs:
        type: "array"
        items:
          type: "integer"
          format: "int32"
      isRead:
        type: "boolean"
      isDeleted:
        type: "boolean"
      isFavorite:
        type: "boolean"
  Jeunesse.Profile.Core.Messages.Models.AlertsQueryModel:
    type: "object"
    properties:
      mainFK:
        type: "integer"
        format: "int32"
      deviceCultureName:
        type: "string"
      alertIDs:
        type: "string"
      alertPKs:
        type: "array"
        items:
          type: "integer"
          format: "int32"
      isRead:
        type: "boolean"
  Jeunesse.Profile.Core.OptIn.Models.OptInItemViewModel:
    type: "object"
    required:
    - "productBrand"
    - "productBrandPK"
    properties:
      productBrandPK:
        type: "integer"
        format: "int32"
      productBrand:
        type: "string"
      emailType:
        type: "array"
        items:
          $ref: "#/definitions/Jeunesse.Profile.Core.OptIn.Models.OptInEmailTypeModel"
    example:
      emailType:
      - unsubscribe: true
        sortOrder: 1
        typeName: "typeName"
        emailTypePK: 6
      - unsubscribe: true
        sortOrder: 1
        typeName: "typeName"
        emailTypePK: 6
      productBrand: "productBrand"
      productBrandPK: 0
  Jeunesse.Profile.Core.OptIn.Models.OptInEmailTypeModel:
    type: "object"
    required:
    - "emailTypePK"
    - "sortOrder"
    - "typeName"
    - "unsubscribe"
    properties:
      emailTypePK:
        type: "integer"
        format: "int32"
      typeName:
        type: "string"
      sortOrder:
        type: "integer"
        format: "int32"
      unsubscribe:
        type: "boolean"
    example:
      unsubscribe: true
      sortOrder: 1
      typeName: "typeName"
      emailTypePK: 6
  Jeunesse.Profile.Core.OptIn.Models.OptInFormModel:
    type: "object"
    required:
    - "culture"
    - "optInItems"
    properties:
      culture:
        type: "string"
      optInItems:
        type: "array"
        items:
          $ref: "#/definitions/Jeunesse.Profile.Core.OptIn.Models.OptInItemFormModel"
  Jeunesse.Profile.Core.OptIn.Models.OptInItemFormModel:
    type: "object"
    required:
    - "emailTypePK"
    - "productBrandPK"
    - "unsubscribe"
    properties:
      productBrandPK:
        type: "integer"
        format: "int32"
      emailTypePK:
        type: "integer"
        format: "int32"
      unsubscribe:
        type: "boolean"
  Jeunesse.Profile.Core.R3Global.Models.MatrixNodeQueryModel:
    type: "object"
    properties:
      childLegs:
        type: "integer"
        format: "int32"
      outputDepth:
        type: "integer"
        format: "int32"
      shouldOverrideFullLegsCheck:
        type: "boolean"
  Jeunesse.Profile.Core.R3Global.Models.MatrixNodeModel:
    type: "object"
    properties:
      mainFK:
        type: "integer"
        format: "int32"
      referrerMainFK:
        type: "integer"
        format: "int32"
      siteURL:
        type: "string"
      country:
        type: "string"
      level:
        type: "integer"
        format: "int32"
      matrixResetDate:
        type: "string"
        format: "date-time"
      fname:
        type: "string"
      lname:
        type: "string"
      email:
        type: "string"
      phone:
        type: "string"
      highestRankName:
        type: "string"
      currentRankName:
        type: "string"
      isUserQualified:
        type: "boolean"
      sponsorSide:
        type: "string"
      isOnSmartDelivery:
        type: "boolean"
      leftPoints:
        type: "integer"
        format: "int32"
      rightPoints:
        type: "integer"
        format: "int32"
      leftSideCount:
        type: "integer"
        format: "int32"
      rightSideCount:
        type: "integer"
        format: "int32"
      leftSideCountQualified:
        type: "integer"
        format: "int32"
      rightSideCountQualified:
        type: "integer"
        format: "int32"
      greenLevelsCount:
        type: "integer"
        format: "int32"
      greenDepth:
        type: "integer"
        format: "int32"
      isR3GActive:
        type: "boolean"
      lastSDBV:
        type: "integer"
        format: "int32"
      currSDBV:
        type: "integer"
        format: "int32"
      isR3GQualified:
        type: "boolean"
      sortingOrder:
        type: "integer"
        format: "int64"
    example:
      country: "country"
      rightPoints: 5
      siteURL: "siteURL"
      isR3GActive: true
      highestRankName: "highestRankName"
      leftSideCount: 2
      referrerMainFK: 6
      lname: "lname"
      greenDepth: 4
      currSDBV: 1
      isOnSmartDelivery: true
      isR3GQualified: true
      rightSideCountQualified: 3
      leftPoints: 5
      email: "email"
      sponsorSide: "sponsorSide"
      rightSideCount: 7
      fname: "fname"
      currentRankName: "currentRankName"
      sortingOrder: 1
      level: 1
      matrixResetDate: "2000-01-23T04:56:07.000+00:00"
      isUserQualified: true
      greenLevelsCount: 2
      leftSideCountQualified: 9
      phone: "phone"
      mainFK: 0
      lastSDBV: 7
  Jeunesse.Profile.Core.RepSite.Models.ReplicateSiteViewModel:
    type: "object"
    properties:
      mainPk:
        type: "integer"
        format: "int32"
      name:
        type: "string"
      phone:
        type: "string"
      email:
        type: "string"
      isInventory:
        type: "boolean"
      showOption:
        type: "string"
      cinsayUrl:
        type: "string"
      showCinsay:
        type: "boolean"
      jSocial:
        type: "boolean"
      alias:
        type: "string"
      canShowPrefCust:
        type: "boolean"
      canShowJoinNowLink:
        type: "boolean"
      googleAnalyticsUA:
        type: "string"
      isWholesaleCustomer:
        type: "boolean"
      canAllowRetailCustomer:
        type: "boolean"
      canAllowRetailSignup:
        type: "boolean"
      facebookPixelId:
        type: "string"
      facebookDomainKey:
        type: "string"
      isCCAP:
        type: "boolean"
      isCorporate:
        type: "boolean"
      corporate:
        type: "boolean"
      availableSamplesCountryCodes:
        type: "array"
        items:
          type: "string"
      mainReferrerFK:
        type: "integer"
        format: "int32"
      mainTypeFK:
        type: "integer"
        format: "int32"
      sponsorTypes:
        type: "array"
        items:
          type: "string"
      country:
        type: "string"
    example:
      cinsayUrl: "cinsayUrl"
      country: "country"
      showCinsay: true
      googleAnalyticsUA: "googleAnalyticsUA"
      sponsorTypes:
      - "sponsorTypes"
      - "sponsorTypes"
      isWholesaleCustomer: true
      facebookPixelId: "facebookPixelId"
      isCorporate: true
      alias: "alias"
      isCCAP: true
      mainPk: 0
      email: "email"
      isInventory: true
      canShowJoinNowLink: true
      facebookDomainKey: "facebookDomainKey"
      mainTypeFK: 1
      showOption: "showOption"
      canAllowRetailCustomer: true
      availableSamplesCountryCodes:
      - "availableSamplesCountryCodes"
      - "availableSamplesCountryCodes"
      phone: "phone"
      corporate: true
      jSocial: true
      canShowPrefCust: true
      name: "name"
      mainReferrerFK: 6
      canAllowRetailSignup: true
  Jeunesse.Profile.Api.ViewModels.GetDistributorParamsModel:
    type: "object"
    properties:
      cartType:
        type: "string"
      countryCode:
        type: "string"
  Jeunesse.Profile.Core.RepSite.Models.DiscountCodeViewModel:
    type: "object"
    properties:
      discountCode:
        type: "string"
      mainPK:
        type: "integer"
        format: "int32"
      siteUrl:
        type: "string"
      translation:
        type: "string"
    example:
      siteUrl: "siteUrl"
      discountCode: "discountCode"
      translation: "translation"
      mainPK: 0
  Jeunesse.Profile.Core.RepSite.Models.SampleReferrerFormModel:
    type: "object"
    properties:
      siteUrl:
        type: "string"
      email:
        type: "string"
  Jeunesse.Profile.Core.Social.Models.NewLeadFormModel:
    type: "object"
    properties:
      siteUrl:
        type: "string"
      fName:
        type: "string"
      lName:
        type: "string"
      email:
        type: "string"
      phone:
        type: "string"
      address1:
        type: "string"
      address2:
        type: "string"
      city:
        type: "string"
      state:
        type: "string"
      zip:
        type: "string"
      country:
        type: "string"
      note:
        type: "string"
      dripCampaign:
        type: "string"
      cultureName:
        type: "string"
  Jeunesse.Profile.Core.SmartMobile.GetReportsRequestModel:
    type: "object"
    properties:
      companyPK:
        type: "integer"
        format: "int32"
  Jeunesse.Profile.Core.SmartMobile.UpdateMessageRequest:
    type: "object"
    properties:
      isRead:
        type: "boolean"
      isDeleted:
        type: "boolean"
  Jeunesse.Profile.Core.SmartMobile.RegisterDeviceTokenRequestModel:
    type: "object"
    required:
    - "applicationName"
    - "deviceToken"
    - "deviceType"
    - "mainFK"
    properties:
      mainFK:
        type: "integer"
        format: "int32"
      deviceType:
        type: "string"
      deviceToken:
        type: "string"
      applicationName:
        type: "string"
  Jeunesse.Profile.Core.Sponsorship.Models.SponsorshipReportQueryModel:
    type: "object"
    properties:
      mainSiteUrl:
        type: "string"
      siteURL:
        type: "string"
      fName:
        type: "string"
      lName:
        type: "string"
      displayName:
        type: "string"
      isCountedByPlatinum:
        type: "boolean"
      statuses:
        type: "string"
      highestRanks:
        type: "string"
      searchMainPK:
        type: "integer"
        format: "int32"
  Jeunesse.Profile.Core.Synchronization.Models.PushOrderData:
    type: "object"
    properties:
      batches:
        type: "array"
        items:
          $ref: "#/definitions/Jeunesse.Profile.Core.Synchronization.Models.PushOrderBatch"
    example:
      batches:
      - shippingOrdersFK: 0
        orders:
        - autEmail: "autEmail"
          area: "area"
          autIdCardNumber: "autIdCardNumber"
          shippingOrdersFK: 1
          city: "city"
          receiveAddress: "receiveAddress"
          mainOrdersPK: 6
          merchantOrderId: "merchantOrderId"
          autPhoneNumber: "autPhoneNumber"
          autname: "autname"
          payAmount: 5.962133916683182
          province: "province"
          orderCommitTime: "2000-01-23T04:56:07.000+00:00"
          productList:
          - productId: "productId"
            price: 7.061401241503109
            num: 2
            name: "name"
            productURl: "productURl"
            mainOrdersFK: 5
          - productId: "productId"
            price: 7.061401241503109
            num: 2
            name: "name"
            productURl: "productURl"
            mainOrdersFK: 5
        - autEmail: "autEmail"
          area: "area"
          autIdCardNumber: "autIdCardNumber"
          shippingOrdersFK: 1
          city: "city"
          receiveAddress: "receiveAddress"
          mainOrdersPK: 6
          merchantOrderId: "merchantOrderId"
          autPhoneNumber: "autPhoneNumber"
          autname: "autname"
          payAmount: 5.962133916683182
          province: "province"
          orderCommitTime: "2000-01-23T04:56:07.000+00:00"
          productList:
          - productId: "productId"
            price: 7.061401241503109
            num: 2
            name: "name"
            productURl: "productURl"
            mainOrdersFK: 5
          - productId: "productId"
            price: 7.061401241503109
            num: 2
            name: "name"
            productURl: "productURl"
            mainOrdersFK: 5
      - shippingOrdersFK: 0
        orders:
        - autEmail: "autEmail"
          area: "area"
          autIdCardNumber: "autIdCardNumber"
          shippingOrdersFK: 1
          city: "city"
          receiveAddress: "receiveAddress"
          mainOrdersPK: 6
          merchantOrderId: "merchantOrderId"
          autPhoneNumber: "autPhoneNumber"
          autname: "autname"
          payAmount: 5.962133916683182
          province: "province"
          orderCommitTime: "2000-01-23T04:56:07.000+00:00"
          productList:
          - productId: "productId"
            price: 7.061401241503109
            num: 2
            name: "name"
            productURl: "productURl"
            mainOrdersFK: 5
          - productId: "productId"
            price: 7.061401241503109
            num: 2
            name: "name"
            productURl: "productURl"
            mainOrdersFK: 5
        - autEmail: "autEmail"
          area: "area"
          autIdCardNumber: "autIdCardNumber"
          shippingOrdersFK: 1
          city: "city"
          receiveAddress: "receiveAddress"
          mainOrdersPK: 6
          merchantOrderId: "merchantOrderId"
          autPhoneNumber: "autPhoneNumber"
          autname: "autname"
          payAmount: 5.962133916683182
          province: "province"
          orderCommitTime: "2000-01-23T04:56:07.000+00:00"
          productList:
          - productId: "productId"
            price: 7.061401241503109
            num: 2
            name: "name"
            productURl: "productURl"
            mainOrdersFK: 5
          - productId: "productId"
            price: 7.061401241503109
            num: 2
            name: "name"
            productURl: "productURl"
            mainOrdersFK: 5
  Jeunesse.Profile.Core.Synchronization.Models.PushOrderBatch:
    type: "object"
    properties:
      shippingOrdersFK:
        type: "integer"
        format: "int32"
      orders:
        type: "array"
        items:
          $ref: "#/definitions/Jeunesse.Profile.Core.Synchronization.Models.PushOrder"
    example:
      shippingOrdersFK: 0
      orders:
      - autEmail: "autEmail"
        area: "area"
        autIdCardNumber: "autIdCardNumber"
        shippingOrdersFK: 1
        city: "city"
        receiveAddress: "receiveAddress"
        mainOrdersPK: 6
        merchantOrderId: "merchantOrderId"
        autPhoneNumber: "autPhoneNumber"
        autname: "autname"
        payAmount: 5.962133916683182
        province: "province"
        orderCommitTime: "2000-01-23T04:56:07.000+00:00"
        productList:
        - productId: "productId"
          price: 7.061401241503109
          num: 2
          name: "name"
          productURl: "productURl"
          mainOrdersFK: 5
        - productId: "productId"
          price: 7.061401241503109
          num: 2
          name: "name"
          productURl: "productURl"
          mainOrdersFK: 5
      - autEmail: "autEmail"
        area: "area"
        autIdCardNumber: "autIdCardNumber"
        shippingOrdersFK: 1
        city: "city"
        receiveAddress: "receiveAddress"
        mainOrdersPK: 6
        merchantOrderId: "merchantOrderId"
        autPhoneNumber: "autPhoneNumber"
        autname: "autname"
        payAmount: 5.962133916683182
        province: "province"
        orderCommitTime: "2000-01-23T04:56:07.000+00:00"
        productList:
        - productId: "productId"
          price: 7.061401241503109
          num: 2
          name: "name"
          productURl: "productURl"
          mainOrdersFK: 5
        - productId: "productId"
          price: 7.061401241503109
          num: 2
          name: "name"
          productURl: "productURl"
          mainOrdersFK: 5
  Jeunesse.Profile.Core.Synchronization.Models.PushOrder:
    type: "object"
    properties:
      mainOrdersPK:
        type: "integer"
        format: "int32"
      shippingOrdersFK:
        type: "integer"
        format: "int32"
      merchantOrderId:
        type: "string"
      payAmount:
        type: "number"
        format: "double"
      autname:
        type: "string"
      autIdCardNumber:
        type: "string"
      autPhoneNumber:
        type: "string"
      autEmail:
        type: "string"
      city:
        type: "string"
      province:
        type: "string"
      area:
        type: "string"
      receiveAddress:
        type: "string"
      orderCommitTime:
        type: "string"
        format: "date-time"
      productList:
        type: "array"
        items:
          $ref: "#/definitions/Jeunesse.Profile.Core.Synchronization.Models.PushOrderProduct"
    example:
      autEmail: "autEmail"
      area: "area"
      autIdCardNumber: "autIdCardNumber"
      shippingOrdersFK: 1
      city: "city"
      receiveAddress: "receiveAddress"
      mainOrdersPK: 6
      merchantOrderId: "merchantOrderId"
      autPhoneNumber: "autPhoneNumber"
      autname: "autname"
      payAmount: 5.962133916683182
      province: "province"
      orderCommitTime: "2000-01-23T04:56:07.000+00:00"
      productList:
      - productId: "productId"
        price: 7.061401241503109
        num: 2
        name: "name"
        productURl: "productURl"
        mainOrdersFK: 5
      - productId: "productId"
        price: 7.061401241503109
        num: 2
        name: "name"
        productURl: "productURl"
        mainOrdersFK: 5
  Jeunesse.Profile.Core.Synchronization.Models.PushOrderProduct:
    type: "object"
    properties:
      mainOrdersFK:
        type: "integer"
        format: "int32"
      name:
        type: "string"
      num:
        type: "integer"
        format: "int32"
      productId:
        type: "string"
      price:
        type: "number"
        format: "double"
      productURl:
        type: "string"
    example:
      productId: "productId"
      price: 7.061401241503109
      num: 2
      name: "name"
      productURl: "productURl"
      mainOrdersFK: 5
  Jeunesse.Profile.Core.Synchronization.Models.QueryOrderStatusData:
    type: "object"
    properties:
      syncQueryStatusOrdersId:
        type: "integer"
        format: "int32"
      orders:
        type: "array"
        items:
          type: "string"
    example:
      orders:
      - "orders"
      - "orders"
      syncQueryStatusOrdersId: 0
  Jeunesse.Profile.Core.Synchronization.Models.SyncDataFormModel:
    type: "object"
    properties:
      data:
        type: "string"
  Jeunesse.Profile.Core.Synchronization.Models.PushOrdersResult:
    type: "object"
    properties:
      status:
        type: "string"
      msg:
        type: "string"
      success_num:
        type: "integer"
        format: "int32"
      data:
        type: "array"
        items:
          $ref: "#/definitions/Jeunesse.Profile.Core.Synchronization.Models.PushOrderResult"
  Jeunesse.Profile.Core.Synchronization.Models.PushOrderResult:
    type: "object"
    properties:
      merchantOrderId:
        type: "string"
      errorCode:
        type: "integer"
        format: "int32"
      msg:
        type: "string"
  Jeunesse.Profile.Core.Synchronization.Models.QueryOrderResultData:
    type: "object"
    properties:
      status:
        type: "string"
      msg:
        type: "string"
      data:
        type: "array"
        items:
          $ref: "#/definitions/Jeunesse.Profile.Core.Synchronization.Models.QueryOrderResult"
  Jeunesse.Profile.Core.Synchronization.Models.QueryOrderResult:
    type: "object"
    properties:
      merchantOrderId:
        type: "string"
      declare_status:
        type: "integer"
        format: "int32"
      certification_status:
        type: "integer"
        format: "int32"
      pay_status:
        type: "integer"
        format: "int32"
      expressNumber:
        type: "string"
      expressCompany:
        type: "string"
      msg:
        type: "string"
      errorCode:
        type: "integer"
        format: "int32"
  Jeunesse.Profile.Core.Training.Models.TrainingRecordViewModel:
    type: "object"
    properties:
      event:
        type: "string"
      courseName:
        type: "string"
      courseKey:
        type: "string"
      chapterName:
        type: "string"
      eventDate:
        type: "string"
        format: "date-time"
    example:
      courseName: "courseName"
      chapterName: "chapterName"
      courseKey: "courseKey"
      event: "event"
      eventDate: "2000-01-23T04:56:07.000+00:00"
  Jeunesse.Profile.Core.Training.Models.TrainingSetupQueryModel:
    type: "object"
    properties:
      mainFK:
        type: "integer"
        format: "int32"
  Jeunesse.Profile.Core.Training.Models.TrainingSetupViewModel:
    type: "object"
    properties:
      success:
        type: "boolean"
      sendDirectlyToMoodle:
        type: "boolean"
      message:
        type: "string"
      accountType:
        type: "string"
      redirectUrl:
        type: "string"
      country:
        type: "string"
      language:
        type: "string"
      hasCompletedCourses:
        type: "boolean"
    example:
      country: "country"
      redirectUrl: "redirectUrl"
      sendDirectlyToMoodle: true
      success: true
      accountType: "accountType"
      language: "language"
      message: "message"
      hasCompletedCourses: true
  Jeunesse.Profile.Core.Wallet.Models.WalletHomeSettings:
    type: "object"
    properties:
      isInNoPaycardCountries:
        type: "boolean"
      noPayout:
        type: "boolean"
      isInNoPaycardNoEFTPKs:
        type: "boolean"
      isAddFundsToWalletEnabled:
        type: "boolean"
      payoutMethod:
        type: "string"
      isReplacementPaycard:
        type: "boolean"
      isEWalletRegister:
        type: "boolean"
      isPayCardRegister:
        type: "boolean"
      loginToEwallet:
        type: "boolean"
    example:
      isReplacementPaycard: true
      isInNoPaycardNoEFTPKs: true
      isPayCardRegister: true
      isAddFundsToWalletEnabled: true
      isInNoPaycardCountries: true
      isEWalletRegister: true
      payoutMethod: "payoutMethod"
      noPayout: true
      loginToEwallet: true
  Jeunesse.Profile.Core.Wallet.Models.PayCardRegisterAllowed:
    type: "object"
    properties:
      registerAllowed:
        type: "boolean"
      message:
        type: "string"
    example:
      message: "message"
      registerAllowed: true
  Jeunesse.Profile.Core.Wallet.Models.PaymentMethodModel:
    type: "object"
    properties:
      paymentMethodValue:
        type: "string"
    example:
      paymentMethodValue: "paymentMethodValue"
  Jeunesse.Profile.Core.Wallet.Models.AccountDetailsModel:
    type: "object"
    properties:
      firstName:
        type: "string"
      lastName:
        type: "string"
      company:
        type: "string"
      address1:
        type: "string"
      address2:
        type: "string"
      city:
        type: "string"
      state:
        type: "string"
      stateName:
        type: "string"
      zip:
        type: "string"
      countryName:
        type: "string"
      gmtOffSet:
        type: "integer"
        format: "int32"
      timeZone:
        type: "string"
      email:
        type: "string"
      dob:
        type: "string"
        format: "date-time"
      homePhone:
        type: "string"
      workPhone:
        type: "string"
      gender:
        type: "string"
    example:
      zip: "zip"
      lastName: "lastName"
      gender: "gender"
      address2: "address2"
      city: "city"
      address1: "address1"
      homePhone: "homePhone"
      timeZone: "timeZone"
      firstName: "firstName"
      stateName: "stateName"
      gmtOffSet: 0
      dob: "2000-01-23T04:56:07.000+00:00"
      company: "company"
      workPhone: "workPhone"
      state: "state"
      countryName: "countryName"
      email: "email"
  Jeunesse.Profile.Core.Wallet.Models.PhotoIdModel:
    type: "object"
    properties:
      documentName:
        type: "string"
      isUploaded:
        type: "boolean"
      allowUpload:
        type: "boolean"
      isValid:
        type: "boolean"
      isExpired:
        type: "boolean"
      type:
        type: "string"
      number:
        type: "string"
      expDate:
        type: "string"
        format: "date-time"
      noExpiry:
        type: "boolean"
      country:
        type: "string"
      status:
        type: "string"
      comment:
        type: "string"
      expiresSoon:
        type: "boolean"
      isValidTimestamp:
        type: "string"
        format: "date-time"
      uploadDate:
        type: "string"
        format: "date-time"
    example:
      expiresSoon: true
      country: "country"
      isValid: true
      documentName: "documentName"
      type: "type"
      expDate: "2000-01-23T04:56:07.000+00:00"
      number: "number"
      isValidTimestamp: "2000-01-23T04:56:07.000+00:00"
      uploadDate: "2000-01-23T04:56:07.000+00:00"
      noExpiry: true
      allowUpload: true
      isUploaded: true
      comment: "comment"
      isExpired: true
      status: "status"
  Jeunesse.Profile.Core.Wallet.Models.PhotoId.UpdatePhotoIdFormModel:
    type: "object"
    properties:
      mainId:
        type: "integer"
        format: "int32"
      folderId:
        type: "string"
      type:
        type: "string"
      number:
        type: "string"
      expDate:
        type: "string"
        format: "date-time"
      noExpiry:
        type: "boolean"
      country:
        type: "string"
  Jeunesse.Profile.Core.Wallet.Models.BankBook.BankBookFormModel:
    type: "object"
    properties:
      mainId:
        type: "integer"
        format: "int32"
      isValid:
        type: "boolean"
      invalidReason:
        type: "string"
    example:
      isValid: true
      mainId: 0
      invalidReason: "invalidReason"
  Jeunesse.Profile.Core.Wallet.Models.BankDocument.BankDocumentModel:
    type: "object"
    properties:
      mainId:
        type: "integer"
        format: "int32"
      countryName:
        type: "string"
      countryCode:
        type: "string"
      uploadDateTime:
        type: "string"
        format: "date-time"
      verifiedStatus:
        type: "string"
      message:
        type: "string"
    example:
      countryCode: "countryCode"
      verifiedStatus: "verifiedStatus"
      countryName: "countryName"
      mainId: 0
      uploadDateTime: "2000-01-23T04:56:07.000+00:00"
      message: "message"
  Jeunesse.Profile.Core.Wallet.Models.BankDocument.BankDocumentFormModel:
    type: "object"
    properties:
      mainId:
        type: "integer"
        format: "int32"
      isValid:
        type: "boolean"
      invalidReason:
        type: "string"
  Jeunesse.Profile.Core.Wallet.Models.EFT.EFTLocalStatusModel:
    type: "object"
    properties:
      message:
        type: "string"
      showForm:
        type: "boolean"
      editable:
        type: "boolean"
      isActive:
        type: "boolean"
    example:
      showForm: true
      editable: true
      message: "message"
      isActive: true
  Jeunesse.Profile.Core.Wallet.Models.EFT.AccountCurrencyModel:
    type: "object"
    properties:
      currencyCode:
        type: "string"
      currencyName:
        type: "string"
    example:
      currencyName: "currencyName"
      currencyCode: "currencyCode"
  Jeunesse.Profile.Core.Wallet.Models.FundRequestInvoice.FundRequestCheckRunModel:
    type: "object"
    properties:
      checkRunId:
        type: "integer"
        format: "int32"
      dateToRun:
        type: "string"
        format: "date-time"
      withholdRecordId:
        type: "integer"
        format: "int32"
      amount:
        type: "number"
        format: "double"
      formattedAmount:
        type: "string"
      invoiceDocStatus:
        type: "string"
      uniqueFileId:
        type: "integer"
        format: "int32"
    example:
      amount: 1.4658129805029452
      invoiceDocStatus: "invoiceDocStatus"
      withholdRecordId: 6
      checkRunId: 0
      formattedAmount: "formattedAmount"
      uniqueFileId: 5
      dateToRun: "2000-01-23T04:56:07.000+00:00"
  Jeunesse.Profile.Core.Wallet.Models.FundRequest.FundRequestSettingsModel:
    type: "object"
    properties:
      invoiceRequired:
        type: "boolean"
      folderId:
        type: "string"
      invoiceFileName:
        type: "string"
    example:
      invoiceRequired: true
      folderId: "folderId"
      invoiceFileName: "invoiceFileName"
  Jeunesse.Profile.Core.Wallet.Models.PayoutMethodModel:
    type: "object"
    properties:
      recordId:
        type: "integer"
        format: "int32"
      id:
        type: "integer"
        format: "int32"
      name:
        type: "string"
      currencySymbol:
        type: "string"
      amount:
        type: "string"
      isActive:
        type: "boolean"
      seqNo:
        type: "integer"
        format: "int32"
    example:
      recordId: 0
      amount: "amount"
      seqNo: 1
      name: "name"
      currencySymbol: "currencySymbol"
      id: 6
      isActive: true
  Jeunesse.Profile.Core.Wallet.Models.EFT.DocumentModel:
    type: "object"
    properties:
      signupDocumentsPK:
        type: "integer"
        format: "int32"
      documentName:
        type: "string"
      title:
        type: "string"
      uploadNotice:
        type: "string"
      allowedExtensions:
        type: "string"
      userDocumentsFK:
        type: "integer"
        format: "int32"
      folderId:
        type: "string"
    example:
      userDocumentsFK: 6
      allowedExtensions: "allowedExtensions"
      signupDocumentsPK: 0
      documentName: "documentName"
      title: "title"
      uploadNotice: "uploadNotice"
      folderId: "folderId"
  Jeunesse.Profile.Core.Wallet.Models.IdentificationTypeModel:
    type: "object"
    properties:
      code:
        type: "string"
      description:
        type: "string"
      documentName:
        type: "string"
    example:
      code: "code"
      description: "description"
      documentName: "documentName"
  Jeunesse.Profile.Core.Wallet.Models.EFT.BankCountryModel:
    type: "object"
    properties:
      code2:
        type: "string"
      code3:
        type: "string"
      name:
        type: "string"
    example:
      code3: "code3"
      code2: "code2"
      name: "name"
  Jeunesse.Profile.Core.Wallet.Models.AccountHistory.AccountBalanceQueryModel:
    type: "object"
    properties:
      userName:
        type: "string"
  Jeunesse.Profile.Core.Wallet.Models.FundRequest.FundRequestModel:
    type: "object"
    properties:
      sequencePK:
        type: "integer"
        format: "int32"
      requestDate:
        type: "string"
        format: "date-time"
      amount:
        type: "number"
        format: "double"
      amountFormatted:
        type: "string"
      payoutMethod:
        type: "string"
      completeDate:
        type: "string"
        format: "date-time"
      status:
        type: "string"
      isPaid:
        type: "boolean"
    example:
      isPaid: true
      amount: 6.027456183070403
      requestDate: "2000-01-23T04:56:07.000+00:00"
      sequencePK: 0
      payoutMethod: "payoutMethod"
      amountFormatted: "amountFormatted"
      completeDate: "2000-01-23T04:56:07.000+00:00"
      status: "status"
  Jeunesse.Profile.Core.Wallet.Models.FundRequestInvoice.FundRequestInvoiceModel:
    type: "object"
    properties:
      checkRunId:
        type: "integer"
        format: "int32"
      uniqueFileId:
        type: "integer"
        format: "int32"
      amount:
        type: "number"
        format: "double"
      formattedAmount:
        type: "string"
      vatAmount:
        type: "number"
        format: "double"
      formattedVatAmount:
        type: "string"
      invoiceDocStatus:
        type: "string"
      invoiceUploadedDate:
        type: "string"
        format: "date-time"
    example:
      amount: 1.4658129805029452
      invoiceDocStatus: "invoiceDocStatus"
      checkRunId: 0
      invoiceUploadedDate: "2000-01-23T04:56:07.000+00:00"
      formattedAmount: "formattedAmount"
      uniqueFileId: 6
      vatAmount: 5.962133916683182
      formattedVatAmount: "formattedVatAmount"
  Jeunesse.Profile.Core.Wallet.Models.FundRequest.FundRequestQueryModel:
    type: "object"
    properties:
      mainId:
        type: "integer"
        format: "int32"
      pageSize:
        type: "integer"
        format: "int32"
      pageNumber:
        type: "integer"
        format: "int32"
      orderBy:
        type: "string"
  Jeunesse.Profile.Core.Wallet.Models.FundRequest.FundRequestFormModel:
    type: "object"
    properties:
      amount:
        type: "number"
        format: "double"
      paymentMethodId:
        type: "integer"
        format: "int32"
      invoiceUniqueFileId:
        type: "integer"
        format: "int32"
      mainId:
        type: "integer"
        format: "int32"
      pageSize:
        type: "integer"
        format: "int32"
      pageNumber:
        type: "integer"
        format: "int32"
      orderBy:
        type: "string"
  Jeunesse.Profile.Core.Wallet.Models.AccountHistory.AccountHistoryQueryModel:
    type: "object"
    properties:
      isSequential:
        type: "boolean"
      userName:
        type: "string"
      pageSize:
        type: "integer"
        format: "int32"
      pageNumber:
        type: "integer"
        format: "int32"
      orderBy:
        type: "string"
  Jeunesse.Profile.Core.Wallet.Models.SignupTokens.SignupTokensQueryModel:
    type: "object"
    required:
    - "tokenStatus"
    properties:
      mainId:
        type: "integer"
        format: "int32"
      tokenName:
        type: "string"
      tokenStartDate:
        type: "string"
        format: "date-time"
      tokenEndDate:
        type: "string"
        format: "date-time"
      tokenStatus:
        type: "string"
      useMainOrdersFK:
        type: "integer"
        format: "int32"
      pageSize:
        type: "integer"
        format: "int32"
      pageNumber:
        type: "integer"
        format: "int32"
      orderBy:
        type: "string"
  Jeunesse.Profile.Core.Wallet.Models.SignupTokens.SignupTokenViewModel:
    type: "object"
    properties:
      signupTokens:
        type: "array"
        items:
          $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.SignupTokens.GetSignupTokensReportResult"
      currentPage:
        type: "integer"
        format: "int32"
      totalCount:
        type: "integer"
        format: "int32"
    example:
      signupTokens:
      - amount: 5.962133916683182
        siteUrl: "siteUrl"
        usedAmountFormatted: "usedAmountFormatted"
        usedAmount: "usedAmount"
        totalCount: 5
        sequencePk: 6
        useMainOrdersFK: 1
        token: "token"
        amountFormatted: "amountFormatted"
        refundAmountFormatted: "refundAmountFormatted"
        dateEntered: "2000-01-23T04:56:07.000+00:00"
        useDate: "2000-01-23T04:56:07.000+00:00"
        pk: 0
        refundAmount: 2.3021358869347655
      - amount: 5.962133916683182
        siteUrl: "siteUrl"
        usedAmountFormatted: "usedAmountFormatted"
        usedAmount: "usedAmount"
        totalCount: 5
        sequencePk: 6
        useMainOrdersFK: 1
        token: "token"
        amountFormatted: "amountFormatted"
        refundAmountFormatted: "refundAmountFormatted"
        dateEntered: "2000-01-23T04:56:07.000+00:00"
        useDate: "2000-01-23T04:56:07.000+00:00"
        pk: 0
        refundAmount: 2.3021358869347655
      currentPage: 7
      totalCount: 9
  Jeunesse.Profile.Core.Wallet.Models.SignupTokens.GetSignupTokensReportResult:
    type: "object"
    properties:
      pk:
        type: "integer"
        format: "int32"
      sequencePk:
        type: "integer"
        format: "int32"
      dateEntered:
        type: "string"
        format: "date-time"
      token:
        type: "string"
      siteUrl:
        type: "string"
      useDate:
        type: "string"
        format: "date-time"
      useMainOrdersFK:
        type: "integer"
        format: "int32"
      amount:
        type: "number"
        format: "double"
      amountFormatted:
        type: "string"
      totalCount:
        type: "integer"
        format: "int32"
      usedAmount:
        type: "string"
      usedAmountFormatted:
        type: "string"
      refundAmount:
        type: "number"
        format: "double"
      refundAmountFormatted:
        type: "string"
    example:
      amount: 5.962133916683182
      siteUrl: "siteUrl"
      usedAmountFormatted: "usedAmountFormatted"
      usedAmount: "usedAmount"
      totalCount: 5
      sequencePk: 6
      useMainOrdersFK: 1
      token: "token"
      amountFormatted: "amountFormatted"
      refundAmountFormatted: "refundAmountFormatted"
      dateEntered: "2000-01-23T04:56:07.000+00:00"
      useDate: "2000-01-23T04:56:07.000+00:00"
      pk: 0
      refundAmount: 2.3021358869347655
  Jeunesse.Profile.Core.Wallet.Models.SignupTokens.SignupTokenFormModel:
    type: "object"
    properties:
      mainId:
        type: "integer"
        format: "int32"
      token:
        type: "string"
        minLength: 5
        maxLength: 50
      amount:
        type: "number"
        format: "double"
      isForAllMoney:
        type: "boolean"
  Jeunesse.Profile.Core.Wallet.Models.RegisterPayСardFormModel:
    type: "object"
    required:
    - "address1"
    - "city"
    - "dob"
    - "email"
    - "firstName"
    - "gender"
    - "homePhone"
    - "lastName"
    - "state"
    - "timeZone"
    - "zip"
    properties:
      firstName:
        type: "string"
        minLength: 0
        maxLength: 50
      lastName:
        type: "string"
        minLength: 0
        maxLength: 50
      company:
        type: "string"
        minLength: 0
        maxLength: 50
      address1:
        type: "string"
        minLength: 0
        maxLength: 50
      address2:
        type: "string"
        minLength: 0
        maxLength: 50
      city:
        type: "string"
        minLength: 0
        maxLength: 50
      state:
        type: "string"
        minLength: 0
        maxLength: 50
      zip:
        type: "string"
        minLength: 0
        maxLength: 50
      timeZone:
        type: "integer"
        format: "int32"
      email:
        type: "string"
        pattern: "^([\\w\\.\\-]+)@([\\w\\-]+)((\\.(\\w){2,3})+)$"
      dob:
        type: "string"
        format: "date-time"
      homePhone:
        type: "string"
        pattern: "^\\([0-9]{1,6}\\)\\([0-9]{1,16}\\)$"
      workPhone:
        type: "string"
        pattern: "^$|^\\([0-9]{1,6}\\)\\([0-9]{1,16}\\)$"
      gender:
        type: "string"
      paycardICN:
        type: "string"
        pattern: "^$|^[0-9-]{10,21}$"
      last4:
        type: "string"
        pattern: "^$|^[0-9]{4}$"
  Jeunesse.Profile.Core.Wallet.Models.RegisterPayСardViewModel:
    type: "object"
    properties:
      payCardNumber:
        type: "string"
      accessCode:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      company:
        type: "string"
      address1:
        type: "string"
      address2:
        type: "string"
      city:
        type: "string"
      state:
        type: "string"
      stateName:
        type: "string"
      zip:
        type: "string"
      countryName:
        type: "string"
      gmtOffSet:
        type: "integer"
        format: "int32"
      timeZone:
        type: "string"
      email:
        type: "string"
      dob:
        type: "string"
        format: "date-time"
      homePhone:
        type: "string"
      workPhone:
        type: "string"
      gender:
        type: "string"
    example:
      zip: "zip"
      lastName: "lastName"
      gender: "gender"
      address2: "address2"
      city: "city"
      address1: "address1"
      homePhone: "homePhone"
      timeZone: "timeZone"
      firstName: "firstName"
      payCardNumber: "payCardNumber"
      stateName: "stateName"
      gmtOffSet: 0
      dob: "2000-01-23T04:56:07.000+00:00"
      accessCode: "accessCode"
      company: "company"
      workPhone: "workPhone"
      state: "state"
      countryName: "countryName"
      email: "email"
  Jeunesse.Profile.Core.Wallet.Models.AddFundsFormModel:
    type: "object"
    properties:
      paymentMethod:
        type: "string"
      amount:
        type: "number"
        format: "double"
  Jeunesse.Profile.Core.Wallet.Models.PhotoId.AdminUpdatePhotoIdFormModel:
    type: "object"
    properties:
      mainId:
        type: "integer"
        format: "int32"
      expDate:
        type: "string"
        format: "date-time"
      noExpiry:
        type: "boolean"
      invalidReason:
        type: "string"
      isValidId:
        type: "boolean"
  Jeunesse.Profile.Core.Wallet.Models.PayCardModel:
    type: "object"
    properties:
      paycardICN:
        type: "string"
        pattern: "^$|^[0-9-]{10,21}$"
      last4:
        type: "string"
        pattern: "^$|^[0-9]{4}$"
  Jeunesse.Profile.Core.Wallet.Models.MerchantIPayoutModel:
    type: "object"
    properties:
      text:
        type: "string"
      code:
        type: "string"
    example:
      code: "code"
      text: "text"
  Jeunesse.Profile.Core.Wallet.Models.FundRequestInvoice.FundRequestInvoiceFormModel:
    type: "object"
    properties:
      mainId:
        type: "integer"
        format: "int32"
      checkRunId:
        type: "integer"
        format: "int32"
      withholdRecordId:
        type: "integer"
        format: "int32"
      isValid:
        type: "boolean"
      invalidReason:
        type: "string"
  Jeunesse.Profile.Core.Wallet.Models.EFT.EFTFormModel:
    type: "object"
    properties:
      nxPayAccountPK:
        type: "integer"
        format: "int32"
      success:
        type: "boolean"
      accountDescription:
        type: "string"
      personal:
        type: "string"
      bankAddress2:
        type: "string"
      bankCity:
        type: "string"
      bankKey:
        type: "string"
      bankState:
        type: "string"
      bankZip:
        type: "string"
      holdingBranchCode:
        type: "string"
      checkDigits:
        type: "string"
      freeForm1:
        type: "string"
      active:
        type: "boolean"
      accountCurrency:
        type: "string"
      nameAccount:
        type: "string"
      accountNumber:
        type: "string"
      accountType:
        type: "integer"
        format: "int32"
      bankCode:
        type: "string"
      bankName:
        type: "string"
      bankCountry:
        type: "string"
      bankSort:
        type: "string"
      bankAddress1:
        type: "string"
      branchCode:
        type: "string"
      iban:
        type: "string"
      routingNumber:
        type: "string"
      swift_bic:
        type: "string"
  Jeunesse.Profile.Core.Wallet.Models.EFT.EFTResponseModel:
    type: "object"
    properties:
      success:
        type: "boolean"
      message:
        type: "string"
    example:
      success: true
      message: "message"
  Jeunesse.Profile.Core.Wallet.Models.EFT.EFTLocalFormModel:
    type: "object"
    properties:
      mainBankAccountPK:
        type: "integer"
        format: "int32"
      branchName:
        type: "string"
      bankNotify:
        type: "integer"
        format: "int32"
      active:
        type: "boolean"
      accountCurrency:
        type: "string"
      nameAccount:
        type: "string"
      accountNumber:
        type: "string"
      accountType:
        type: "integer"
        format: "int32"
      bankCode:
        type: "string"
      bankName:
        type: "string"
      bankCountry:
        type: "string"
      bankSort:
        type: "string"
      bankAddress1:
        type: "string"
      branchCode:
        type: "string"
      iban:
        type: "string"
      routingNumber:
        type: "string"
      swift_bic:
        type: "string"
  Jeunesse.Profile.Core.Wallet.Models.CheckAttemptsResponse:
    type: "object"
    properties:
      result:
        type: "string"
      message:
        type: "string"
      questionPk:
        type: "integer"
        format: "int32"
      question:
        type: "string"
      resetAttempts:
        type: "integer"
        format: "int32"
    example:
      result: "result"
      questionPk: 0
      question: "question"
      message: "message"
      resetAttempts: 6
  Jeunesse.Profile.Core.Wallet.Models.QuestionAnswer:
    type: "object"
    properties:
      questionPk:
        type: "integer"
        format: "int32"
      questionText:
        type: "string"
      answer:
        type: "string"
    example:
      questionPk: 0
      answer: "answer"
      questionText: "questionText"
  Jeunesse.Profile.Core.Wallet.Models.QuestionsFormModel:
    type: "object"
    properties:
      useAnswersFromMain:
        type: "boolean"
      questionsAnswers:
        type: "array"
        items:
          $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.QuestionAnswer"
      liToken:
        type: "string"
  Jeunesse.Profile.Core.Wallet.Models.CreateAccountModel:
    type: "object"
    required:
    - "password"
    - "userName"
    properties:
      userName:
        type: "string"
        minLength: 0
        maxLength: 50
      password:
        type: "string"
        minLength: 0
        maxLength: 250
  Jeunesse.Profile.Core.Wallet.Models.GenerateResetCodeFormModel:
    type: "object"
    required:
    - "answer"
    - "questionPk"
    properties:
      questionPk:
        type: "integer"
        format: "int32"
      answer:
        type: "string"
      sendText:
        type: "boolean"
  Jeunesse.Profile.Core.Wallet.Models.ResetPasswordFormModel:
    type: "object"
    required:
    - "password"
    - "resetToken"
    properties:
      resetToken:
        type: "string"
        minLength: 0
        maxLength: 50
      password:
        type: "string"
        minLength: 0
        maxLength: 250
  Jeunesse.Profile.Core.Wallet.Models.UpdatePasswordFormModel:
    type: "object"
    properties:
      email:
        type: "string"
      phone:
        type: "string"
      password:
        type: "string"
      useAnswersFromMain:
        type: "boolean"
      questionsAnswers:
        type: "array"
        items:
          $ref: "#/definitions/Jeunesse.Profile.Core.Wallet.Models.QuestionAnswer"
      liToken:
        type: "string"
