---
swagger: "2.0"
info:
  description: "A Microsoft WebApi2 application. For use by Jeunesse and its Partners,\
    \ this api has a focus on product and order creation"
  version: "v1"
  title: "Cart-Api v1"
host: "cart-api.riman.com"
schemes:
- "https"
paths:
  /api/v1/bags/{bagId}:
    get:
      tags:
      - "Bag"
      summary: "Get a bag by its id"
      operationId: "Bag_GetById"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "bagId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "BagId"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
    delete:
      tags:
      - "Bag"
      summary: "Delete a bag by its id"
      operationId: "Bag_Delete"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "bagId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "BagId"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/bags:
    get:
      tags:
      - "Bag"
      summary: "Get all bags based on the query model"
      operationId: "Bag_GetAll"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "bagQueryModel.bagPK"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "BagQueryModelBagPK"
        x-optionalDataType: "Int32"
      - name: "bagQueryModel.customerPK"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "BagQueryModelCustomerPK"
        x-optionalDataType: "Int32"
      - name: "bagQueryModel.cartType"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "BagQueryModelCartType"
        x-optionalDataType: "String"
      - name: "bagQueryModel.countryCode"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "BagQueryModelCountryCode"
        x-optionalDataType: "String"
      - name: "bagQueryModel.culture"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "BagQueryModelCulture"
        x-optionalDataType: "String"
      - name: "bagQueryModel.siteUrl"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "BagQueryModelSiteUrl"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
    post:
      tags:
      - "Bag"
      summary: "Create a new bag"
      operationId: "Bag_Create"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "bagFormModel"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/BagFormModel"
        x-exportParamName: "BagFormModel"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/loyalty-points/ranks:
    get:
      tags:
      - "LoyaltyPoints"
      summary: "Gets the list of ranks for the loyalty points preferred customers."
      operationId: "LoyaltyPoints_GetRanks"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters: []
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/RewardPointsCustomerRankViewModel"
  /api/v1/loyalty-points/{mainPk}:
    get:
      tags:
      - "LoyaltyPoints"
      summary: "Gets the status of Loyalty Points for a preferred customer."
      operationId: "LoyaltyPoints_GetStatus"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainPk"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainPk"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/RewardPointsCustomerStatusViewModel"
  /api/v1/loyalty-points/{mainPk}/transactions:
    get:
      tags:
      - "LoyaltyPoints"
      summary: "Gets the transactions of Loyalty Points for a preferred customer ordered\
        \ by effective date."
      operationId: "LoyaltyPoints_GetTransactions"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainPk"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainPk"
      - name: "pageNumber"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "PageNumber"
        x-optionalDataType: "Int32"
      - name: "pageSize"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/RewardPointsCustomerTransactionsViewModel"
  /api/v1/RMA/status:
    get:
      tags:
      - "Order"
      summary: "Get RMAs_Status"
      operationId: "Order_GetRMAsStatus"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters: []
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/RMA/reasons:
    get:
      tags:
      - "Order"
      summary: "Get GetRMA_Reasons"
      operationId: "Order_GetRMAReasons"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters: []
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/orders/types:
    get:
      tags:
      - "Order"
      summary: "To get order types"
      operationId: "Order_GetOrderTypes"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters: []
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/MainOrderTypeModel"
  /api/v1/order/{orderId}/paid:
    get:
      tags:
      - "Order"
      summary: ""
      operationId: "Order_CheckOrderPaidStatus"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "orderId"
        in: "path"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "OrderId"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/order/get-sift-config:
    get:
      tags:
      - "Order"
      summary: "Used to get Sift configuration."
      operationId: "Order_GetSiftConfig"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters: []
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/SiftConfigModel"
  /api/v1/orders/{mainOrdersPK}:
    get:
      tags:
      - "Order"
      summary: "To get single order"
      operationId: "Order_GetOrderId"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainOrdersPK"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainOrdersPK"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/MainOrderModel"
  /api/v1/order/delete/{orderId}:
    get:
      tags:
      - "Order"
      summary: "This method is no longer allowed please do not use"
      operationId: "Order_DeleteOrder"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "orderId"
        in: "path"
        description: "Unique identifier of the order"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "OrderId"
      deprecated: true
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/order/process-response:
    get:
      tags:
      - "Order"
      summary: "Used to process response from 3rd party redirects"
      operationId: "Order_ProcessOrderResponse"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters: []
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
    post:
      tags:
      - "Order"
      operationId: "Order_ProcessOrderResponsePost"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters: []
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/orders/payments/manual:
    get:
      tags:
      - "Order"
      summary: "Retrieves available manual paytypes"
      operationId: "Order_getManualPayTypes"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters: []
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ManualPaymentTypeModel"
  /api/v1/order/get-inauth-config:
    get:
      tags:
      - "Order"
      summary: "Used to get InAuth configuration."
      operationId: "Order_GetInAuthConfig"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters: []
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/InAuthConfigModel"
  /api/v1/order/get-TapPay-config:
    get:
      tags:
      - "Order"
      summary: "Used to get InAuth configuration."
      operationId: "Order_GetTapPayConfig"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters: []
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/InAuthConfigModel"
  /api/v1/order/payment/{orderId}:
    get:
      tags:
      - "Order"
      summary: "Returns a list of payment methods for an order."
      operationId: "Order_GetPaymentMethods"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "orderId"
        in: "path"
        description: "Order Number"
        required: true
        type: "string"
        x-exportParamName: "OrderId"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/PaymentMethodsViewModel"
  /api/v1/RMA/{RMANumber}/products:
    get:
      tags:
      - "Order"
      summary: "Get RMA Detail"
      operationId: "Order_GetRMADetail"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "RMANumber"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "RMANumber"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/order/disclosure/{orderId}:
    get:
      tags:
      - "Order"
      summary: ""
      operationId: "Order_GetOrderDisclosure"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "orderId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "OrderId"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/order/taxes/{mainOrdersFK}:
    get:
      tags:
      - "Order"
      summary: "Gets the tax information for an order."
      operationId: "Order_GetOrderTaxAmount"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainOrdersFK"
        in: "path"
        description: "OrderNumber"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainOrdersFK"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
    put:
      tags:
      - "Order"
      summary: "Gets and sets the tax information for an order."
      operationId: "Order_SetOrderTax"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainOrdersFK"
        in: "path"
        description: "OrderNumber"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainOrdersFK"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/orders/{mainOrdersPK}/items:
    get:
      tags:
      - "Order"
      summary: "To get main order items"
      operationId: "Order_GetOrderItems"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainOrdersPK"
        in: "path"
        description: ""
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainOrdersPK"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/MainOrderItemModel"
  /api/v1/order/details/{mainOrdersFK}:
    get:
      tags:
      - "Order"
      summary: ""
      operationId: "Order_GetOrderInfo"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainOrdersFK"
        in: "path"
        description: ""
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainOrdersFK"
      deprecated: true
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/order/{mainpk}/has-completed:
    get:
      tags:
      - "Order"
      operationId: "Order_VerifyUserOrders"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainpk"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Mainpk"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/order/{orderIdStr}/has-package:
    get:
      tags:
      - "Order"
      summary: "Checks to see if an order contains a package product"
      operationId: "Order_OrderHasPackage"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "orderIdStr"
        in: "path"
        description: "Order Number"
        required: true
        type: "string"
        x-exportParamName: "OrderIdStr"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "boolean"
  /api/v1/orders/{mainOrdersPK}/payments:
    get:
      tags:
      - "Order"
      summary: "Get payments on order"
      operationId: "Order_GetPayments"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainOrdersPK"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainOrdersPK"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/OrderPayments"
    post:
      tags:
      - "Order"
      summary: "Adds and processes payments to order"
      operationId: "Order_NewPayment"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainOrdersPK"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainOrdersPK"
      - in: "body"
        name: "payment"
        required: true
        schema:
          $ref: "#/definitions/PaymentFormModel"
        x-exportParamName: "Payment"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/PaymentProcessingResponse"
  /api/v1/orders/{mainOrdersPK}/products:
    get:
      tags:
      - "Order"
      summary: "To get all subitems from main order by id for RMA"
      operationId: "Order_GetOrderProducts"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainOrdersPK"
        in: "path"
        description: ""
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainOrdersPK"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/orders/{mainOrdersPK}/tracking:
    get:
      tags:
      - "Order"
      summary: "To get shipping Tracking information of an order"
      operationId: "Order_GetOrderShippingDetails"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainOrdersPK"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainOrdersPK"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/MainOrderTrackingModel"
  /api/v1/order/{orderId}/payment-started:
    get:
      tags:
      - "Order"
      summary: ""
      operationId: "Order_CheckOrderPaymentStarted"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "orderId"
        in: "path"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "OrderId"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/order/campaigns/info/{campaignCode}:
    get:
      tags:
      - "Order"
      summary: "Gets the sales campaign information for a particular campaign."
      operationId: "Order_GetSalesCampaignByCampaignCode"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "campaignCode"
        in: "path"
        description: "Campaign Code to Lookup"
        required: true
        type: "string"
        x-exportParamName: "CampaignCode"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/SalesCampaignModel"
  /api/v1/order/payment/get-card/{sequencePK}:
    get:
      tags:
      - "Order"
      summary: "Gets MainCreditCard record based on MainCreditCardsFK"
      operationId: "Order_GetSavedCreditCard"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "sequencePK"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "SequencePK"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/orders/{mainOrdersPK}/payments/info:
    get:
      tags:
      - "Order"
      summary: "Get payment info messages for UI"
      operationId: "Order_GetPaymentInfo"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainOrdersPK"
        in: "path"
        description: ""
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainOrdersPK"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PaymentInfoResponseModel"
  /api/v1/RMA/RMAs/Products:
    get:
      tags:
      - "Order"
      summary: "Get All RMAs and RMAproducts For Order by OrderFK"
      operationId: "Order_GetRMAsProducts"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "orderFK"
        in: "query"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "OrderFK"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/RMAView"
  /api/v1/order/donationOrders:
    get:
      tags:
      - "Order"
      summary: "To get information about Donations"
      operationId: "Order_GetDonationOrders"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainFk"
        in: "query"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainFk"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/FullDonationReport"
  /api/v1/orders/{mainOrdersPK}/shipments-total:
    get:
      tags:
      - "Order"
      summary: "To get shipments total cost"
      operationId: "Order_GetOrderShipmentsTotal"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainOrdersPK"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainOrdersPK"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/OrderShipmentsTotalModel"
  /api/v1/order/get-ixo-pay-config/{fromProfile}:
    get:
      tags:
      - "Order"
      summary: "Returns config for IxoPay tokenEx iframe"
      operationId: "Order_GetTokenExConfig"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "fromProfile"
        in: "path"
        required: true
        type: "boolean"
        x-exportParamName: "FromProfile"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/order/getPayUReceiptLink/{mainOrdersPK}:
    get:
      tags:
      - "Order"
      summary: ""
      operationId: "Order_GetPayUReceiptLink"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainOrdersPK"
        in: "path"
        description: ""
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainOrdersPK"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "string"
  /api/v1/orders/{mainOrdersPK}/shipment-products:
    get:
      tags:
      - "Order"
      summary: "To get shipment data of orders products"
      operationId: "Order_GetOrderShipmentProducts"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainOrdersPK"
        in: "path"
        description: ""
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainOrdersPK"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/order/getWalletOrderLimit/{mainOrdersPK}:
    get:
      tags:
      - "Order"
      summary: ""
      operationId: "Order_GetWalletLimit"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainOrdersPK"
        in: "path"
        description: ""
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainOrdersPK"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/WalletOrderLimit"
  /api/v1/order/isNiceGtwEnabled/{mainOrderTypeFk}:
    get:
      tags:
      - "Order"
      summary: ""
      operationId: "Order_IsNiceGtwEnabled"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainOrderTypeFk"
        in: "path"
        description: ""
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainOrderTypeFk"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "boolean"
  /api/v1/order/{orderString}/confirmation-details:
    get:
      tags:
      - "Order"
      summary: "Get Order Details for confirmation Page."
      operationId: "Order_GetOrderDetailsForConfirmation"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "orderString"
        in: "path"
        description: "Order Id string"
        required: true
        type: "string"
        x-exportParamName: "OrderString"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/OrderConfirmationDetailViewModel"
  /api/v1/order:
    get:
      tags:
      - "Order"
      summary: "Gets order history."
      operationId: "Order_GetOrders"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "EntityFk"
        in: "query"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "EntityFk"
      - name: "IsMain"
        in: "query"
        required: true
        type: "boolean"
        x-exportParamName: "IsMain"
      deprecated: true
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
    post:
      tags:
      - "Order"
      summary: "Create a new order with basic information"
      operationId: "Order_CreateOrder"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/NewOrderFormModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/order/getOpenPayReceiptLink/{mainOrdersPK}:
    get:
      tags:
      - "Order"
      summary: ""
      operationId: "Order_GetOpenPayReceiptLink"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainOrdersPK"
        in: "path"
        description: ""
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainOrdersPK"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "string"
  /api/v1/order/{orderId}/clearMerchantPendingStatus:
    get:
      tags:
      - "Order"
      operationId: "Order_ClearMerchantPendingStatus"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "orderId"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "OrderId"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/order/getBonusTokenOrderLimit/{mainOrdersPK}:
    get:
      tags:
      - "Order"
      summary: ""
      operationId: "Order_GetBonusCreditLimit"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainOrdersPK"
        in: "path"
        description: ""
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainOrdersPK"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/SignupTokenOrderLimit"
  /api/v1/order/getMinimumAllowedPayment/{mainOrdersPK}:
    get:
      tags:
      - "Order"
      summary: ""
      operationId: "Order_GetMinimumAllowedPayment"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainOrdersPK"
        in: "path"
        description: ""
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainOrdersPK"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "number"
            format: "double"
  /api/v1/order/get-braspagantifraud-scripts/{identifier}:
    get:
      tags:
      - "Order"
      summary: "Used to get InAuth configuration."
      operationId: "Order_GetBraspagAntifraudScirpts"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "identifier"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Identifier"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/BraspagAntifraudScirptModel"
  /api/v1/order/getPayUBankTransferDetails/{mainOrdersPK}:
    get:
      tags:
      - "Order"
      operationId: "Order_GetPayUBankTransferDetails"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainOrdersPK"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainOrdersPK"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PayUBankTransferDetails"
  /api/v1/order/useCrossBorderCharges/{shipTo}/{shipFrom}:
    get:
      tags:
      - "Order"
      operationId: "Order_UseCrossBorderCharges"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "shipTo"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ShipTo"
      - name: "shipFrom"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ShipFrom"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/order/isCreditCardRedirectCheckout/{mainOrderPk}:
    get:
      tags:
      - "Order"
      summary: "Check if CC payment is redirect checkout payment"
      operationId: "Order_IsCreditCardRedirectCheckout"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainOrderPk"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainOrderPk"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/IsCreditCardRedirectCheckoutModel"
  /api/v1/order/get-available-coupons/{mainPk}/{mainOrdersPK}:
    get:
      tags:
      - "Order"
      summary: ""
      operationId: "Order_GetAvailableCoupons"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainPk"
        in: "path"
        description: ""
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainPk"
      - name: "mainOrdersPK"
        in: "path"
        description: ""
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainOrdersPK"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AvailableCouponModel"
  /api/v1/order/shipping/{mainOrdersFK}/{shippingChartTypeFK}:
    get:
      tags:
      - "Order"
      summary: "Gets the shipping information for an order."
      operationId: "Order_GetOrderShipping"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainOrdersFK"
        in: "path"
        description: "OrderNumber"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainOrdersFK"
      - name: "shippingChartTypeFK"
        in: "path"
        description: "Shipping Key"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ShippingChartTypeFK"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
    put:
      tags:
      - "Order"
      summary: "Sets the shipping information for an order."
      operationId: "Order_SetOrderShipping"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainOrdersFK"
        in: "path"
        description: "OrderNumber"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainOrdersFK"
      - name: "shippingChartTypeFK"
        in: "path"
        description: "Shipping Key"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ShippingChartTypeFK"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/order/getRimanDollarsBalance/{mainPk}/{mainOrdersFk}:
    get:
      tags:
      - "Order"
      summary: ""
      operationId: "Order_GetRimanDollarsBalance"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainPk"
        in: "path"
        description: ""
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainPk"
      - name: "mainOrdersFk"
        in: "path"
        description: ""
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainOrdersFk"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "number"
            format: "double"
  /api/v1/order/isRoutedToZiraat/{mainOrderTypeFk}/{countryCode}:
    get:
      tags:
      - "Order"
      summary: ""
      operationId: "Order_IsRoutedToZiraat"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainOrderTypeFk"
        in: "path"
        description: ""
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainOrderTypeFk"
      - name: "countryCode"
        in: "path"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "CountryCode"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "boolean"
  /api/v1/order/convert-to-local-currency/{mainOrdersFK}/{amount}:
    get:
      tags:
      - "Order"
      summary: "Returns converted amount to local currency"
      operationId: "Order_ConvertToLocalCurrency"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainOrdersFK"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainOrdersFK"
      - name: "amount"
        in: "path"
        required: true
        type: "number"
        format: "double"
        x-exportParamName: "Amount"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/order/isMercadoPagoOrder/{mainOrderTypeFk}/{countryCode}:
    get:
      tags:
      - "Order"
      summary: ""
      operationId: "Order_IsMercadoPagoOrder"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainOrderTypeFk"
        in: "path"
        description: ""
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainOrderTypeFk"
      - name: "countryCode"
        in: "path"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "CountryCode"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "boolean"
  /api/v1/order/personal-use:
    get:
      tags:
      - "Order"
      summary: "To get information about Personal Use status"
      operationId: "Order_IsAllowPersonalUseFun"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainOrdersPK"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "MainOrdersPK"
        x-optionalDataType: "Int32"
      - name: "cartKey"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "CartKey"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/PersonalUseModel"
  /api/v1/order/processingFees:
    get:
      tags:
      - "Order"
      summary: "Returns order processing fees by country code"
      operationId: "Order_GetPaymentOrderProcessingFees"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "countryCode"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "CountryCode"
        x-optionalDataType: "String"
      - name: "culture"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Culture"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/PaymentOrderProcessingFeesModel"
  /api/v1/payment/customs-warning:
    get:
      tags:
      - "Order"
      summary: "Returns messages related to customs payment warning for the warehouse\
        \ country"
      operationId: "Order_GetCustomsPaymentWarnings"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "countryCode"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "CountryCode"
        x-optionalDataType: "String"
      - name: "culture"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Culture"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CustomsPaymentWarningModel"
  /api/v1/order/isLacoreFraudSettings/{mainOrderTypeFk}/{countryCode}/{currencyCode}:
    get:
      tags:
      - "Order"
      summary: "To get Lacore routing and AntiFraud settings"
      operationId: "Order_IsLacoreFraudSettings"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainOrderTypeFk"
        in: "path"
        description: ""
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainOrderTypeFk"
      - name: "countryCode"
        in: "path"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "CountryCode"
      - name: "currencyCode"
        in: "path"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "CurrencyCode"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "string"
  /api/v1/order/wallet/discount:
    get:
      tags:
      - "Order"
      summary: "Check if Wallet discount available"
      operationId: "Order_GetWalletDiscount"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainOrdersFK"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "MainOrdersFK"
        x-optionalDataType: "Int32"
      - name: "countryCode"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "CountryCode"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/WalletDiscountModel"
  /api/v1/order/IsIxoPayActiveForGateway/{mainOrderTypeFk}/{countryCode}/{currencyCode}:
    get:
      tags:
      - "Order"
      summary: "Returns config for IxoPay tokenEx iframe"
      operationId: "Order_IsIxoPayActiveForGateway"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainOrderTypeFk"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainOrderTypeFk"
      - name: "countryCode"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "CountryCode"
      - name: "currencyCode"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "CurrencyCode"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/order/campaigns/info/{productBrandFK}/{countryCode}:
    get:
      tags:
      - "Order"
      summary: "Returns sales campaign info based on the campaign code."
      operationId: "Order_GetSalesCampaignByCampaignCode"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "productBrandFK"
        in: "path"
        description: "Product Brand PK"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ProductBrandFK"
      - name: "countryCode"
        in: "path"
        description: "Country Code"
        required: true
        type: "string"
        x-exportParamName: "CountryCode"
      - name: "cartType"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "CartType"
        x-optionalDataType: "String"
      - name: "culture"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Culture"
        x-optionalDataType: "String"
      - name: "siteUrl"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "SiteUrl"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/SalesCampaignModel"
  /api/v1/orders/verify-discount-code:
    get:
      tags:
      - "Order"
      summary: "Used to verify a discount code for a logged in distributor."
      operationId: "Order_VerifyDiscountCode"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "discountCode"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "DiscountCode"
        x-optionalDataType: "String"
      - name: "mainOrderTypeFk"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "MainOrderTypeFk"
        x-optionalDataType: "Int32"
      - name: "mainOrderPk"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "MainOrderPk"
        x-optionalDataType: "Int32"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/VerifyDiscountCodeReturnModel"
  /api/v1/order/payment/creditcard/types/{countryCode}/{currencyCode}:
    get:
      tags:
      - "Order"
      summary: "Returns a list of accepted credit card types for the specified country\
        \ code and currency code."
      operationId: "Order_GetAcceptedCreditCardTypes"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "countryCode"
        in: "path"
        description: "Example: US"
        required: true
        type: "string"
        x-exportParamName: "CountryCode"
      - name: "currencyCode"
        in: "path"
        description: "Example: USD"
        required: true
        type: "string"
        x-exportParamName: "CurrencyCode"
      - name: "mainOrderTypeFK"
        in: "query"
        description: "Main Order Type PK for the request"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "MainOrderTypeFK"
        x-optionalDataType: "Int32"
      - name: "mainOrderPk"
        in: "query"
        description: "Main Order PK for the request"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "MainOrderPk"
        x-optionalDataType: "Int32"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/order/campaigns/info/{productBrandFK}/{countryCode}/{campaignCode}:
    get:
      tags:
      - "Order"
      summary: "Returns sales campaign info based on the campaign code."
      operationId: "Order_GetSalesCampaignByCampaignCode"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "productBrandFK"
        in: "path"
        description: "Product Brand PK"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ProductBrandFK"
      - name: "countryCode"
        in: "path"
        description: "Country Code"
        required: true
        type: "string"
        x-exportParamName: "CountryCode"
      - name: "campaignCode"
        in: "path"
        description: "Campaign Code"
        required: true
        type: "string"
        x-exportParamName: "CampaignCode"
      - name: "cartType"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "CartType"
        x-optionalDataType: "String"
      - name: "culture"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Culture"
        x-optionalDataType: "String"
      - name: "siteUrl"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "SiteUrl"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/SalesCampaignModel"
  /api/v1/order/isQRCodeOrderStatusUpdated:
    get:
      tags:
      - "Order"
      summary: ""
      operationId: "Order_IsQRCodeOrderStatusUpdated"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainOrdersFK"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "MainOrdersFK"
        x-optionalDataType: "Int32"
      - name: "paymentMethodCode"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "PaymentMethodCode"
        x-optionalDataType: "String"
      - name: "paymentReference"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "PaymentReference"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "boolean"
  /api/v1/payments:
    get:
      tags:
      - "Order"
      summary: ""
      operationId: "Order_GetPayments"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "paidStatusFK"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "PaidStatusFK"
        x-optionalDataType: "Int32"
      - name: "paymentStartDate"
        in: "query"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "PaymentStartDate"
        x-optionalDataType: "Time"
      - name: "paymentEndDate"
        in: "query"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "PaymentEndDate"
        x-optionalDataType: "Time"
      - name: "orderStartDate"
        in: "query"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "OrderStartDate"
        x-optionalDataType: "Time"
      - name: "orderEndDate"
        in: "query"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "OrderEndDate"
        x-optionalDataType: "Time"
      - name: "paymentMethodCode"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "PaymentMethodCode"
        x-optionalDataType: "String"
      - name: "pageSize"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      - name: "page"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/PaymentSimpleViewModel"
  /api/v1/RMA:
    get:
      tags:
      - "Order"
      summary: "To get items from RMA table order OrderByDescending Issue_Date"
      operationId: "Order_GetOrSearchRMAs"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "query.rmaNumber"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "QueryRmaNumber"
        x-optionalDataType: "Int32"
      - name: "query.orderNumber"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "QueryOrderNumber"
        x-optionalDataType: "Int32"
      - name: "query.customerSiteurl"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "QueryCustomerSiteurl"
        x-optionalDataType: "String"
      - name: "query.customerName"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "QueryCustomerName"
        x-optionalDataType: "String"
      - name: "query.issuedBy"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "QueryIssuedBy"
        x-optionalDataType: "String"
      - name: "query.issuedDate"
        in: "query"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "QueryIssuedDate"
        x-optionalDataType: "Time"
      - name: "query.jnsDepartment"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "QueryJnsDepartment"
        x-optionalDataType: "String"
      - name: "query.statusId"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "QueryStatusId"
        x-optionalDataType: "String"
      - name: "query.recivedDate"
        in: "query"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "QueryRecivedDate"
        x-optionalDataType: "Time"
      - name: "query.refundDate"
        in: "query"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "QueryRefundDate"
        x-optionalDataType: "Time"
      - name: "query.offset"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "QueryOffset"
        x-optionalDataType: "Int32"
      - name: "query.limit"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "QueryLimit"
        x-optionalDataType: "Int32"
      - name: "query.orderBy"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "QueryOrderBy"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/RMAView"
    post:
      tags:
      - "Order"
      summary: "Create RMA"
      operationId: "Order_CreateRMA"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "newRMA"
        required: true
        schema:
          $ref: "#/definitions/RMAFormModel"
        x-exportParamName: "NewRMA"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
    put:
      tags:
      - "Order"
      summary: "Update RMA"
      operationId: "Order_UpdateRMA"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "rmaUpdateQueryModel"
        required: true
        schema:
          $ref: "#/definitions/RMAUpdateQueryModel"
        x-exportParamName: "RmaUpdateQueryModel"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/orders:
    get:
      tags:
      - "Order"
      summary: ""
      operationId: "Order_GetMainOrders"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainId"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "MainId"
        x-optionalDataType: "String"
      - name: "mainSiteUrl"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "MainSiteUrl"
        x-optionalDataType: "String"
      - name: "orderNumber"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "OrderNumber"
        x-optionalDataType: "String"
      - name: "shipmentNumber"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "ShipmentNumber"
        x-optionalDataType: "String"
      - name: "trackingNumber"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "TrackingNumber"
        x-optionalDataType: "String"
      - name: "getCustomerOrders"
        in: "query"
        required: false
        type: "boolean"
        x-exportParamName: "GetCustomerOrders"
        x-optionalDataType: "Bool"
      - name: "getAbandonedOrders"
        in: "query"
        required: false
        type: "boolean"
        x-exportParamName: "GetAbandonedOrders"
        x-optionalDataType: "Bool"
      - name: "getEnrollerOrders"
        in: "query"
        required: false
        type: "boolean"
        x-exportParamName: "GetEnrollerOrders"
        x-optionalDataType: "Bool"
      - name: "getDownlineOrders"
        in: "query"
        required: false
        type: "boolean"
        x-exportParamName: "GetDownlineOrders"
        x-optionalDataType: "Bool"
      - name: "paidStatus"
        in: "query"
        required: false
        type: "boolean"
        x-exportParamName: "PaidStatus"
        x-optionalDataType: "Bool"
      - name: "startDate"
        in: "query"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "StartDate"
        x-optionalDataType: "Time"
      - name: "endDate"
        in: "query"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "EndDate"
        x-optionalDataType: "Time"
      - name: "orderType"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "OrderType"
        x-optionalDataType: "String"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "orderBy"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "OrderBy"
        x-optionalDataType: "String"
      - name: "productPKs"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "ProductPKs"
        x-optionalDataType: "String"
      - name: "isRefunded"
        in: "query"
        required: false
        type: "boolean"
        x-exportParamName: "IsRefunded"
        x-optionalDataType: "Bool"
      - name: "countryCode"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "CountryCode"
        x-optionalDataType: "String"
      - name: "salesCampaignPK"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "SalesCampaignPK"
        x-optionalDataType: "Int32"
      - name: "shippingStatus"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "ShippingStatus"
        x-optionalDataType: "String"
      - name: "shouldIncludeShippingDetail"
        in: "query"
        required: false
        type: "boolean"
        x-exportParamName: "ShouldIncludeShippingDetail"
        x-optionalDataType: "Bool"
      - name: "shouldIncludeOrderItems"
        in: "query"
        required: false
        type: "boolean"
        x-exportParamName: "ShouldIncludeOrderItems"
        x-optionalDataType: "Bool"
      - name: "shouldIncludePayments"
        in: "query"
        required: false
        type: "boolean"
        x-exportParamName: "ShouldIncludePayments"
        x-optionalDataType: "Bool"
      - name: "shouldCheckIfPrepaid"
        in: "query"
        required: false
        type: "boolean"
        x-exportParamName: "ShouldCheckIfPrepaid"
        x-optionalDataType: "Bool"
      - name: "orderLevel"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "OrderLevel"
        x-optionalDataType: "String"
      - name: "getDataToExport"
        in: "query"
        required: false
        type: "boolean"
        x-exportParamName: "GetDataToExport"
        x-optionalDataType: "Bool"
      - name: "customerOrdersMainId"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "CustomerOrdersMainId"
        x-optionalDataType: "Int32"
      - name: "weChatOrderNumber"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "WeChatOrderNumber"
        x-optionalDataType: "String"
      - name: "memberID"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "MemberID"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/MainOrderSimpleViewModel"
  /api/v1/order/main-type:
    put:
      tags:
      - "Order"
      operationId: "Order_UpdateOrderMainType"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        required: true
        schema:
          $ref: "#/definitions/OrderMainTypeFormModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/order/set-shipping:
    put:
      tags:
      - "Order"
      operationId: "Order_SetShippingOnOrder"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        required: true
        schema:
          $ref: "#/definitions/SetShippingFormModel"
        x-exportParamName: "Model"
      deprecated: true
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/order/shipping/address/{mainOrdersFK}:
    put:
      tags:
      - "Order"
      summary: "Updates the shipping address informaiton for an order."
      description: "Required Fields: FirstName, LastName, Address1, City, State, PostalCode,\
        \ Country <param name=\"mainOrdersFK\">OrderNumber</param><param name=\"model\"\
        >Address Information</param>"
      operationId: "Order_UpdateOrderShippingAddress"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainOrdersFK"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainOrdersFK"
      - in: "body"
        name: "model"
        required: true
        schema:
          $ref: "#/definitions/UpdateOrderShipAddressFormModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/order/save-ixo-pay-token/{mainOrdersFK}:
    put:
      tags:
      - "Order"
      summary: "Returns config for IxoPay tokenEx iframe"
      operationId: "Order_SaveTokenExConfig"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/IxoPayTokenModel"
        x-exportParamName: "Model"
      - name: "mainOrdersFK"
        in: "path"
        description: ""
        required: true
        type: "integer"
        default: 0
        format: "int32"
        x-exportParamName: "MainOrdersFK"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/order/import-order/{mainOrderPk}/{importOrder}:
    put:
      tags:
      - "Order"
      summary: "Updates ImportOrder of the specific order by unique identifier"
      operationId: "Order_UpdateImportOrderType"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainOrderPk"
        in: "path"
        description: ""
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainOrderPk"
      - name: "importOrder"
        in: "path"
        description: ""
        required: true
        type: "boolean"
        x-exportParamName: "ImportOrder"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/orders/{mainOrdersPK}/payments/{paymentMethodPK}:
    put:
      tags:
      - "Order"
      summary: "Updates payments on order"
      operationId: "Order_UpdatePayment"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainOrdersPK"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainOrdersPK"
      - name: "paymentMethodPK"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "PaymentMethodPK"
      - in: "body"
        name: "payment"
        required: true
        schema:
          $ref: "#/definitions/PaymentUpdateFormModel"
        x-exportParamName: "Payment"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/PaymentProcessingResponse"
  /api/v1/order/log:
    post:
      tags:
      - "Order"
      summary: "Used to add a status update log to an order."
      operationId: "Order_AddLogOrderStatus"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        required: true
        schema:
          $ref: "#/definitions/AddLogOrderStatusFormModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/order/3ds2:
    post:
      tags:
      - "Order"
      summary: "Get redirect Url for 3D 2 Secure payment"
      operationId: "Order_Get3Ds2"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        required: true
        schema:
          $ref: "#/definitions/OrderComplete3DS2Model"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/order/3dsurl:
    post:
      tags:
      - "Order"
      summary: "Get redirect Url for 3D Secure payment"
      operationId: "Order_Get3DsUrl"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        required: true
        schema:
          $ref: "#/definitions/OrderCompleteModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/order/product:
    post:
      tags:
      - "Order"
      summary: "Remove items from an existing, in process order. It will remove all\
        \ existing items, if any, and add the items provided to the order"
      operationId: "Order_AddProduct"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        required: true
        schema:
          $ref: "#/definitions/AddProductFormModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/order/complete:
    post:
      tags:
      - "Order"
      summary: "Finalize an order in process"
      operationId: "Order_SubmitOrder"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        required: true
        schema:
          $ref: "#/definitions/OrderCompleteModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/RMA/send-summary:
    post:
      tags:
      - "Order"
      summary: "Send summary to the distributor"
      operationId: "Order_SendSummury"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "rmaInfo"
        required: true
        schema:
          $ref: "#/definitions/RMASendSummaryInfoModel"
        x-exportParamName: "RmaInfo"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/order/3dstokenurl:
    post:
      tags:
      - "Order"
      summary: "Get token url/model for token processing"
      operationId: "Order_Get3DsTokenUrl"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/OrderCompleteTokenModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/order/retail/info:
    post:
      tags:
      - "Order"
      summary: "Used to set retail tracking information for retails orders once they\
        \ have been completed."
      operationId: "Order_AddMainRetailInfo"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        required: true
        schema:
          $ref: "#/definitions/AddMainRetailInfoFormModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/order/update-type:
    post:
      tags:
      - "Order"
      summary: "Updates the order type based on cart information. Will not update\
        \ paid orders."
      operationId: "Order_SetOrderType"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        description: "SetOrderTypeFormModel"
        required: true
        schema:
          $ref: "#/definitions/UpdateOrderTypeFormModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/UpdateOrderTypeViewModel"
  /api/v1/order/climbers-club:
    post:
      tags:
      - "Order"
      summary: "Finalize climbers club sign up. Creates order and takes money from\
        \ cliffs wallet. Returns success or failure"
      operationId: "Order_CreateOrderClimbersClub"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters: []
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/order/getInstallments:
    post:
      tags:
      - "Order"
      summary: ""
      operationId: "Order_GetInstallments"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/MerchantInstallmentsFormModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/MerchantInstallmentsConfigModel"
  /api/v1/order/merchant/cancel:
    post:
      tags:
      - "Order"
      summary: "Used to cancelation PayPal Order."
      operationId: "Order_CancelMerchantOrder"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        required: true
        schema:
          $ref: "#/definitions/OrderResponseModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/order/initInstallments:
    post:
      tags:
      - "Order"
      summary: ""
      operationId: "Order_InitInstallments"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/MerchantInstallmentsFormModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/MerchantInstallmentsConfigModel"
  /api/v1/order/payment/set-card:
    post:
      tags:
      - "Order"
      summary: "Updates MainCreditCardsFK column in MainOrders Table"
      operationId: "Order_UseSavedCreditCard"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        required: true
        schema:
          $ref: "#/definitions/SavedCCModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/order/saveInstallments:
    post:
      tags:
      - "Order"
      summary: ""
      operationId: "Order_SaveInstallments"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/MerchantInstallmentsFormModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/MerchantInstallmentsConfigModel"
  /api/v1/order/addProcessingFees:
    post:
      tags:
      - "Order"
      summary: "Adds processing fees to an order"
      operationId: "Order_AddProcessingFees"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        required: true
        schema:
          $ref: "#/definitions/AddProcessingFeesFormModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "number"
            format: "double"
  /api/v1/order/payment/creditcard:
    post:
      tags:
      - "Order"
      summary: "Adds the Credit Card payment information to an order in process"
      operationId: "Order_AddCCPaymentToOrder"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        required: true
        schema:
          $ref: "#/definitions/AddCCPaymentFormModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/order/creditcard/validate:
    post:
      tags:
      - "Order"
      summary: "Validate Credit Card Number"
      operationId: "Order_ValidateCreditCard"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        required: true
        schema:
          $ref: "#/definitions/ValidateCreditCardModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/ValidateCreditCardResponse"
  /api/v1/order/tracking/{TrackingId}:
    post:
      tags:
      - "Order"
      summary: "Used to load the retail cart info based on the re-marketing tracking\
        \ id."
      operationId: "Order_GetRetailCartByRemarketingTrackingId"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "TrackingId"
        in: "path"
        description: "GUID: Email Tracking Id"
        required: true
        type: "string"
        x-exportParamName: "TrackingId"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/OrderInfoModel"
  /api/v1/orders/create-prepaid-order:
    post:
      tags:
      - "Order"
      summary: "Runs the manual process to create an prepaid order for the currently\
        \ logged in customer."
      operationId: "Order_CreatePrepaidOrder"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "products"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/CartItemFormModel"
        x-exportParamName: "Products"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/AutoshipOrderInfoViewModel"
  /api/v1/order/paypal/get-process-url:
    post:
      tags:
      - "Order"
      summary: "Used to get redirect url to PayPal."
      operationId: "Order_ProcessPayPalOrder"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        required: true
        schema:
          $ref: "#/definitions/OrderProcessModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/orders/create-autoship-order:
    post:
      tags:
      - "Order"
      summary: "Runs the manual process to create an autoship order for the currently\
        \ logged in customer."
      operationId: "Order_CreateAutoshipOrder"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters: []
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/AutoshipOrderInfoViewModel"
  /api/v1/orders/{mainOrdersPK}/validate:
    post:
      tags:
      - "Order"
      summary: "Used to validate an order information before it is submitted."
      operationId: "Order_ValidateDiscountCode"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainOrdersPK"
        in: "path"
        description: "Main Orders PK"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainOrdersPK"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/ValidateOrderViewModel"
  /api/v1/order/merchant/getRedirectModel:
    post:
      tags:
      - "Order"
      summary: "Return merchant redirect model with required parameters for UI"
      operationId: "Order_GetMerchantRedirectModel"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/MerchantRedirectFormModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/MerchantRedirectViewModel"
  /api/v1/order/merchant/process-response:
    post:
      tags:
      - "Order"
      summary: "Used to process response from PayPal."
      operationId: "Order_ProcessPayPalOrderResponse"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        required: true
        schema:
          $ref: "#/definitions/OrderResponseModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/PaymentProcessingResponse"
  /api/v1/order/set-invoice-insurance-type:
    post:
      tags:
      - "Order"
      summary: "Sets invoice insurance type"
      operationId: "Order_SetInvoiceInsuranceType"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        required: true
        schema:
          $ref: "#/definitions/InvoiceInsuranceTypeModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/order/isInstallmentsExtensionValid:
    post:
      tags:
      - "Order"
      summary: ""
      operationId: "Order_IsInstallmentsExtensionValid"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/MerchantInstallmentsFormModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "boolean"
  /api/v1/order/merchant/getRedirectModelStep2:
    post:
      tags:
      - "Order"
      summary: "Get script\\iframe for redirect step 2"
      operationId: "Order_GetMerchantRedirectModelStep2"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/MerchantRedirectFormModelStep2"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/MerchantRedirectModelStep2"
  /api/v1/order/{mainOrdersPK}/apply-riman-dollars:
    post:
      tags:
      - "Order"
      summary: "Used to apply a Riman dollars to an order for a distributor."
      operationId: "Order_ApplyRimanDollarsPayment"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainOrdersPK"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainOrdersPK"
      - in: "body"
        name: "payment"
        required: true
        schema:
          $ref: "#/definitions/RimanDollarsPaymentModel"
        x-exportParamName: "Payment"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/PaymentProcessingResponse"
  /api/v1/orders/{mainOrdersPK}/apply-discount-code:
    post:
      tags:
      - "Order"
      summary: "Used to apply a discount code to an order for a distributor."
      operationId: "Order_ApplyDiscountCode"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainOrdersPK"
        in: "path"
        description: "Main Orders PK"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainOrdersPK"
      - in: "body"
        name: "model"
        description: "Form Model"
        required: true
        schema:
          $ref: "#/definitions/ApplyOrderDiscountFormModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/orders/{mainOrdersPK}/update-personal-use:
    post:
      tags:
      - "Order"
      summary: "Used to update the personal use only flag on main orders."
      operationId: "Order_UpdatePersonalUseFlag"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainOrdersPK"
        in: "path"
        description: "Main Orders PK"
        required: true
        type: "string"
        x-exportParamName: "MainOrdersPK"
      - in: "body"
        name: "model"
        description: "Form Model"
        required: true
        schema:
          $ref: "#/definitions/UpdatePersonalUseFormModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/product/rafiki:
    get:
      tags:
      - "Product"
      summary: "Get the details for the dontion product called Rafiki"
      operationId: "Product_GetRafikiProduct"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters: []
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/product/samples/{siteUrl}:
    get:
      tags:
      - "Product"
      summary: ""
      operationId: "Product_GetSamples"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "siteUrl"
        in: "path"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "SiteUrl"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/product/regulatory-details:
    get:
      tags:
      - "Product"
      summary: "Returns product details for Regulatory"
      operationId: "Product_GetProductRegulatoryDetails"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "sku"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Sku"
        x-optionalDataType: "String"
      - name: "culture"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Culture"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/ProductRegulatoryDetailsViewModel"
  /api/v1/product/detail:
    post:
      tags:
      - "Product"
      summary: "Get the detail information for products"
      operationId: "Product_GetProductDetail"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        description: "Multiple arrays that are used to look up products"
        required: true
        schema:
          $ref: "#/definitions/ProductDetailFormModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/product/retail:
    post:
      tags:
      - "Product"
      summary: "Gets all retail products metadata for a given siteurl, culturename,\
        \ and country."
      operationId: "Product_GetRetailProducts"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        required: true
        schema:
          $ref: "#/definitions/ProductFormModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/product/wholesale:
    post:
      tags:
      - "Product"
      summary: "Gets all wholesale products metadata for a given siteurl, culturename,\
        \ and country."
      operationId: "Product_GetWholeSaleProducts"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        required: true
        schema:
          $ref: "#/definitions/ProductFormModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/product/configuration:
    post:
      tags:
      - "Product"
      summary: "Use for products that have 'flavors' to an individual item"
      operationId: "Product_GetProductConfiguration"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/ProductConfigurationFormModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/product/nv/shade-request:
    post:
      tags:
      - "Product"
      summary: "Submits a shade form request via email."
      operationId: "Product_SubmitNvShadeRequest"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/ShadeRequestModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/quiz:
    get:
      tags:
      - "Quiz"
      summary: "Returns the quiz questions and answers"
      operationId: "Quiz_GetQuiz"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "countryCode"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "CountryCode"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/QuizModel"
    post:
      tags:
      - "Quiz"
      summary: "Returns the product based on the quiz answers"
      operationId: "Quiz_GetProductByQuizAnswers"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "quizAnswer"
        description: "Answer IDs"
        required: true
        schema:
          $ref: "#/definitions/QuizAnswerFormModel"
        x-exportParamName: "QuizAnswer"
      - name: "countryCode"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "CountryCode"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/FullProductViewModel"
  /api/v1/rewards/refer-a-friend/status:
    get:
      tags:
      - "ReferAFriend"
      summary: "Gets the customer status for referrals."
      operationId: "ReferAFriend_GetStatus"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters: []
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CustomerReferralStatusModel"
  /api/v1/rewards/refer-a-friend/settings:
    get:
      tags:
      - "ReferAFriend"
      summary: "Gets the refer a friend config."
      operationId: "ReferAFriend_GetSettings"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters: []
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/CustomerReferralSettingsSimpleModel"
  /api/v1/rewards/refer-a-friend:
    get:
      tags:
      - "ReferAFriend"
      summary: "Gets the list of referrals for a preferred customer."
      operationId: "ReferAFriend_GetReferralsAsync"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "customerMainPk"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "CustomerMainPk"
        x-optionalDataType: "String"
      - name: "referralId"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "ReferralId"
        x-optionalDataType: "String"
      - name: "referralEmail"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "ReferralEmail"
        x-optionalDataType: "String"
      - name: "referralFirstName"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "ReferralFirstName"
        x-optionalDataType: "String"
      - name: "referralLastName"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "ReferralLastName"
        x-optionalDataType: "String"
      - name: "referralStatus"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "ReferralStatus"
        x-optionalDataType: "String"
      - name: "referralBeforeDate"
        in: "query"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "ReferralBeforeDate"
        x-optionalDataType: "Time"
      - name: "referralAfterDate"
        in: "query"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "ReferralAfterDate"
        x-optionalDataType: "Time"
      - name: "earnedPointsBeforeDate"
        in: "query"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "EarnedPointsBeforeDate"
        x-optionalDataType: "Time"
      - name: "earnedPointsAfterDate"
        in: "query"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "EarnedPointsAfterDate"
        x-optionalDataType: "Time"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "orderBy"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "OrderBy"
        x-optionalDataType: "String"
      - name: "skipCount"
        in: "query"
        required: false
        type: "boolean"
        x-exportParamName: "SkipCount"
        x-optionalDataType: "Bool"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/CustomerReferralViewModel"
  /api/v1/rewards/refer-a-friend/{mainPk}:
    post:
      tags:
      - "ReferAFriend"
      summary: "Save a list of referrals for a preferred customer."
      operationId: "ReferAFriend_CreateReferrals"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainPk"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainPk"
      - in: "body"
        name: "referrals"
        required: true
        schema:
          $ref: "#/definitions/CustomerReferralFormModel"
        x-exportParamName: "Referrals"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CustomerReferralReturnModel"
  /api/v1/shipping/methods/{mainOrdersFK}/{countryCode}:
    get:
      tags:
      - "Shipping"
      summary: "Grabs a list of shipping methods for a given order.\r\n{mainOrdersFK}{countryCode}"
      operationId: "Shipping_GetShippingMethods"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainOrdersFK"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainOrdersFK"
      - name: "countryCode"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "CountryCode"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/shipping/chart-settings/{mainOrdersFk}/{shippingChartTypeFk}:
    get:
      tags:
      - "Shipping"
      summary: "Returns shipping methods for an order"
      operationId: "Shipping_GetShippingSettings"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainOrdersFk"
        in: "path"
        description: ""
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MainOrdersFk"
      - name: "shippingChartTypeFk"
        in: "path"
        description: ""
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ShippingChartTypeFk"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/shipping/address/validate:
    post:
      tags:
      - "Shipping"
      summary: "Calls the google address validation and returns a status and collection\
        \ of similar addresses"
      operationId: "Shipping_IsAddressValid"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "address"
        required: true
        schema:
          $ref: "#/definitions/AddressModel"
        x-exportParamName: "Address"
      deprecated: true
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/AddressValidationModel"
  /api/v1/shopping/{id}:
    get:
      tags:
      - "Shopping"
      summary: "Gets a cart object by the cart key value."
      operationId: "Shopping_GetCart"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Unique identifier of the cart."
        required: true
        type: "string"
        format: "uuid"
        x-exportParamName: "Id"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/CartViewModel"
    put:
      tags:
      - "Shopping"
      summary: "Updates a cart object info."
      operationId: "Shopping_Update"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Unique identifier of the cart"
        required: true
        type: "string"
        format: "uuid"
        x-exportParamName: "Id"
      - in: "body"
        name: "model"
        description: "CartFormModel object"
        required: true
        schema:
          $ref: "#/definitions/CartFormModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/CartFormModel"
    delete:
      tags:
      - "Shopping"
      summary: "Deletes a cart object."
      operationId: "Shopping_RemoveCart"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Unique identifier of the cart"
        required: true
        type: "string"
        format: "uuid"
        x-exportParamName: "Id"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
    patch:
      tags:
      - "Shopping"
      summary: "Used for partial updates on a cart object item."
      operationId: "Shopping_Patch"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Unique identifier of the cart"
        required: true
        type: "string"
        format: "uuid"
        x-exportParamName: "Id"
      - in: "body"
        name: "model"
        description: "CartFormModel object"
        required: true
        schema:
          $ref: "#/definitions/CartPatchModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/CartViewModel"
  /api/v1/shopping/{id}/rank:
    get:
      tags:
      - "Shopping"
      summary: "Get Rank, calculated by items in cart, that user will achieve on purchase"
      operationId: "Shopping_GetRank"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Unique identifier of the cart."
        required: true
        type: "string"
        format: "uuid"
        x-exportParamName: "Id"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/GetRankResponseModel"
  /api/v1/shopping/{cartKey}/estimated-taxes:
    get:
      tags:
      - "Shopping"
      summary: "Returns the estimate tax for the cart."
      operationId: "Shopping_GetCalculatedTaxes"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "cartKey"
        in: "path"
        description: "Unique identifier of the cart."
        required: true
        type: "string"
        format: "uuid"
        x-exportParamName: "CartKey"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/TaxModel"
  /api/v1/shopping/{cartKey}/shipping-options:
    get:
      tags:
      - "Shopping"
      summary: "Returns shipping options and pricing available for the cart."
      operationId: "Shopping_GetShippingOptions"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "cartKey"
        in: "path"
        description: "Unique identifier of the cart."
        required: true
        type: "string"
        format: "uuid"
        x-exportParamName: "CartKey"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/ShippingMethodsViewModel"
  /api/v1/shopping/campaigns:
    get:
      tags:
      - "Shopping"
      summary: "List campaigns"
      operationId: "Shopping_GetCampaigns"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "culture"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Culture"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CampaignResponseModel"
  /api/v1/shopping/{cartKey}/validate:
    get:
      tags:
      - "Shopping"
      summary: "Call to validate cart information"
      operationId: "Shopping_ValidateCart"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "cartKey"
        in: "path"
        required: true
        type: "string"
        format: "uuid"
        x-exportParamName: "CartKey"
      - name: "orderNumber"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "OrderNumber"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/ValidateCartViewModel"
  /api/v1/shopping/get-checkout-messages:
    get:
      tags:
      - "Shopping"
      summary: "Returns a list of checkout messages/warnings for checkout"
      operationId: "Shopping_GetCheckoutMessage"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "countryCode"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "CountryCode"
        x-optionalDataType: "String"
      - name: "languageFK"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "LanguageFK"
        x-optionalDataType: "Int32"
      - name: "cartKey"
        in: "query"
        required: false
        type: "string"
        format: "uuid"
        x-exportParamName: "CartKey"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CheckoutMessageViewModel"
  /api/v1/shopping/apply-discount:
    put:
      tags:
      - "Shopping"
      summary: "Applies either a SalesCampign promo to a cart or MainDiscountConfig\
        \ to an order."
      operationId: "Shopping_ApplyDiscount"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces: []
      parameters:
      - in: "body"
        name: "model"
        required: true
        schema:
          $ref: "#/definitions/CartDiscountFormModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
        "404":
          description: "NOT FOUND"
  /api/v1/shopping/{cartKey}/set-shipping:
    put:
      tags:
      - "Shopping"
      summary: "Sets the shipping info on the cart selected by the user."
      operationId: "Shopping_SetShipping"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "cartKey"
        in: "path"
        description: "Unique identifier of the cart."
        required: true
        type: "string"
        format: "uuid"
        x-exportParamName: "CartKey"
      - in: "body"
        name: "model"
        description: "Model info for the shipping chosen by the user."
        required: true
        schema:
          $ref: "#/definitions/CartSetShippingFormModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/shopping:
    post:
      tags:
      - "Shopping"
      summary: "Creates a new shopping cart object."
      operationId: "Shopping_Create"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        description: "CartFormModel object"
        required: true
        schema:
          $ref: "#/definitions/CartFormModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/CartFormModel"
  /api/v1/shopping/campaigns/qualified:
    post:
      tags:
      - "Shopping"
      summary: "Checks to see if the shopping cart has qualified for any sales campaigns"
      operationId: "Shopping_GetQualifiedSalesCampaignInfo"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        required: true
        schema:
          $ref: "#/definitions/GetQualifiedSalesCampaignRequestModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/GetQualifiedSalesCampaignViewModel"
  /api/v1/shopping/{cartKey}/create-order:
    post:
      tags:
      - "Shopping"
      summary: "Used to create a ready to process order record from the main cart\
        \ information."
      operationId: "Shopping_CreateMainOrder"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "cartKey"
        in: "path"
        description: ""
        required: true
        type: "string"
        format: "uuid"
        x-exportParamName: "CartKey"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "integer"
            format: "int32"
  /api/v1/shopping/{id}/clear-referrer:
    delete:
      tags:
      - "Shopping"
      summary: "Clears out the set referrer information on the cart. ** Use patch\
        \ call going forward **"
      operationId: "Shopping_ClearReferrer"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Unique identifier of the cart"
        required: true
        type: "string"
        format: "uuid"
        x-exportParamName: "Id"
      deprecated: true
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/CartViewModel"
  /api/v1/shopping/{cartKey}/address/billing:
    post:
      tags:
      - "ShoppingAddress"
      summary: "Adds a billing address record to the shopping cart"
      operationId: "ShoppingAddress_AddBillingAddress"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "cartKey"
        in: "path"
        description: ""
        required: true
        type: "string"
        format: "uuid"
        x-exportParamName: "CartKey"
      - in: "body"
        name: "model"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/CartAddressFormModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/CartAddressViewModel"
    put:
      tags:
      - "ShoppingAddress"
      summary: "Updates a billing address record on the shopping cart"
      operationId: "ShoppingAddress_UpdateBillingAddress"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "cartKey"
        in: "path"
        description: ""
        required: true
        type: "string"
        format: "uuid"
        x-exportParamName: "CartKey"
      - in: "body"
        name: "model"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/CartAddressFormModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/CartAddressViewModel"
    delete:
      tags:
      - "ShoppingAddress"
      summary: "Removes a billing address record on the shopping cart"
      operationId: "ShoppingAddress_RemoveBillingAddress"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "cartKey"
        in: "path"
        description: ""
        required: true
        type: "string"
        format: "uuid"
        x-exportParamName: "CartKey"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/CartAddressViewModel"
    patch:
      tags:
      - "ShoppingAddress"
      summary: "Patches a billing address record on the shopping cart"
      operationId: "ShoppingAddress_PatchBillingAddress"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "cartKey"
        in: "path"
        description: ""
        required: true
        type: "string"
        format: "uuid"
        x-exportParamName: "CartKey"
      - in: "body"
        name: "model"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/CartAddressViewModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/CartAddressViewModel"
  /api/v1/shopping/{cartKey}/address/mailing:
    post:
      tags:
      - "ShoppingAddress"
      summary: "Adds a mailing address record to the shopping cart"
      operationId: "ShoppingAddress_AddMailingAddress"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "cartKey"
        in: "path"
        description: ""
        required: true
        type: "string"
        format: "uuid"
        x-exportParamName: "CartKey"
      - in: "body"
        name: "model"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/CartAddressFormModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/CartAddressViewModel"
    put:
      tags:
      - "ShoppingAddress"
      summary: "Updates a mailing address record on the shopping cart"
      operationId: "ShoppingAddress_UpdateMailingAddress"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "cartKey"
        in: "path"
        description: ""
        required: true
        type: "string"
        format: "uuid"
        x-exportParamName: "CartKey"
      - in: "body"
        name: "model"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/CartAddressFormModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/CartAddressViewModel"
    delete:
      tags:
      - "ShoppingAddress"
      summary: "Removes a mailing address record on the shopping cart"
      operationId: "ShoppingAddress_RemoveMailingAddress"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "cartKey"
        in: "path"
        description: ""
        required: true
        type: "string"
        format: "uuid"
        x-exportParamName: "CartKey"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/CartAddressViewModel"
    patch:
      tags:
      - "ShoppingAddress"
      summary: "Patches a mailing address record to the shopping cart"
      operationId: "ShoppingAddress_PatchMailingAddress"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "cartKey"
        in: "path"
        description: ""
        required: true
        type: "string"
        format: "uuid"
        x-exportParamName: "CartKey"
      - in: "body"
        name: "model"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/CartAddressViewModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/CartAddressViewModel"
  /api/v1/shopping/{cartKey}/address/shipping:
    post:
      tags:
      - "ShoppingAddress"
      summary: "Adds a shipping address record to the shopping cart"
      operationId: "ShoppingAddress_AddShippingAddress"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "cartKey"
        in: "path"
        description: ""
        required: true
        type: "string"
        format: "uuid"
        x-exportParamName: "CartKey"
      - in: "body"
        name: "model"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/CartAddressFormModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/CartAddressViewModel"
    put:
      tags:
      - "ShoppingAddress"
      summary: "Updates a Shipping address record on the shopping cart"
      operationId: "ShoppingAddress_UpdateShippingAddress"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "cartKey"
        in: "path"
        description: ""
        required: true
        type: "string"
        format: "uuid"
        x-exportParamName: "CartKey"
      - in: "body"
        name: "model"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/CartAddressFormModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/CartAddressViewModel"
    delete:
      tags:
      - "ShoppingAddress"
      summary: "Removes a shipping address record on the shopping cart"
      operationId: "ShoppingAddress_RemoveShippingAddress"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "cartKey"
        in: "path"
        description: ""
        required: true
        type: "string"
        format: "uuid"
        x-exportParamName: "CartKey"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/CartAddressViewModel"
    patch:
      tags:
      - "ShoppingAddress"
      summary: "Patches a Shipping address record on the shopping cart"
      operationId: "ShoppingAddress_PatchShippingAddress"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "cartKey"
        in: "path"
        description: ""
        required: true
        type: "string"
        format: "uuid"
        x-exportParamName: "CartKey"
      - in: "body"
        name: "model"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/CartAddressViewModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/CartAddressViewModel"
  /api/v1/shopping/{id}/items:
    get:
      tags:
      - "ShoppingItems"
      summary: "Returns a list of items in a cart."
      operationId: "ShoppingItems_GetCartItems"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Unique identifier of the cart"
        required: true
        type: "string"
        format: "uuid"
        x-exportParamName: "Id"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CartItemViewModel"
    post:
      tags:
      - "ShoppingItems"
      summary: "Adds a new product item into a shopping cart."
      operationId: "ShoppingItems_AddItem"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Unique identifier of the cart"
        required: true
        type: "string"
        format: "uuid"
        x-exportParamName: "Id"
      - in: "body"
        name: "model"
        description: "CartItemModel object"
        required: true
        schema:
          $ref: "#/definitions/CartItemFormModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/CartItemViewModel"
    delete:
      tags:
      - "ShoppingItems"
      summary: "Used to remove all cart items from a cart."
      operationId: "ShoppingItems_RemoveCartItems"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Unique identifier of the cart"
        required: true
        type: "string"
        format: "uuid"
        x-exportParamName: "Id"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/shopping/{id}/items/validate:
    get:
      tags:
      - "ShoppingItems"
      summary: "Returns a validation message in case items set is prohibited."
      operationId: "ShoppingItems_ValidateCartItems"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Unique identifier of the cart"
        required: true
        type: "string"
        format: "uuid"
        x-exportParamName: "Id"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ValidateCartItemsViewModel"
  /api/v1/shopping/{id}/items/{itemId}:
    put:
      tags:
      - "ShoppingItems"
      summary: "Updates an existing item in a shopping cart"
      operationId: "ShoppingItems_UpdateItem"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Unique identifier of the cart"
        required: true
        type: "string"
        format: "uuid"
        x-exportParamName: "Id"
      - name: "itemId"
        in: "path"
        description: "Product PK"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ItemId"
      - in: "body"
        name: "model"
        description: "CartItemModel object"
        required: true
        schema:
          $ref: "#/definitions/CartItemFormModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/CartItemViewModel"
    delete:
      tags:
      - "ShoppingItems"
      summary: "Remove an item from a shopping cart"
      operationId: "ShoppingItems_RemoveItem"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Unique identifier of the cart"
        required: true
        type: "string"
        format: "uuid"
        x-exportParamName: "Id"
      - name: "itemId"
        in: "path"
        description: "Product PK"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ItemId"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
    patch:
      tags:
      - "ShoppingItems"
      summary: "Patches an existing item in a shopping cart"
      operationId: "ShoppingItems_PatchItem"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Unique identifier of the cart"
        required: true
        type: "string"
        format: "uuid"
        x-exportParamName: "Id"
      - name: "itemId"
        in: "path"
        description: "Product PK"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ItemId"
      - in: "body"
        name: "model"
        description: "CartItemModel object"
        required: true
        schema:
          $ref: "#/definitions/CartItemPatchModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/CartItemViewModel"
  /api/v1/shopping/{id}/items/list:
    post:
      tags:
      - "ShoppingItems"
      summary: "Adds a list of products to the shopping cart."
      operationId: "ShoppingItems_AddItems"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Unique identifier of the cart"
        required: true
        type: "string"
        format: "uuid"
        x-exportParamName: "Id"
      - in: "body"
        name: "models"
        description: "array of CartItemModel object"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/CartItemFormModel"
        x-exportParamName: "Models"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CartItemViewModel"
    delete:
      tags:
      - "ShoppingItems"
      summary: "Used to remove a list of items from a cart."
      operationId: "ShoppingItems_RemoveCartItemsList"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Unique identifier of the cart"
        required: true
        type: "string"
        format: "uuid"
        x-exportParamName: "Id"
      - name: "items"
        in: "query"
        description: "MainCartItemsPk array"
        required: true
        type: "array"
        items:
          type: "integer"
          format: "int32"
        collectionFormat: "multi"
        x-exportParamName: "Items"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/shopping/{id}/quick-checkout:
    post:
      tags:
      - "ShoppingItems"
      summary: "Used to quickly add items to a cart for fast checkout"
      operationId: "ShoppingItems_AddQuickCartItems"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "string"
        format: "uuid"
        x-exportParamName: "Id"
      - in: "body"
        name: "itemsList"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/CartItemAffiliateModel"
        x-exportParamName: "ItemsList"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/AffiliateCartResponseModel"
  /api/v1/shopping/{id}/affiliate-items:
    post:
      tags:
      - "ShoppingItems"
      summary: "Used to quickly validate and add items to a cart for affiliate deep\
        \ linking."
      operationId: "ShoppingItems_AddAffiliateItems"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "id"
        in: "path"
        description: "CartKey"
        required: true
        type: "string"
        format: "uuid"
        x-exportParamName: "Id"
      - in: "body"
        name: "itemsList"
        description: "Products"
        required: true
        schema:
          $ref: "#/definitions/CartItemAffiliateModel"
        x-exportParamName: "ItemsList"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/AffiliateCartResponseModel"
  /api/v1/smartdelivery:
    get:
      tags:
      - "SmartDelivery"
      summary: "Get smartdelivery settings"
      operationId: "SmartDelivery_GetSettings"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters: []
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/SmartDeliveryViewModel"
    post:
      tags:
      - "SmartDelivery"
      summary: "Create new SD profile without items"
      operationId: "SmartDelivery_CreateSettings"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters: []
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/SmartDeliveryViewModel"
    put:
      tags:
      - "SmartDelivery"
      summary: "Update smartdelivery settings"
      operationId: "SmartDelivery_UpdateSettings"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "formmodel"
        required: true
        schema:
          $ref: "#/definitions/SmartDeliveryFormModel"
        x-exportParamName: "Formmodel"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/SmartDeliveryViewModel"
  /api/v1/smartdelivery/items:
    get:
      tags:
      - "SmartDelivery"
      summary: "Get List of smartdelivery items"
      operationId: "SmartDelivery_GetItems"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters: []
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/SmartDeliveryItemModel"
    post:
      tags:
      - "SmartDelivery"
      summary: "Insert a smartdelivery item"
      operationId: "SmartDelivery_InsertItem"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        description: "form model of item"
        required: true
        schema:
          $ref: "#/definitions/SmartDeliveryItemFormModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/SmartDeliveryItemModel"
  /api/v1/smartdelivery/payment:
    get:
      tags:
      - "SmartDelivery"
      summary: "Get smartdelivery available payments"
      operationId: "SmartDelivery_GetPayments"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters: []
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PaymentMethodViewModel"
  /api/v1/smartdelivery/prepaid:
    get:
      tags:
      - "SmartDelivery"
      summary: "Get List of prepaid orders"
      operationId: "SmartDelivery_GetPB"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "mainSiteUrl"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "MainSiteUrl"
        x-optionalDataType: "String"
      - name: "orderNumber"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "OrderNumber"
        x-optionalDataType: "String"
      - name: "startDate"
        in: "query"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "StartDate"
        x-optionalDataType: "Time"
      - name: "endDate"
        in: "query"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "EndDate"
        x-optionalDataType: "Time"
      - name: "prepaidStatus"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "PrepaidStatus"
        x-optionalDataType: "String"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/PrepaidViewModel"
  /api/v1/smartdelivery/prepaid/date/{order}:
    put:
      tags:
      - "SmartDelivery"
      summary: "Update StartDate for particular PBOrder and all active following PBOrders"
      operationId: "SmartDelivery_UpdatePBDate"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "order"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Order"
      - in: "body"
        name: "pborder"
        required: true
        schema:
          $ref: "#/definitions/PrepaidPBOrderModel"
        x-exportParamName: "Pborder"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/PrepaidPBOrderModel"
  /api/v1/smartdelivery/items/addkidsdonation:
    put:
      tags:
      - "SmartDelivery"
      summary: "Update smartdelivery item"
      operationId: "SmartDelivery_AddKidsDonation"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters: []
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/SmartDeliveryItemModel"
  /api/v1/smartdelivery/items/{autoshipitempk}:
    put:
      tags:
      - "SmartDelivery"
      summary: "Update smartdelivery item"
      operationId: "SmartDelivery_UpdateItem"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "autoshipitempk"
        in: "path"
        description: "id of the smartdelivery item"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Autoshipitempk"
      - in: "body"
        name: "model"
        description: "form model of item"
        required: true
        schema:
          $ref: "#/definitions/SmartDeliveryItemFormModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/SmartDeliveryItemModel"
    delete:
      tags:
      - "SmartDelivery"
      summary: "Delete smartdelivery item"
      operationId: "SmartDelivery_RemoveItem"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "autoshipitempk"
        in: "path"
        description: "id of the smartdelivery item"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Autoshipitempk"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/smartdelivery/prepaid/status/{order}:
    put:
      tags:
      - "SmartDelivery"
      summary: "Update status for PBOrder"
      operationId: "SmartDelivery_UpdatePBStatus"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "order"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Order"
      - in: "body"
        name: "pborder"
        required: true
        schema:
          $ref: "#/definitions/PrepaidPBOrderModel"
        x-exportParamName: "Pborder"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/PrepaidPBOrderModel"
  /api/v1/smartdelivery/prepaid/reverse/{order}:
    put:
      tags:
      - "SmartDelivery"
      summary: "Reverse PA Orders for particular PBOrder for make it refundable"
      operationId: "SmartDelivery_ReversePA"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "order"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Order"
      - in: "body"
        name: "pborder"
        required: true
        schema:
          $ref: "#/definitions/PrepaidPBOrderModel"
        x-exportParamName: "Pborder"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/PrepaidPBOrderModel"
  /api/v1/smartdelivery/skip:
    post:
      tags:
      - "SmartDelivery"
      summary: "Skip month of user's autoship"
      operationId: "SmartDelivery_SkipAutoshipMonth"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters: []
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/smartdelivery/deactivate:
    post:
      tags:
      - "SmartDelivery"
      summary: "Deactivate user's autoship"
      operationId: "SmartDelivery_DeactivateAutoship"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters: []
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "object"
  /api/v1/smartdelivery/items/list:
    post:
      tags:
      - "SmartDelivery"
      summary: "Insert a list smartdelivery item"
      operationId: "SmartDelivery_InsertItemList"
      consumes:
      - "application/json"
      - "text/json"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - in: "body"
        name: "model"
        description: "form model of item"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/SmartDeliveryItemFormModel"
        x-exportParamName: "Model"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/SmartDeliveryItemModel"
  /api/v1/test:
    get:
      tags:
      - "Test"
      operationId: "Test_Get"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "string"
  /api/v1/nuget-test:
    get:
      tags:
      - "Test"
      operationId: "Test_NugetTester"
      consumes: []
      produces:
      - "application/json"
      - "text/json"
      parameters:
      - name: "api-version"
        in: "query"
        description: "The requested API version"
        required: false
        type: "string"
        default: "1"
        x-exportParamName: "ApiVersion"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: "OK"
          schema:
            type: "string"
securityDefinitions:
  apiKey:
    description: "API Key Authentication"
    type: "apiKey"
    name: "authToken"
    in: "header"
definitions:
  BagQueryModel:
    type: "object"
    properties:
      bagPK:
        type: "integer"
        format: "int32"
      customerPK:
        type: "integer"
        format: "int32"
      cartType:
        type: "string"
      countryCode:
        type: "string"
      culture:
        type: "string"
      siteUrl:
        type: "string"
  BagFormModel:
    type: "object"
    required:
    - "title"
    properties:
      title:
        type: "string"
      description:
        type: "string"
      bannerUrl:
        type: "string"
      cartType:
        type: "string"
      countryCode:
        type: "string"
      culture:
        type: "string"
      products:
        type: "array"
        items:
          $ref: "#/definitions/BagProductFormModel"
    example:
      countryCode: "countryCode"
      culture: "culture"
      bannerUrl: "bannerUrl"
      description: "description"
      cartType: "cartType"
      title: "title"
      products:
      - setupForAs: true
        quantity: 6
        productFK: 0
      - setupForAs: true
        quantity: 6
        productFK: 0
  BagProductFormModel:
    type: "object"
    required:
    - "productFK"
    - "quantity"
    - "setupForAs"
    properties:
      productFK:
        type: "integer"
        format: "int32"
      quantity:
        type: "integer"
        format: "int32"
      setupForAs:
        type: "boolean"
    example:
      setupForAs: true
      quantity: 6
      productFK: 0
  RewardPointsCustomerRankViewModel:
    type: "object"
    properties:
      loyaltyRankPK:
        type: "integer"
        format: "int32"
      loyaltyRankName:
        type: "string"
      loyaltyPointsPriceListFK:
        type: "integer"
        format: "int32"
      loyaltyRank:
        type: "integer"
        format: "int32"
      purchaseAmountMin:
        type: "number"
        format: "double"
      purchaseAmountMax:
        type: "number"
        format: "double"
      localCurrencySymbol:
        type: "string"
    example:
      loyaltyRank: 1
      loyaltyRankName: "loyaltyRankName"
      localCurrencySymbol: "localCurrencySymbol"
      loyaltyRankPK: 0
      loyaltyPointsPriceListFK: 6
      purchaseAmountMin: 5.962133916683182
      purchaseAmountMax: 5.637376656633329
  RewardPointsCustomerStatusViewModel:
    type: "object"
    properties:
      customerRank:
        type: "string"
      customerRankLevel:
        type: "integer"
        format: "int32"
      windowSD:
        type: "string"
        format: "date-time"
      windowED:
        type: "string"
        format: "date-time"
    example:
      customerRank: "customerRank"
      windowSD: "2000-01-23T04:56:07.000+00:00"
      customerRankLevel: 0
      windowED: "2000-01-23T04:56:07.000+00:00"
  RewardPointsCustomerTransactionsQuery:
    type: "object"
    properties:
      pageNumber:
        type: "integer"
        format: "int32"
      pageSize:
        type: "integer"
        format: "int32"
  RewardPointsCustomerTransactionsViewModel:
    type: "object"
    properties:
      totalCount:
        type: "integer"
        format: "int32"
      transactions:
        type: "array"
        items:
          $ref: "#/definitions/RewardPointsCustomerTransactionModel"
    example:
      totalCount: 0
      transactions:
      - runningTotal: 7
        customerRank: "customerRank"
        convTotal: 5.962133916683182
        transactionAmount: 5.637376656633329
        description: "description"
        currencySymbol: "currencySymbol"
        rewardPointsBalance: 2.3021358869347655
        mainOrdersFK: 6
        effectiveDate: "2000-01-23T04:56:07.000+00:00"
        orderTotal: 1.4658129805029452
        expirationDate: "2000-01-23T04:56:07.000+00:00"
      - runningTotal: 7
        customerRank: "customerRank"
        convTotal: 5.962133916683182
        transactionAmount: 5.637376656633329
        description: "description"
        currencySymbol: "currencySymbol"
        rewardPointsBalance: 2.3021358869347655
        mainOrdersFK: 6
        effectiveDate: "2000-01-23T04:56:07.000+00:00"
        orderTotal: 1.4658129805029452
        expirationDate: "2000-01-23T04:56:07.000+00:00"
  RewardPointsCustomerTransactionModel:
    type: "object"
    properties:
      effectiveDate:
        type: "string"
        format: "date-time"
      description:
        type: "string"
      mainOrdersFK:
        type: "integer"
        format: "int32"
      orderTotal:
        type: "number"
        format: "double"
      convTotal:
        type: "number"
        format: "double"
      currencySymbol:
        type: "string"
      transactionAmount:
        type: "number"
        format: "double"
      rewardPointsBalance:
        type: "number"
        format: "double"
      expirationDate:
        type: "string"
        format: "date-time"
      runningTotal:
        type: "integer"
        format: "int32"
      customerRank:
        type: "string"
    example:
      runningTotal: 7
      customerRank: "customerRank"
      convTotal: 5.962133916683182
      transactionAmount: 5.637376656633329
      description: "description"
      currencySymbol: "currencySymbol"
      rewardPointsBalance: 2.3021358869347655
      mainOrdersFK: 6
      effectiveDate: "2000-01-23T04:56:07.000+00:00"
      orderTotal: 1.4658129805029452
      expirationDate: "2000-01-23T04:56:07.000+00:00"
  MainOrderTypeModel:
    type: "object"
    required:
    - "key"
    - "value"
    properties:
      key:
        type: "integer"
        format: "int32"
      value:
        type: "string"
      isCustomerApplicable:
        type: "boolean"
    example:
      value: "value"
      key: 0
      isCustomerApplicable: true
  SiftConfigModel:
    type: "object"
    properties:
      siftBeaconKey:
        type: "string"
      siftURL:
        type: "string"
    example:
      siftBeaconKey: "siftBeaconKey"
      siftURL: "siftURL"
  MainOrderModel:
    type: "object"
    required:
    - "currencySymbol"
    - "hasCommercialInvoice"
    - "hasCreditNote"
    - "hasTaxInvoice"
    - "isCCAP"
    - "mainOrderTypeFK"
    - "mainOrdersPK"
    - "mainTypeFK"
    - "orderDate"
    - "orderType"
    - "paidStatus"
    - "paymentMethod"
    - "siteURL"
    properties:
      refSiteURL:
        type: "string"
      convShipTotalFormat:
        type: "string"
      convTaxesFormat:
        type: "string"
      convProductTaxFormat:
        type: "string"
      convShippingTaxFormat:
        type: "string"
      convTotalProductTaxFormat:
        type: "string"
      convAdditionalTaxFormat:
        type: "string"
      convSubtotalFormat:
        type: "string"
      convOrderProcessingFeesFormat:
        type: "string"
      convRefundFormat:
        type: "string"
      convDiscountFormat:
        type: "string"
      currencyRate:
        type: "number"
        format: "double"
      isCCAP:
        type: "boolean"
      paidStatusFK:
        type: "integer"
        format: "int32"
      markedPaidDate:
        type: "string"
        format: "date-time"
      mainOrderTypeFK:
        type: "integer"
        format: "int32"
      mainTypeFK:
        type: "integer"
        format: "int32"
      paymentMethod:
        type: "string"
      splitorders:
        type: "array"
        items:
          $ref: "#/definitions/Splitorders"
      isPB:
        type: "boolean"
      isPA:
        type: "boolean"
      isCC:
        type: "boolean"
      orderTypeValue:
        type: "string"
      showOrderInvoice:
        type: "boolean"
      showShipmentInvoice:
        type: "boolean"
      cv:
        type: "integer"
        format: "int32"
      personalOrdersBP:
        type: "number"
        format: "double"
      personalOrdersSP:
        type: "number"
        format: "double"
      email:
        type: "string"
      products:
        type: "array"
        items:
          $ref: "#/definitions/OrdersShipmentProduct"
      orderDate:
        type: "string"
        format: "date-time"
      mainOrdersPK:
        type: "integer"
        format: "int32"
      orderType:
        type: "string"
      finalOrderType:
        type: "string"
      siteURL:
        type: "string"
      encOrderNumber:
        type: "string"
      currencySymbol:
        type: "string"
      currencyCode:
        type: "string"
      paidStatus:
        type: "boolean"
      hasTaxInvoice:
        type: "boolean"
      hasCommercialInvoice:
        type: "boolean"
      hasCreditNote:
        type: "boolean"
      isShippingPending:
        type: "boolean"
      mainFK:
        type: "integer"
        format: "int32"
      voucherURL:
        type: "string"
      shipCountry:
        type: "string"
      shippingStatus:
        type: "string"
      orderShippingStatus:
        type: "string"
      paidStatusValue:
        type: "string"
      quantity:
        type: "integer"
        format: "int32"
      phone:
        type: "string"
      shipFirstName:
        type: "string"
      shipLastName:
        type: "string"
      total:
        type: "number"
        format: "double"
      convTotal:
        type: "number"
        format: "double"
      convTotalFormat:
        type: "string"
      subTotal:
        type: "number"
        format: "double"
      convSubtotal:
        type: "number"
        format: "double"
      shipTotal:
        type: "number"
        format: "double"
      convShipTotal:
        type: "number"
        format: "double"
      taxes:
        type: "number"
        format: "double"
      taxLabel:
        type: "string"
      productTax:
        type: "number"
        format: "double"
      shippingTax:
        type: "number"
        format: "double"
      totalProductTax:
        type: "number"
        format: "double"
      additionalTaxLabel:
        type: "string"
      additionalTax:
        type: "number"
        format: "double"
      convTaxes:
        type: "number"
        format: "double"
      orderProcessingFees:
        type: "number"
        format: "double"
      convOrderProcessingFees:
        type: "number"
        format: "double"
      discount:
        type: "number"
        format: "double"
      convDiscount:
        type: "number"
        format: "double"
      refundAmount:
        type: "number"
        format: "double"
      convRefund:
        type: "number"
        format: "double"
      salesCampaignFK:
        type: "integer"
        format: "int32"
      paidstatusfk:
        type: "integer"
        format: "int32"
      deliveryDate:
        type: "string"
        format: "date-time"
      shippingDetails:
        type: "array"
        items:
          $ref: "#/definitions/MainOrderTrackingModel"
      orderItems:
        type: "array"
        items:
          $ref: "#/definitions/MainOrderItemModel"
      payments:
        type: "array"
        items:
          $ref: "#/definitions/OrderPayments"
      isPrepaidOrder:
        type: "boolean"
      showInvoice:
        type: "boolean"
      krGuaranteeNo:
        type: "string"
      weChatOrderNumber:
        type: "string"
      memberID:
        type: "string"
    example:
      orderType: "orderType"
      markedPaidDate: "2000-01-23T04:56:07.000+00:00"
      siteURL: "siteURL"
      convShipTotalFormat: "convShipTotalFormat"
      taxes: 3.5571952270680973
      discount: 3.353193347011243
      showInvoice: true
      subTotal: 6.683562403749608
      convDiscount: 3.0937452626664474
      paidStatusFK: 6
      personalOrdersSP: 2.027123023002322
      convSubtotalFormat: "convSubtotalFormat"
      krGuaranteeNo: "krGuaranteeNo"
      isCCAP: true
      orderTypeValue: "orderTypeValue"
      convOrderProcessingFeesFormat: "convOrderProcessingFeesFormat"
      mainTypeFK: 5
      isPA: true
      orderProcessingFees: 5.944895607614016
      isPB: true
      shipFirstName: "shipFirstName"
      totalProductTax: 2.8841621266687802
      convTotalProductTaxFormat: "convTotalProductTaxFormat"
      convTaxesFormat: "convTaxesFormat"
      splitorders:
      - paymentMethodCode: "paymentMethodCode"
        refsiteurl: "refsiteurl"
        paymentAmountFormat: "paymentAmountFormat"
        refundTotal: 2.3021358869347655
        paymentMethod: "paymentMethod"
        currencySymbol: "currencySymbol"
        refundTotalFormat: "refundTotalFormat"
        mainOrdersFK: 5
        currencyCode: "currencyCode"
        paymentAmount: 7.061401241503109
      - paymentMethodCode: "paymentMethodCode"
        refsiteurl: "refsiteurl"
        paymentAmountFormat: "paymentAmountFormat"
        refundTotal: 2.3021358869347655
        paymentMethod: "paymentMethod"
        currencySymbol: "currencySymbol"
        refundTotalFormat: "refundTotalFormat"
        mainOrdersFK: 5
        currencyCode: "currencyCode"
        paymentAmount: 7.061401241503109
      phone: "phone"
      hasCommercialInvoice: true
      hasCreditNote: true
      mainFK: 4
      paymentMethod: "paymentMethod"
      showShipmentInvoice: true
      convShippingTaxFormat: "convShippingTaxFormat"
      isCC: true
      convRefundFormat: "convRefundFormat"
      orderDate: "2000-01-23T04:56:07.000+00:00"
      shipLastName: "shipLastName"
      personalOrdersBP: 3.616076749251911
      productTax: 6.965117697638846
      convTotal: 9.369310271410669
      mainOrdersPK: 1
      additionalTaxLabel: "additionalTaxLabel"
      payments:
      - paymentMethodCode: "paymentMethodCode"
        country: "country"
        refsiteurl: "refsiteurl"
        city: "city"
        orderTimeStamp: "2000-01-23T04:56:07.000+00:00"
        refundTotal: 5.507386964179881
        refundTotalFormat: "refundTotalFormat"
        paymentAmount: 4.86315908102884
        paidStatusFK: 8
        paymentMethodPK: 6
        state: "state"
        installmentPayments: 4
        zip: "zip"
        address: "address"
        address3: "address3"
        address2: "address2"
        currencySymbol: "currencySymbol"
        ccType: "ccType"
        paymentAmountFormat: "paymentAmountFormat"
        ccNumberLastFour: "ccNumberLastFour"
        paymentMethod: "paymentMethod"
        acStatus: "acStatus"
        ccExp: "ccExp"
        mainOrdersFK: 7
        currencyCode: "currencyCode"
        paymentTimeStamp: "2000-01-23T04:56:07.000+00:00"
      - paymentMethodCode: "paymentMethodCode"
        country: "country"
        refsiteurl: "refsiteurl"
        city: "city"
        orderTimeStamp: "2000-01-23T04:56:07.000+00:00"
        refundTotal: 5.507386964179881
        refundTotalFormat: "refundTotalFormat"
        paymentAmount: 4.86315908102884
        paidStatusFK: 8
        paymentMethodPK: 6
        state: "state"
        installmentPayments: 4
        zip: "zip"
        address: "address"
        address3: "address3"
        address2: "address2"
        currencySymbol: "currencySymbol"
        ccType: "ccType"
        paymentAmountFormat: "paymentAmountFormat"
        ccNumberLastFour: "ccNumberLastFour"
        paymentMethod: "paymentMethod"
        acStatus: "acStatus"
        ccExp: "ccExp"
        mainOrdersFK: 7
        currencyCode: "currencyCode"
        paymentTimeStamp: "2000-01-23T04:56:07.000+00:00"
      convShipTotal: 6.438423552598547
      convAdditionalTaxFormat: "convAdditionalTaxFormat"
      shipCountry: "shipCountry"
      orderItems:
      - shippingCompany: "shippingCompany"
        shippingDate: "2000-01-23T04:56:07.000+00:00"
        usProduct: "usProduct"
        mainOrdersPK: 7
        taxes: 1.041444916118296
        productsCategoryFK: 3
        shippingStatus: "shippingStatus"
        price: 0.2025324113236393
        imageUrl: "imageUrl"
        mainOrderItemsPK: 8
        convertedPriceFormat: "convertedPriceFormat"
        trackingNumber: "trackingNumber"
        sp: 0.5199002018724985
        isShippable: true
        unitPrice: 4.078845849666752
        product: "product"
        taxCodeFK: "taxCodeFK"
        quantity: 7
        productPK: 3
        vat: 4.258773108174356
        currencySymbol: "currencySymbol"
        isTaxable: true
        convertedPrice: 6.628464275087742
        shipTotal: 4.678947989005849
        productCode: "productCode"
        cv: 9.702963800023566
        mainFK: 3
        paymentMethod: "paymentMethod"
        orderCode: "orderCode"
        setUpForAS: true
        currencyRate: 5.533258397034986
        taxableTotal: 9.132027271330688
        retailPrice: 7.260521264802104
        currencyCode: "currencyCode"
        productPrice: 0.8774076871421566
      - shippingCompany: "shippingCompany"
        shippingDate: "2000-01-23T04:56:07.000+00:00"
        usProduct: "usProduct"
        mainOrdersPK: 7
        taxes: 1.041444916118296
        productsCategoryFK: 3
        shippingStatus: "shippingStatus"
        price: 0.2025324113236393
        imageUrl: "imageUrl"
        mainOrderItemsPK: 8
        convertedPriceFormat: "convertedPriceFormat"
        trackingNumber: "trackingNumber"
        sp: 0.5199002018724985
        isShippable: true
        unitPrice: 4.078845849666752
        product: "product"
        taxCodeFK: "taxCodeFK"
        quantity: 7
        productPK: 3
        vat: 4.258773108174356
        currencySymbol: "currencySymbol"
        isTaxable: true
        convertedPrice: 6.628464275087742
        shipTotal: 4.678947989005849
        productCode: "productCode"
        cv: 9.702963800023566
        mainFK: 3
        paymentMethod: "paymentMethod"
        orderCode: "orderCode"
        setUpForAS: true
        currencyRate: 5.533258397034986
        taxableTotal: 9.132027271330688
        retailPrice: 7.260521264802104
        currencyCode: "currencyCode"
        productPrice: 0.8774076871421566
      products:
      - quantity: 1
        trackingLink: "trackingLink"
        productPk: 7
        packagePk: 4
        isPackage: true
        productName: "productName"
        formattedPrice: "formattedPrice"
        cv: 1.0246457001441578
        price: 6.84685269835264
        videoOrderPackagingInfoPK: 7
        packageName: "packageName"
        sp: 1.4894159098541704
        currencyCode: "currencyCode"
        shipmentNumber: "shipmentNumber"
        shippedDate: "2000-01-23T04:56:07.000+00:00"
        trackingNumber: "trackingNumber"
        shipmentStatus: "shipmentStatus"
      - quantity: 1
        trackingLink: "trackingLink"
        productPk: 7
        packagePk: 4
        isPackage: true
        productName: "productName"
        formattedPrice: "formattedPrice"
        cv: 1.0246457001441578
        price: 6.84685269835264
        videoOrderPackagingInfoPK: 7
        packageName: "packageName"
        sp: 1.4894159098541704
        currencyCode: "currencyCode"
        shipmentNumber: "shipmentNumber"
        shippedDate: "2000-01-23T04:56:07.000+00:00"
        trackingNumber: "trackingNumber"
        shipmentStatus: "shipmentStatus"
      shippingStatus: "shippingStatus"
      shippingTax: 1.284659006116532
      convProductTaxFormat: "convProductTaxFormat"
      paidStatus: true
      total: 9.965781217890562
      convDiscountFormat: "convDiscountFormat"
      voucherURL: "voucherURL"
      shippingDetails:
      - country: "country"
        trackingLink: "trackingLink"
        address: "address"
        city: "city"
        shippingChartTypesPK: 0
        shipCompany: "shipCompany"
        mainOrdersPK: "mainOrdersPK"
        shippingType: "shippingType"
        upsCode: "upsCode"
        shipCountry: "shipCountry"
        shipFirstName: "shipFirstName"
        phone: "phone"
        company: "company"
        state: "state"
        trackingNumber: "trackingNumber"
        orderDate: "2000-01-23T04:56:07.000+00:00"
        shipLastName: "shipLastName"
        orderPackagingInfoPK: 4
        email: "email"
        status: "status"
      - country: "country"
        trackingLink: "trackingLink"
        address: "address"
        city: "city"
        shippingChartTypesPK: 0
        shipCompany: "shipCompany"
        mainOrdersPK: "mainOrdersPK"
        shippingType: "shippingType"
        upsCode: "upsCode"
        shipCountry: "shipCountry"
        shipFirstName: "shipFirstName"
        phone: "phone"
        company: "company"
        state: "state"
        trackingNumber: "trackingNumber"
        orderDate: "2000-01-23T04:56:07.000+00:00"
        shipLastName: "shipLastName"
        orderPackagingInfoPK: 4
        email: "email"
        status: "status"
      hasTaxInvoice: true
      convTotalFormat: "convTotalFormat"
      paidstatusfk: 6
      refSiteURL: "refSiteURL"
      convSubtotal: 8.762042012749001
      weChatOrderNumber: "weChatOrderNumber"
      deliveryDate: "2000-01-23T04:56:07.000+00:00"
      email: "email"
      paidStatusValue: "paidStatusValue"
      refundAmount: 7.143538047012306
      isShippingPending: true
      encOrderNumber: "encOrderNumber"
      quantity: 5
      orderShippingStatus: "orderShippingStatus"
      isPrepaidOrder: true
      mainOrderTypeFK: 1
      convOrderProcessingFees: 6.704019297950036
      currencySymbol: "currencySymbol"
      additionalTax: 6.778324963048013
      convRefund: 0.8851374739011653
      taxLabel: "taxLabel"
      shipTotal: 9.018348186070783
      cv: 9
      salesCampaignFK: 7
      convTaxes: 6.878052220127876
      showOrderInvoice: true
      currencyRate: 0.8008281904610115
      finalOrderType: "finalOrderType"
      currencyCode: "currencyCode"
      memberID: "memberID"
  Splitorders:
    type: "object"
    properties:
      mainOrdersFK:
        type: "integer"
        format: "int32"
      paymentMethodCode:
        type: "string"
      refundTotal:
        type: "number"
        format: "double"
      refundTotalFormat:
        type: "string"
      currencyCode:
        type: "string"
      paymentMethod:
        type: "string"
      paymentAmount:
        type: "number"
        format: "double"
      paymentAmountFormat:
        type: "string"
      currencySymbol:
        type: "string"
      refsiteurl:
        type: "string"
    example:
      paymentMethodCode: "paymentMethodCode"
      refsiteurl: "refsiteurl"
      paymentAmountFormat: "paymentAmountFormat"
      refundTotal: 2.3021358869347655
      paymentMethod: "paymentMethod"
      currencySymbol: "currencySymbol"
      refundTotalFormat: "refundTotalFormat"
      mainOrdersFK: 5
      currencyCode: "currencyCode"
      paymentAmount: 7.061401241503109
  OrdersShipmentProduct:
    type: "object"
    properties:
      packagePk:
        type: "integer"
        format: "int32"
      productPk:
        type: "integer"
        format: "int32"
      packageName:
        type: "string"
      productName:
        type: "string"
      isPackage:
        type: "boolean"
      quantity:
        type: "integer"
        format: "int32"
      cv:
        type: "number"
        format: "double"
      sp:
        type: "number"
        format: "double"
      price:
        type: "number"
        format: "double"
      formattedPrice:
        type: "string"
      currencyCode:
        type: "string"
      shipmentNumber:
        type: "string"
      shipmentStatus:
        type: "string"
      shippedDate:
        type: "string"
        format: "date-time"
      trackingNumber:
        type: "string"
      trackingLink:
        type: "string"
      videoOrderPackagingInfoPK:
        type: "integer"
        format: "int32"
    example:
      quantity: 1
      trackingLink: "trackingLink"
      productPk: 7
      packagePk: 4
      isPackage: true
      productName: "productName"
      formattedPrice: "formattedPrice"
      cv: 1.0246457001441578
      price: 6.84685269835264
      videoOrderPackagingInfoPK: 7
      packageName: "packageName"
      sp: 1.4894159098541704
      currencyCode: "currencyCode"
      shipmentNumber: "shipmentNumber"
      shippedDate: "2000-01-23T04:56:07.000+00:00"
      trackingNumber: "trackingNumber"
      shipmentStatus: "shipmentStatus"
  MainOrderTrackingModel:
    type: "object"
    required:
    - "mainOrdersPK"
    properties:
      mainOrdersPK:
        type: "string"
      trackingNumber:
        type: "string"
      status:
        type: "string"
      shipCountry:
        type: "string"
      company:
        type: "string"
      upsCode:
        type: "string"
      shippingType:
        type: "string"
      shippingChartTypesPK:
        type: "integer"
        format: "int32"
      orderDate:
        type: "string"
        format: "date-time"
      orderPackagingInfoPK:
        type: "integer"
        format: "int32"
      trackingLink:
        type: "string"
      shipCompany:
        type: "string"
      email:
        type: "string"
      phone:
        type: "string"
      shipFirstName:
        type: "string"
      shipLastName:
        type: "string"
      address:
        type: "string"
      city:
        type: "string"
      state:
        type: "string"
      country:
        type: "string"
    example:
      country: "country"
      trackingLink: "trackingLink"
      address: "address"
      city: "city"
      shippingChartTypesPK: 0
      shipCompany: "shipCompany"
      mainOrdersPK: "mainOrdersPK"
      shippingType: "shippingType"
      upsCode: "upsCode"
      shipCountry: "shipCountry"
      shipFirstName: "shipFirstName"
      phone: "phone"
      company: "company"
      state: "state"
      trackingNumber: "trackingNumber"
      orderDate: "2000-01-23T04:56:07.000+00:00"
      shipLastName: "shipLastName"
      orderPackagingInfoPK: 4
      email: "email"
      status: "status"
  MainOrderItemModel:
    type: "object"
    required:
    - "mainFK"
    - "mainOrderItemsPK"
    - "product"
    - "productPK"
    - "shippingStatus"
    properties:
      mainOrderItemsPK:
        type: "integer"
        format: "int32"
      mainOrdersPK:
        type: "integer"
        format: "int32"
      mainFK:
        type: "integer"
        format: "int32"
      productPK:
        type: "integer"
        format: "int32"
      product:
        type: "string"
      usProduct:
        type: "string"
      quantity:
        type: "integer"
        format: "int32"
      shippingStatus:
        type: "string"
      shippingCompany:
        type: "string"
      shippingDate:
        type: "string"
        format: "date-time"
      taxCodeFK:
        type: "string"
      currencyRate:
        type: "number"
        format: "double"
      currencySymbol:
        type: "string"
      productsCategoryFK:
        type: "integer"
        format: "int32"
      unitPrice:
        type: "number"
        format: "double"
      price:
        type: "number"
        format: "double"
      convertedPrice:
        type: "number"
        format: "double"
      convertedPriceFormat:
        type: "string"
      vat:
        type: "number"
        format: "double"
      taxes:
        type: "number"
        format: "double"
      shipTotal:
        type: "number"
        format: "double"
      retailPrice:
        type: "number"
        format: "double"
      isTaxable:
        type: "boolean"
      taxableTotal:
        type: "number"
        format: "double"
      productCode:
        type: "string"
      isShippable:
        type: "boolean"
      productPrice:
        type: "number"
        format: "double"
      trackingNumber:
        type: "string"
      orderCode:
        type: "string"
      paymentMethod:
        type: "string"
      currencyCode:
        type: "string"
      imageUrl:
        type: "string"
      setUpForAS:
        type: "boolean"
      cv:
        type: "number"
        format: "double"
      sp:
        type: "number"
        format: "double"
    example:
      shippingCompany: "shippingCompany"
      shippingDate: "2000-01-23T04:56:07.000+00:00"
      usProduct: "usProduct"
      mainOrdersPK: 7
      taxes: 1.041444916118296
      productsCategoryFK: 3
      shippingStatus: "shippingStatus"
      price: 0.2025324113236393
      imageUrl: "imageUrl"
      mainOrderItemsPK: 8
      convertedPriceFormat: "convertedPriceFormat"
      trackingNumber: "trackingNumber"
      sp: 0.5199002018724985
      isShippable: true
      unitPrice: 4.078845849666752
      product: "product"
      taxCodeFK: "taxCodeFK"
      quantity: 7
      productPK: 3
      vat: 4.258773108174356
      currencySymbol: "currencySymbol"
      isTaxable: true
      convertedPrice: 6.628464275087742
      shipTotal: 4.678947989005849
      productCode: "productCode"
      cv: 9.702963800023566
      mainFK: 3
      paymentMethod: "paymentMethod"
      orderCode: "orderCode"
      setUpForAS: true
      currencyRate: 5.533258397034986
      taxableTotal: 9.132027271330688
      retailPrice: 7.260521264802104
      currencyCode: "currencyCode"
      productPrice: 0.8774076871421566
  OrderPayments:
    type: "object"
    properties:
      mainOrdersFK:
        type: "integer"
        format: "int32"
      paymentMethodCode:
        type: "string"
      refundTotal:
        type: "number"
        format: "double"
      refundTotalFormat:
        type: "string"
      currencyCode:
        type: "string"
      paymentMethod:
        type: "string"
      paymentAmount:
        type: "number"
        format: "double"
      paymentAmountFormat:
        type: "string"
      currencySymbol:
        type: "string"
      refsiteurl:
        type: "string"
      paymentMethodPK:
        type: "integer"
        format: "int32"
      paidStatusFK:
        type: "integer"
        format: "int32"
      paymentTimeStamp:
        type: "string"
        format: "date-time"
      orderTimeStamp:
        type: "string"
        format: "date-time"
      acStatus:
        type: "string"
      ccNumberLastFour:
        type: "string"
      ccType:
        type: "string"
      ccExp:
        type: "string"
      installmentPayments:
        type: "integer"
        format: "int32"
      address:
        type: "string"
      address2:
        type: "string"
      address3:
        type: "string"
      city:
        type: "string"
      state:
        type: "string"
      country:
        type: "string"
      zip:
        type: "string"
    example:
      paymentMethodCode: "paymentMethodCode"
      country: "country"
      refsiteurl: "refsiteurl"
      city: "city"
      orderTimeStamp: "2000-01-23T04:56:07.000+00:00"
      refundTotal: 5.507386964179881
      refundTotalFormat: "refundTotalFormat"
      paymentAmount: 4.86315908102884
      paidStatusFK: 8
      paymentMethodPK: 6
      state: "state"
      installmentPayments: 4
      zip: "zip"
      address: "address"
      address3: "address3"
      address2: "address2"
      currencySymbol: "currencySymbol"
      ccType: "ccType"
      paymentAmountFormat: "paymentAmountFormat"
      ccNumberLastFour: "ccNumberLastFour"
      paymentMethod: "paymentMethod"
      acStatus: "acStatus"
      ccExp: "ccExp"
      mainOrdersFK: 7
      currencyCode: "currencyCode"
      paymentTimeStamp: "2000-01-23T04:56:07.000+00:00"
  ManualPaymentTypeModel:
    type: "object"
    properties:
      merchantManualType:
        type: "integer"
        format: "int32"
      paymentMethodType:
        type: "integer"
        format: "int32"
      paymentMethodCode:
        type: "string"
      paymentMethodName:
        type: "string"
    example:
      paymentMethodCode: "paymentMethodCode"
      paymentMethodName: "paymentMethodName"
      merchantManualType: 0
      paymentMethodType: 6
  InAuthConfigModel:
    type: "object"
    properties:
      inAuthSId:
        type: "string"
      inAuthURL:
        type: "string"
    example:
      inAuthURL: "inAuthURL"
      inAuthSId: "inAuthSId"
  PaymentMethodsViewModel:
    type: "object"
    properties:
      methods:
        type: "array"
        items:
          $ref: "#/definitions/PaymentMethodViewModel"
      message:
        type: "string"
      isSaveCard:
        type: "boolean"
    example:
      isSaveCard: true
      methods:
      - isMerchantRedirect: true
        orderKeyEncoded: "orderKeyEncoded"
        redirectUrl: "redirectUrl"
        isPaymentWire: true
        paymentMethodValue: "paymentMethodValue"
        paymentMethodDisplayName: "paymentMethodDisplayName"
        paymentMethodTypePK: 6
        showorder: 0
      - isMerchantRedirect: true
        orderKeyEncoded: "orderKeyEncoded"
        redirectUrl: "redirectUrl"
        isPaymentWire: true
        paymentMethodValue: "paymentMethodValue"
        paymentMethodDisplayName: "paymentMethodDisplayName"
        paymentMethodTypePK: 6
        showorder: 0
      message: "message"
  PaymentMethodViewModel:
    type: "object"
    properties:
      paymentMethodValue:
        type: "string"
      paymentMethodDisplayName:
        type: "string"
      showorder:
        type: "integer"
        format: "int32"
      isPaymentWire:
        type: "boolean"
      orderKeyEncoded:
        type: "string"
      redirectUrl:
        type: "string"
      paymentMethodTypePK:
        type: "integer"
        format: "int32"
      isMerchantRedirect:
        type: "boolean"
    example:
      isMerchantRedirect: true
      orderKeyEncoded: "orderKeyEncoded"
      redirectUrl: "redirectUrl"
      isPaymentWire: true
      paymentMethodValue: "paymentMethodValue"
      paymentMethodDisplayName: "paymentMethodDisplayName"
      paymentMethodTypePK: 6
      showorder: 0
  PaymentFormModel:
    type: "object"
    properties:
      mainOrdersFK:
        type: "integer"
        format: "int32"
      mainFK:
        type: "integer"
        format: "int32"
      paymentMethodTypePK:
        type: "integer"
        format: "int32"
      amount:
        type: "number"
        format: "double"
      splitPayment:
        type: "boolean"
      tokenSiteURL:
        type: "string"
      token:
        type: "string"
      mainCreditCardsPK:
        type: "integer"
        format: "int32"
      cardFullName:
        type: "string"
      cardNumber:
        type: "string"
      cardType:
        type: "string"
      cvv:
        type: "string"
      expireMonth:
        type: "string"
      expireYear:
        type: "string"
      saveCardInfo:
        type: "boolean"
      installment:
        type: "integer"
        format: "int32"
      checkNumber:
        type: "integer"
        format: "int32"
      manualPayDescription:
        type: "string"
      manualPayType:
        type: "integer"
        format: "int32"
      transactionDate:
        type: "string"
      inAuthId:
        type: "string"
      useBillingAddress:
        type: "boolean"
      ccBillingFname:
        type: "string"
      ccBillingLname:
        type: "string"
      ccBillingAddr1:
        type: "string"
      ccBillingAddr2:
        type: "string"
      ccBillingCity:
        type: "string"
      ccBillingState:
        type: "string"
      ccBillingZip:
        type: "string"
      ccBillingCountry:
        type: "string"
      ccBillingPhone:
        type: "string"
      ccBillingEmail:
        type: "string"
      cardToken:
        type: "string"
    example:
      ccBillingCity: "ccBillingCity"
      ccBillingFname: "ccBillingFname"
      splitPayment: true
      ccBillingZip: "ccBillingZip"
      cardToken: "cardToken"
      tokenSiteURL: "tokenSiteURL"
      ccBillingCountry: "ccBillingCountry"
      ccBillingEmail: "ccBillingEmail"
      cardFullName: "cardFullName"
      ccBillingAddr2: "ccBillingAddr2"
      ccBillingAddr1: "ccBillingAddr1"
      saveCardInfo: true
      amount: 5.962133916683182
      cvv: "cvv"
      checkNumber: 7
      useBillingAddress: true
      expireMonth: "expireMonth"
      mainCreditCardsPK: 5
      cardType: "cardType"
      paymentMethodTypePK: 1
      transactionDate: "transactionDate"
      ccBillingState: "ccBillingState"
      token: "token"
      ccBillingLname: "ccBillingLname"
      inAuthId: "inAuthId"
      manualPayDescription: "manualPayDescription"
      mainFK: 6
      installment: 2
      manualPayType: 9
      ccBillingPhone: "ccBillingPhone"
      mainOrdersFK: 0
      expireYear: "expireYear"
      cardNumber: "cardNumber"
  PaymentProcessingResponse:
    type: "object"
    properties:
      paymentMethodPK:
        type: "integer"
        format: "int32"
      paymentMethodTypePK:
        type: "integer"
        format: "int32"
      amountProcessed:
        type: "number"
        format: "double"
      approved:
        type: "boolean"
      amountPaid:
        type: "number"
        format: "double"
      balance:
        type: "number"
        format: "double"
      splitComplete:
        type: "boolean"
      paidStatusFK:
        type: "integer"
        format: "int32"
      isSplitTender:
        type: "boolean"
      pendingPaid:
        type: "number"
        format: "double"
      processedFee:
        type: "number"
        format: "double"
      currencyRatesFK:
        type: "string"
      currencyCode:
        type: "string"
      currencySymbol:
        type: "string"
      currencyRate:
        type: "number"
        format: "double"
      merchantOrderProcessStatus:
        type: "string"
      hasErrorTranslation:
        type: "boolean"
      cmsErrorTranslationName:
        type: "string"
      isAppliedAsPaymentMethod:
        type: "boolean"
      paidStatus:
        type: "boolean"
      responseText:
        type: "string"
      gtwCode:
        type: "string"
      gtwAccount:
        type: "string"
      authFormRequired:
        type: "boolean"
      successful:
        type: "boolean"
      isRedirect:
        type: "boolean"
      redirectUrl:
        type: "string"
      redirectType:
        type: "string"
      validationMessage:
        type: "string"
      redirectModel:
        $ref: "#/definitions/MerchantRedirectViewModel"
    example:
      cmsErrorTranslationName: "cmsErrorTranslationName"
      redirectUrl: "redirectUrl"
      processedFee: 9.301444243932576
      isAppliedAsPaymentMethod: true
      responseText: "responseText"
      paidStatusFK: 2
      authFormRequired: true
      redirectModel:
        paymentMethodCode: "paymentMethodCode"
        amount: 1.0246457001441578
        hasPendingStatus: true
        validationMessage: "validationMessage"
        initScriptModel: true
        redirectType: "redirectType"
        merchantParams:
        - validatorKey: "validatorKey"
          validatorType: "validatorType"
          cmsTranslation: "cmsTranslation"
          regexPattern: "regexPattern"
          label: "label"
          type: "type"
          required: true
          controlType: "controlType"
          validatorState: "validatorState"
          width: 1
          options:
          - cmsTranslation: "cmsTranslation"
            value: "value"
            key: "key"
          - cmsTranslation: "cmsTranslation"
            value: "value"
            key: "key"
          validatorDefaultText: "validatorDefaultText"
          value: "value"
          key: "key"
          order: 4
          height: 7
        - validatorKey: "validatorKey"
          validatorType: "validatorType"
          cmsTranslation: "cmsTranslation"
          regexPattern: "regexPattern"
          label: "label"
          type: "type"
          required: true
          controlType: "controlType"
          validatorState: "validatorState"
          width: 1
          options:
          - cmsTranslation: "cmsTranslation"
            value: "value"
            key: "key"
          - cmsTranslation: "cmsTranslation"
            value: "value"
            key: "key"
          validatorDefaultText: "validatorDefaultText"
          value: "value"
          key: "key"
          order: 4
          height: 7
        scriptModel:
          sourceScript: "sourceScript"
          errorMessage: "errorMessage"
          initScript: "initScript"
          previewMessage: "previewMessage"
        mainOrdersFK: 2
      approved: true
      paidStatus: true
      isRedirect: true
      amountPaid: 5.962133916683182
      balance: 5.637376656633329
      paymentMethodPK: 0
      amountProcessed: 1.4658129805029452
      pendingPaid: 7.061401241503109
      redirectType: "redirectType"
      successful: true
      merchantOrderProcessStatus: "merchantOrderProcessStatus"
      splitComplete: true
      gtwAccount: "gtwAccount"
      validationMessage: "validationMessage"
      currencySymbol: "currencySymbol"
      paymentMethodTypePK: 6
      hasErrorTranslation: true
      currencyRatesFK: "currencyRatesFK"
      gtwCode: "gtwCode"
      currencyRate: 3.616076749251911
      isSplitTender: true
      currencyCode: "currencyCode"
  MerchantRedirectViewModel:
    type: "object"
    properties:
      mainOrdersFK:
        type: "integer"
        format: "int32"
      paymentMethodCode:
        type: "string"
      redirectType:
        type: "string"
      merchantParams:
        type: "array"
        items:
          $ref: "#/definitions/MerchantParamBaseView"
      amount:
        type: "number"
        format: "double"
      initScriptModel:
        type: "boolean"
      hasPendingStatus:
        type: "boolean"
      validationMessage:
        type: "string"
      scriptModel:
        $ref: "#/definitions/MerchantRedirectScriptModel"
    example:
      paymentMethodCode: "paymentMethodCode"
      amount: 1.0246457001441578
      hasPendingStatus: true
      validationMessage: "validationMessage"
      initScriptModel: true
      redirectType: "redirectType"
      merchantParams:
      - validatorKey: "validatorKey"
        validatorType: "validatorType"
        cmsTranslation: "cmsTranslation"
        regexPattern: "regexPattern"
        label: "label"
        type: "type"
        required: true
        controlType: "controlType"
        validatorState: "validatorState"
        width: 1
        options:
        - cmsTranslation: "cmsTranslation"
          value: "value"
          key: "key"
        - cmsTranslation: "cmsTranslation"
          value: "value"
          key: "key"
        validatorDefaultText: "validatorDefaultText"
        value: "value"
        key: "key"
        order: 4
        height: 7
      - validatorKey: "validatorKey"
        validatorType: "validatorType"
        cmsTranslation: "cmsTranslation"
        regexPattern: "regexPattern"
        label: "label"
        type: "type"
        required: true
        controlType: "controlType"
        validatorState: "validatorState"
        width: 1
        options:
        - cmsTranslation: "cmsTranslation"
          value: "value"
          key: "key"
        - cmsTranslation: "cmsTranslation"
          value: "value"
          key: "key"
        validatorDefaultText: "validatorDefaultText"
        value: "value"
        key: "key"
        order: 4
        height: 7
      scriptModel:
        sourceScript: "sourceScript"
        errorMessage: "errorMessage"
        initScript: "initScript"
        previewMessage: "previewMessage"
      mainOrdersFK: 2
  MerchantParamBaseView:
    type: "object"
    properties:
      value:
        type: "string"
      key:
        type: "string"
      label:
        type: "string"
      required:
        type: "boolean"
      order:
        type: "integer"
        format: "int32"
      controlType:
        type: "string"
      type:
        type: "string"
      height:
        type: "integer"
        format: "int32"
      width:
        type: "integer"
        format: "int32"
      validatorType:
        type: "string"
      regexPattern:
        type: "string"
      validatorState:
        type: "string"
      validatorKey:
        type: "string"
      validatorDefaultText:
        type: "string"
      cmsTranslation:
        type: "string"
      options:
        type: "array"
        items:
          $ref: "#/definitions/MerchantParamOptionView"
    example:
      validatorKey: "validatorKey"
      validatorType: "validatorType"
      cmsTranslation: "cmsTranslation"
      regexPattern: "regexPattern"
      label: "label"
      type: "type"
      required: true
      controlType: "controlType"
      validatorState: "validatorState"
      width: 1
      options:
      - cmsTranslation: "cmsTranslation"
        value: "value"
        key: "key"
      - cmsTranslation: "cmsTranslation"
        value: "value"
        key: "key"
      validatorDefaultText: "validatorDefaultText"
      value: "value"
      key: "key"
      order: 4
      height: 7
  MerchantRedirectScriptModel:
    type: "object"
    properties:
      sourceScript:
        type: "string"
      initScript:
        type: "string"
      previewMessage:
        type: "string"
      errorMessage:
        type: "string"
    example:
      sourceScript: "sourceScript"
      errorMessage: "errorMessage"
      initScript: "initScript"
      previewMessage: "previewMessage"
  MerchantParamOptionView:
    type: "object"
    properties:
      key:
        type: "string"
      value:
        type: "string"
      cmsTranslation:
        type: "string"
    example:
      cmsTranslation: "cmsTranslation"
      value: "value"
      key: "key"
  SalesCampaignModel:
    type: "object"
    required:
    - "name"
    properties:
      salesCampaignPK:
        type: "integer"
        format: "int32"
      mainFK:
        type: "integer"
        format: "int32"
      createdDate:
        type: "string"
        format: "date-time"
      startDate:
        type: "string"
        format: "date-time"
      endDate:
        type: "string"
        format: "date-time"
      name:
        type: "string"
        minLength: 0
        maxLength: 250
      priceListFK:
        type: "integer"
        format: "int32"
      campaignCode:
        type: "string"
        minLength: 0
        maxLength: 250
      productBrandFK:
        type: "integer"
        format: "int32"
      ccapConfigFK:
        type: "integer"
        format: "int32"
      products:
        type: "array"
        items:
          $ref: "#/definitions/SalesCampaignProductModel"
      campaignUrl:
        type: "string"
        minLength: 0
        maxLength: 250
      campaignImageUrl:
        type: "string"
        minLength: 0
        maxLength: 250
      isCampaignExpired:
        type: "boolean"
      supportsDiscountCode:
        type: "boolean"
    example:
      isCampaignExpired: true
      salesCampaignPK: 0
      endDate: "2000-01-23T04:56:07.000+00:00"
      productBrandFK: 5
      priceListFK: 1
      campaignUrl: "campaignUrl"
      products:
      - campaignPrice: 2.027123023002322
        package: true
        productPK: 2
        itemCode: "itemCode"
        regularPrice: 3.616076749251911
        currencySymbol: "currencySymbol"
        isTaxable: true
        description: "description"
        isAutoShip: true
        zoneFK: 7
        isRetailCart: true
        productCode: "productCode"
        cv: 9
        name: "name"
        currencyCode: "currencyCode"
        isConfiguration: true
        productConfigurations:
        - image: "image"
          packageFK: 4
          comingSoonMessage: "comingSoonMessage"
          productPK: 1
          seqNo: 6.846853
          description: "description"
          productName: "productName"
          unit: 1
          isComingSoon: true
          productCode: "productCode"
          price: 1.4894159098541704
          attribute1: "attribute1"
          attribute3: "attribute3"
          attribute2: "attribute2"
          configurableProductPK: 7
        - image: "image"
          packageFK: 4
          comingSoonMessage: "comingSoonMessage"
          productPK: 1
          seqNo: 6.846853
          description: "description"
          productName: "productName"
          unit: 1
          isComingSoon: true
          productCode: "productCode"
          price: 1.4894159098541704
          attribute1: "attribute1"
          attribute3: "attribute3"
          attribute2: "attribute2"
          configurableProductPK: 7
      - campaignPrice: 2.027123023002322
        package: true
        productPK: 2
        itemCode: "itemCode"
        regularPrice: 3.616076749251911
        currencySymbol: "currencySymbol"
        isTaxable: true
        description: "description"
        isAutoShip: true
        zoneFK: 7
        isRetailCart: true
        productCode: "productCode"
        cv: 9
        name: "name"
        currencyCode: "currencyCode"
        isConfiguration: true
        productConfigurations:
        - image: "image"
          packageFK: 4
          comingSoonMessage: "comingSoonMessage"
          productPK: 1
          seqNo: 6.846853
          description: "description"
          productName: "productName"
          unit: 1
          isComingSoon: true
          productCode: "productCode"
          price: 1.4894159098541704
          attribute1: "attribute1"
          attribute3: "attribute3"
          attribute2: "attribute2"
          configurableProductPK: 7
        - image: "image"
          packageFK: 4
          comingSoonMessage: "comingSoonMessage"
          productPK: 1
          seqNo: 6.846853
          description: "description"
          productName: "productName"
          unit: 1
          isComingSoon: true
          productCode: "productCode"
          price: 1.4894159098541704
          attribute1: "attribute1"
          attribute3: "attribute3"
          attribute2: "attribute2"
          configurableProductPK: 7
      createdDate: "2000-01-23T04:56:07.000+00:00"
      mainFK: 6
      name: "name"
      ccapConfigFK: 5
      campaignImageUrl: "campaignImageUrl"
      supportsDiscountCode: true
      startDate: "2000-01-23T04:56:07.000+00:00"
      campaignCode: "campaignCode"
  SalesCampaignProductModel:
    type: "object"
    properties:
      productPK:
        type: "integer"
        format: "int32"
      productCode:
        type: "string"
      itemCode:
        type: "string"
      currencySymbol:
        type: "string"
      currencyCode:
        type: "string"
      zoneFK:
        type: "integer"
        format: "int32"
      cv:
        type: "integer"
        format: "int32"
      isRetailCart:
        type: "boolean"
      isTaxable:
        type: "boolean"
      isAutoShip:
        type: "boolean"
      name:
        type: "string"
      description:
        type: "string"
      regularPrice:
        type: "number"
        format: "double"
      campaignPrice:
        type: "number"
        format: "double"
      package:
        type: "boolean"
      isConfiguration:
        type: "boolean"
      productConfigurations:
        type: "array"
        items:
          $ref: "#/definitions/ProductConfigurationViewModel"
    example:
      campaignPrice: 2.027123023002322
      package: true
      productPK: 2
      itemCode: "itemCode"
      regularPrice: 3.616076749251911
      currencySymbol: "currencySymbol"
      isTaxable: true
      description: "description"
      isAutoShip: true
      zoneFK: 7
      isRetailCart: true
      productCode: "productCode"
      cv: 9
      name: "name"
      currencyCode: "currencyCode"
      isConfiguration: true
      productConfigurations:
      - image: "image"
        packageFK: 4
        comingSoonMessage: "comingSoonMessage"
        productPK: 1
        seqNo: 6.846853
        description: "description"
        productName: "productName"
        unit: 1
        isComingSoon: true
        productCode: "productCode"
        price: 1.4894159098541704
        attribute1: "attribute1"
        attribute3: "attribute3"
        attribute2: "attribute2"
        configurableProductPK: 7
      - image: "image"
        packageFK: 4
        comingSoonMessage: "comingSoonMessage"
        productPK: 1
        seqNo: 6.846853
        description: "description"
        productName: "productName"
        unit: 1
        isComingSoon: true
        productCode: "productCode"
        price: 1.4894159098541704
        attribute1: "attribute1"
        attribute3: "attribute3"
        attribute2: "attribute2"
        configurableProductPK: 7
  ProductConfigurationViewModel:
    type: "object"
    properties:
      packageFK:
        type: "integer"
        format: "int32"
      configurableProductPK:
        type: "integer"
        format: "int32"
      productPK:
        type: "integer"
        format: "int32"
      productCode:
        type: "string"
      productName:
        type: "string"
      image:
        type: "string"
      attribute1:
        type: "string"
      attribute2:
        type: "string"
      attribute3:
        type: "string"
      description:
        type: "string"
      unit:
        type: "integer"
        format: "int32"
      price:
        type: "number"
        format: "double"
      seqNo:
        type: "number"
        format: "float"
      isComingSoon:
        type: "boolean"
      comingSoonMessage:
        type: "string"
    example:
      image: "image"
      packageFK: 4
      comingSoonMessage: "comingSoonMessage"
      productPK: 1
      seqNo: 6.846853
      description: "description"
      productName: "productName"
      unit: 1
      isComingSoon: true
      productCode: "productCode"
      price: 1.4894159098541704
      attribute1: "attribute1"
      attribute3: "attribute3"
      attribute2: "attribute2"
      configurableProductPK: 7
  PaymentInfoResponseModel:
    type: "object"
    properties:
      key:
        type: "string"
      value:
        type: "string"
      title:
        type: "string"
      priority:
        type: "integer"
        format: "int32"
      merchantManualTypeFK:
        type: "integer"
        format: "int32"
    example:
      merchantManualTypeFK: 6
      title: "title"
      priority: 0
      value: "value"
      key: "key"
  RMAView:
    type: "object"
    properties:
      rmAs:
        type: "array"
        items:
          $ref: "#/definitions/RMAViewModel"
      recordsCount:
        type: "integer"
        format: "int32"
    example:
      recordsCount: 9
      rmAs:
      - departmentName: "departmentName"
        reason: "reason"
        siteURL: "siteURL"
        notes: "notes"
        orderID: 5
        issuedBy: "issuedBy"
        customerName: "customerName"
        statusID: 2
        reasonID: 7
        recivedDate: "2000-01-23T04:56:07.000+00:00"
        customerID: 1
        adminID: 5
        id: 0
        rmaNumber: 6
        issueDate: "2000-01-23T04:56:07.000+00:00"
        refundDate: "2000-01-23T04:56:07.000+00:00"
        status: "status"
      - departmentName: "departmentName"
        reason: "reason"
        siteURL: "siteURL"
        notes: "notes"
        orderID: 5
        issuedBy: "issuedBy"
        customerName: "customerName"
        statusID: 2
        reasonID: 7
        recivedDate: "2000-01-23T04:56:07.000+00:00"
        customerID: 1
        adminID: 5
        id: 0
        rmaNumber: 6
        issueDate: "2000-01-23T04:56:07.000+00:00"
        refundDate: "2000-01-23T04:56:07.000+00:00"
        status: "status"
  RMAViewModel:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      rmaNumber:
        type: "integer"
        format: "int32"
      customerID:
        type: "integer"
        format: "int32"
      orderID:
        type: "integer"
        format: "int32"
      adminID:
        type: "integer"
        format: "int32"
      status:
        type: "string"
      statusID:
        type: "integer"
        format: "int32"
      issueDate:
        type: "string"
        format: "date-time"
      recivedDate:
        type: "string"
        format: "date-time"
      refundDate:
        type: "string"
        format: "date-time"
      reasonID:
        type: "integer"
        format: "int32"
      reason:
        type: "string"
      siteURL:
        type: "string"
      customerName:
        type: "string"
      departmentName:
        type: "string"
      issuedBy:
        type: "string"
      notes:
        type: "string"
    example:
      departmentName: "departmentName"
      reason: "reason"
      siteURL: "siteURL"
      notes: "notes"
      orderID: 5
      issuedBy: "issuedBy"
      customerName: "customerName"
      statusID: 2
      reasonID: 7
      recivedDate: "2000-01-23T04:56:07.000+00:00"
      customerID: 1
      adminID: 5
      id: 0
      rmaNumber: 6
      issueDate: "2000-01-23T04:56:07.000+00:00"
      refundDate: "2000-01-23T04:56:07.000+00:00"
      status: "status"
  FullDonationReport:
    type: "object"
    properties:
      listOfSingleReports:
        type: "array"
        items:
          $ref: "#/definitions/DonationReportViewModel"
      totalAmount:
        type: "string"
    example:
      totalAmount: "totalAmount"
      listOfSingleReports:
      - quantity: 6
        price: 5.962133916683182
        currencySymbol: "currencySymbol"
        currencyrate: 1.4658129805029452
        paymentMethod: "paymentMethod"
        description: "description"
        orderdate: "2000-01-23T04:56:07.000+00:00"
        type: "type"
        mainorderspk: 0
        stringPrice: "stringPrice"
        shipto: "shipto"
      - quantity: 6
        price: 5.962133916683182
        currencySymbol: "currencySymbol"
        currencyrate: 1.4658129805029452
        paymentMethod: "paymentMethod"
        description: "description"
        orderdate: "2000-01-23T04:56:07.000+00:00"
        type: "type"
        mainorderspk: 0
        stringPrice: "stringPrice"
        shipto: "shipto"
  DonationReportViewModel:
    type: "object"
    properties:
      mainorderspk:
        type: "integer"
        format: "int32"
      quantity:
        type: "integer"
        format: "int32"
      orderdate:
        type: "string"
        format: "date-time"
      currencySymbol:
        type: "string"
      currencyrate:
        type: "number"
        format: "double"
      price:
        type: "number"
        format: "double"
      paymentMethod:
        type: "string"
      type:
        type: "string"
      shipto:
        type: "string"
      stringPrice:
        type: "string"
      description:
        type: "string"
    example:
      quantity: 6
      price: 5.962133916683182
      currencySymbol: "currencySymbol"
      currencyrate: 1.4658129805029452
      paymentMethod: "paymentMethod"
      description: "description"
      orderdate: "2000-01-23T04:56:07.000+00:00"
      type: "type"
      mainorderspk: 0
      stringPrice: "stringPrice"
      shipto: "shipto"
  OrderShipmentsTotalModel:
    type: "object"
    properties:
      shipmentNumber:
        type: "string"
      shipmentTotal:
        type: "number"
        format: "double"
      currencyCode:
        type: "string"
      currencySymbol:
        type: "string"
      invoiceLink:
        type: "string"
    example:
      shipmentTotal: 0.8008281904610115
      currencySymbol: "currencySymbol"
      invoiceLink: "invoiceLink"
      shipmentNumber: "shipmentNumber"
      currencyCode: "currencyCode"
  WalletOrderLimit:
    type: "object"
    properties:
      allowedPercent:
        type: "number"
        format: "double"
      hasLimitReached:
        type: "boolean"
      walletAmount:
        type: "number"
        format: "double"
    example:
      allowedPercent: 0.8008281904610115
      hasLimitReached: true
      walletAmount: 6.027456183070403
  OrderConfirmationDetailViewModel:
    type: "object"
    properties:
      mainOrderPK:
        type: "integer"
        format: "int32"
      mainOrdersPK:
        type: "integer"
        format: "int32"
      encOrderNumber:
        type: "string"
      mainPk:
        type: "integer"
        format: "int32"
      mainTypeFK:
        type: "integer"
        format: "int32"
      mainOrderTypeFK:
        type: "integer"
        format: "int32"
      accountCreated:
        type: "boolean"
      countryCode:
        type: "string"
      subTotal:
        type: "number"
        format: "double"
      formattedSubTotal:
        type: "string"
      total:
        type: "number"
        format: "double"
      productTax:
        type: "number"
        format: "double"
      shippingTax:
        type: "number"
        format: "double"
      totalProductTax:
        type: "number"
        format: "double"
      additionalTax:
        type: "number"
        format: "double"
      additionalTaxLabel:
        type: "string"
      usdTotal:
        type: "number"
        format: "double"
      formattedTotal:
        type: "string"
      discount:
        type: "number"
        format: "double"
      formattedDiscount:
        type: "string"
      taxes:
        type: "number"
        format: "double"
      taxLabel:
        type: "string"
      formattedTaxes:
        type: "string"
      formattedProductTax:
        type: "string"
      formattedShippingTax:
        type: "string"
      formattedTotalProductTax:
        type: "string"
      formattedAdditionalTax:
        type: "string"
      formattedOrderProcessingFees:
        type: "string"
      shipping:
        type: "number"
        format: "double"
      formattedShipping:
        type: "string"
      orderProcessingFees:
        type: "number"
        format: "double"
      shippingTypeFK:
        type: "integer"
        format: "int32"
      hasPromo:
        type: "boolean"
      paymentType:
        type: "string"
      ccType:
        type: "string"
      ccNumberLastFour:
        type: "string"
      ruCode:
        type: "string"
      shipState:
        type: "string"
      shipZip:
        type: "string"
      shipCity:
        type: "string"
      shipAddress3:
        type: "string"
      shipAddress2:
        type: "string"
      shipAddress:
        type: "string"
      shipLastName:
        type: "string"
      shipFirstName:
        type: "string"
      shipCountry:
        type: "string"
      billingState:
        type: "string"
      billingZip:
        type: "string"
      billingCity:
        type: "string"
      billingAddress3:
        type: "string"
      billingAddress2:
        type: "string"
      billingAddress:
        type: "string"
      billingFirstName:
        type: "string"
      billingLastName:
        type: "string"
      billingName:
        type: "string"
      billingCountry:
        type: "string"
      phoneNumber:
        type: "string"
      email:
        type: "string"
      status:
        type: "string"
      currencyCode:
        type: "string"
      currencySymbol:
        type: "string"
      currencyRate:
        type: "number"
        format: "double"
      paidStatus:
        type: "boolean"
      paidStatusFk:
        type: "integer"
        format: "int32"
      retailSignup:
        type: "boolean"
      retailStarterKit:
        type: "boolean"
      eventTitle:
        type: "string"
      eventUrl:
        type: "string"
      offerLoyaltyProgram:
        type: "boolean"
      shippingInstructions:
        type: "string"
      deliveryDate:
        type: "string"
        format: "date-time"
      showFISCALink:
        type: "boolean"
      showMicroEntrFISCALink:
        type: "boolean"
      isVolumeBasedRSB:
        type: "boolean"
      deliverySlot:
        type: "string"
      isImportOrder:
        type: "boolean"
      items:
        type: "array"
        items:
          $ref: "#/definitions/OrderItemsViewModel"
      payments:
        type: "array"
        items:
          $ref: "#/definitions/OrderPayments"
      discountDetails:
        type: "array"
        items:
          $ref: "#/definitions/Discount"
      paymentStatus:
        $ref: "#/definitions/PaymentStatus"
      thTaxInvoiceNumber:
        type: "string"
      krGuaranteeNo:
        type: "string"
      showMYeSigDeclaration:
        type: "boolean"
    example:
      showMYeSigDeclaration: true
      hasPromo: true
      discount: 1.2315135367772556
      taxes: 1.0246457001441578
      subTotal: 2.3021358869347655
      usdTotal: 7.386281948385884
      billingAddress2: "billingAddress2"
      billingAddress3: "billingAddress3"
      shipping: 1.4894159098541704
      formattedSubTotal: "formattedSubTotal"
      krGuaranteeNo: "krGuaranteeNo"
      billingFirstName: "billingFirstName"
      billingCountry: "billingCountry"
      mainOrderPK: 0
      mainPk: 1
      billingZip: "billingZip"
      shipZip: "shipZip"
      shippingInstructions: "shippingInstructions"
      mainTypeFK: 5
      isVolumeBasedRSB: true
      formattedShipping: "formattedShipping"
      billingState: "billingState"
      orderProcessingFees: 6.84685269835264
      shipFirstName: "shipFirstName"
      totalProductTax: 2.027123023002322
      ccType: "ccType"
      offerLoyaltyProgram: true
      formattedDiscount: "formattedDiscount"
      billingLastName: "billingLastName"
      phoneNumber: "phoneNumber"
      discountDetails:
      - discountTypeID: 3
        isPoints: true
        discountTotal: 7.04836565559697
        discountType: "discountType"
        formattedTotal: "formattedTotal"
      - discountTypeID: 3
        isPoints: true
        discountTotal: 7.04836565559697
        discountType: "discountType"
        formattedTotal: "formattedTotal"
      deliverySlot: "deliverySlot"
      formattedProductTax: "formattedProductTax"
      shipState: "shipState"
      shipLastName: "shipLastName"
      items:
      - rsb: 7.7403517
        propectinFulfilled: true
        discount: 0.8851374739011653
        childItems:
        - configProductFK: 6
          packageFK: 8
          quantity: 9
          productPK: 9
          imageUrl: "imageUrl"
          mainOrdersFK: 9
          mainOrderItemsFK: 5
          productName: "productName"
        - configProductFK: 6
          packageFK: 8
          quantity: 9
          productPK: 9
          imageUrl: "imageUrl"
          mainOrdersFK: 9
          mainOrderItemsFK: 5
          productName: "productName"
        productName: "productName"
        formattedBasePrice: "formattedBasePrice"
        points: 3.0205796992916243
        isPACItem: true
        formattedLineTotal: "formattedLineTotal"
        imageUrl: "imageUrl"
        mainOrderItemsPK: 6
        isShipped: 6
        sku: "sku"
        formattedRetailTaxablePrice: "formattedRetailTaxablePrice"
        trackingNumber: "trackingNumber"
        wholesalePrice: 3.353193347011243
        sp: 8.969578798196912
        isShippable: true
        basePrice: 3.0937452626664474
        unitPrice: 7.058770351582356
        formattedWholesalePrice: "formattedWholesalePrice"
        quantity: 1
        productPK: 6
        lineTotal: 0.10263654006109402
        priceListFK: 7
        isStarterKit: true
        isPackage: true
        retailTaxablePrice: 6.519180951018382
        productClassificationPK: 2
        formattedDiscount: "formattedDiscount"
        cv: 4.652396432933246
        dateShippedTrack: "2000-01-23T04:56:07.000+00:00"
        formattedRetailPrice: "formattedRetailPrice"
        formattedUnitPrice: "formattedUnitPrice"
        isPACParent: true
        setUpForAS: true
        mainOrderShippingStatusFK: 6
        mainOrdersFK: 3
        retailPrice: 6.704019297950036
        extraFee: 5.944895607614016
      - rsb: 7.7403517
        propectinFulfilled: true
        discount: 0.8851374739011653
        childItems:
        - configProductFK: 6
          packageFK: 8
          quantity: 9
          productPK: 9
          imageUrl: "imageUrl"
          mainOrdersFK: 9
          mainOrderItemsFK: 5
          productName: "productName"
        - configProductFK: 6
          packageFK: 8
          quantity: 9
          productPK: 9
          imageUrl: "imageUrl"
          mainOrdersFK: 9
          mainOrderItemsFK: 5
          productName: "productName"
        productName: "productName"
        formattedBasePrice: "formattedBasePrice"
        points: 3.0205796992916243
        isPACItem: true
        formattedLineTotal: "formattedLineTotal"
        imageUrl: "imageUrl"
        mainOrderItemsPK: 6
        isShipped: 6
        sku: "sku"
        formattedRetailTaxablePrice: "formattedRetailTaxablePrice"
        trackingNumber: "trackingNumber"
        wholesalePrice: 3.353193347011243
        sp: 8.969578798196912
        isShippable: true
        basePrice: 3.0937452626664474
        unitPrice: 7.058770351582356
        formattedWholesalePrice: "formattedWholesalePrice"
        quantity: 1
        productPK: 6
        lineTotal: 0.10263654006109402
        priceListFK: 7
        isStarterKit: true
        isPackage: true
        retailTaxablePrice: 6.519180951018382
        productClassificationPK: 2
        formattedDiscount: "formattedDiscount"
        cv: 4.652396432933246
        dateShippedTrack: "2000-01-23T04:56:07.000+00:00"
        formattedRetailPrice: "formattedRetailPrice"
        formattedUnitPrice: "formattedUnitPrice"
        isPACParent: true
        setUpForAS: true
        mainOrderShippingStatusFK: 6
        mainOrdersFK: 3
        retailPrice: 6.704019297950036
        extraFee: 5.944895607614016
      formattedTotal: "formattedTotal"
      isImportOrder: true
      status: "status"
      thTaxInvoiceNumber: "thTaxInvoiceNumber"
      productTax: 9.301444243932576
      mainOrdersPK: 6
      additionalTaxLabel: "additionalTaxLabel"
      payments:
      - paymentMethodCode: "paymentMethodCode"
        country: "country"
        refsiteurl: "refsiteurl"
        city: "city"
        orderTimeStamp: "2000-01-23T04:56:07.000+00:00"
        refundTotal: 5.507386964179881
        refundTotalFormat: "refundTotalFormat"
        paymentAmount: 4.86315908102884
        paidStatusFK: 8
        paymentMethodPK: 6
        state: "state"
        installmentPayments: 4
        zip: "zip"
        address: "address"
        address3: "address3"
        address2: "address2"
        currencySymbol: "currencySymbol"
        ccType: "ccType"
        paymentAmountFormat: "paymentAmountFormat"
        ccNumberLastFour: "ccNumberLastFour"
        paymentMethod: "paymentMethod"
        acStatus: "acStatus"
        ccExp: "ccExp"
        mainOrdersFK: 7
        currencyCode: "currencyCode"
        paymentTimeStamp: "2000-01-23T04:56:07.000+00:00"
      - paymentMethodCode: "paymentMethodCode"
        country: "country"
        refsiteurl: "refsiteurl"
        city: "city"
        orderTimeStamp: "2000-01-23T04:56:07.000+00:00"
        refundTotal: 5.507386964179881
        refundTotalFormat: "refundTotalFormat"
        paymentAmount: 4.86315908102884
        paidStatusFK: 8
        paymentMethodPK: 6
        state: "state"
        installmentPayments: 4
        zip: "zip"
        address: "address"
        address3: "address3"
        address2: "address2"
        currencySymbol: "currencySymbol"
        ccType: "ccType"
        paymentAmountFormat: "paymentAmountFormat"
        ccNumberLastFour: "ccNumberLastFour"
        paymentMethod: "paymentMethod"
        acStatus: "acStatus"
        ccExp: "ccExp"
        mainOrdersFK: 7
        currencyCode: "currencyCode"
        paymentTimeStamp: "2000-01-23T04:56:07.000+00:00"
      ruCode: "ruCode"
      retailStarterKit: true
      shipCountry: "shipCountry"
      paymentType: "paymentType"
      shippingTax: 3.616076749251911
      total: 7.061401241503109
      paidStatus: true
      eventTitle: "eventTitle"
      formattedTotalProductTax: "formattedTotalProductTax"
      countryCode: "countryCode"
      retailSignup: true
      billingName: "billingName"
      deliveryDate: "2000-01-23T04:56:07.000+00:00"
      email: "email"
      showMicroEntrFISCALink: true
      paymentStatus:
        amountPaid: 5.533258397034986
        balance: 3.2588565619047607
        processedFee: 6.628464275087742
        currencyRatesFK: "currencyRatesFK"
        count: 4
        currencySymbol: "currencySymbol"
        pendingPaid: 0.2025324113236393
        currencyRate: 4.258773108174356
        complete: true
        currencyCode: "currencyCode"
      shippingTypeFK: 7
      shipCity: "shipCity"
      accountCreated: true
      encOrderNumber: "encOrderNumber"
      formattedShippingTax: "formattedShippingTax"
      formattedOrderProcessingFees: "formattedOrderProcessingFees"
      shipAddress2: "shipAddress2"
      eventUrl: "eventUrl"
      shipAddress3: "shipAddress3"
      mainOrderTypeFK: 5
      currencySymbol: "currencySymbol"
      additionalTax: 4.145608029883936
      formattedTaxes: "formattedTaxes"
      paidStatusFk: 4
      taxLabel: "taxLabel"
      shipAddress: "shipAddress"
      ccNumberLastFour: "ccNumberLastFour"
      formattedAdditionalTax: "formattedAdditionalTax"
      showFISCALink: true
      billingAddress: "billingAddress"
      currencyRate: 1.1730742509559433
      currencyCode: "currencyCode"
      billingCity: "billingCity"
  OrderItemsViewModel:
    type: "object"
    properties:
      childItems:
        type: "array"
        items:
          $ref: "#/definitions/OrderItemsConfigViewModel"
      mainOrderItemsPK:
        type: "integer"
        format: "int32"
      mainOrdersFK:
        type: "integer"
        format: "int32"
      productPK:
        type: "integer"
        format: "int32"
      quantity:
        type: "integer"
        format: "int32"
      productName:
        type: "string"
      sku:
        type: "string"
      imageUrl:
        type: "string"
      productClassificationPK:
        type: "integer"
        format: "int32"
      trackingNumber:
        type: "string"
      mainOrderShippingStatusFK:
        type: "integer"
        format: "int32"
      isShipped:
        type: "integer"
        format: "int32"
      extraFee:
        type: "number"
        format: "double"
      propectinFulfilled:
        type: "boolean"
      dateShippedTrack:
        type: "string"
        format: "date-time"
      retailPrice:
        type: "number"
        format: "double"
      formattedRetailPrice:
        type: "string"
      wholesalePrice:
        type: "number"
        format: "double"
      formattedWholesalePrice:
        type: "string"
      basePrice:
        type: "number"
        format: "double"
      formattedBasePrice:
        type: "string"
      priceListFK:
        type: "integer"
        format: "int32"
      discount:
        type: "number"
        format: "double"
      formattedDiscount:
        type: "string"
      unitPrice:
        type: "number"
        format: "double"
      formattedUnitPrice:
        type: "string"
      retailTaxablePrice:
        type: "number"
        format: "double"
      formattedRetailTaxablePrice:
        type: "string"
      lineTotal:
        type: "number"
        format: "double"
      formattedLineTotal:
        type: "string"
      setUpForAS:
        type: "boolean"
      cv:
        type: "number"
        format: "double"
      sp:
        type: "number"
        format: "double"
      rsb:
        type: "number"
        format: "float"
      points:
        type: "number"
        format: "double"
      isShippable:
        type: "boolean"
      isPACItem:
        type: "boolean"
      isPACParent:
        type: "boolean"
      isPackage:
        type: "boolean"
      isStarterKit:
        type: "boolean"
    example:
      rsb: 7.7403517
      propectinFulfilled: true
      discount: 0.8851374739011653
      childItems:
      - configProductFK: 6
        packageFK: 8
        quantity: 9
        productPK: 9
        imageUrl: "imageUrl"
        mainOrdersFK: 9
        mainOrderItemsFK: 5
        productName: "productName"
      - configProductFK: 6
        packageFK: 8
        quantity: 9
        productPK: 9
        imageUrl: "imageUrl"
        mainOrdersFK: 9
        mainOrderItemsFK: 5
        productName: "productName"
      productName: "productName"
      formattedBasePrice: "formattedBasePrice"
      points: 3.0205796992916243
      isPACItem: true
      formattedLineTotal: "formattedLineTotal"
      imageUrl: "imageUrl"
      mainOrderItemsPK: 6
      isShipped: 6
      sku: "sku"
      formattedRetailTaxablePrice: "formattedRetailTaxablePrice"
      trackingNumber: "trackingNumber"
      wholesalePrice: 3.353193347011243
      sp: 8.969578798196912
      isShippable: true
      basePrice: 3.0937452626664474
      unitPrice: 7.058770351582356
      formattedWholesalePrice: "formattedWholesalePrice"
      quantity: 1
      productPK: 6
      lineTotal: 0.10263654006109402
      priceListFK: 7
      isStarterKit: true
      isPackage: true
      retailTaxablePrice: 6.519180951018382
      productClassificationPK: 2
      formattedDiscount: "formattedDiscount"
      cv: 4.652396432933246
      dateShippedTrack: "2000-01-23T04:56:07.000+00:00"
      formattedRetailPrice: "formattedRetailPrice"
      formattedUnitPrice: "formattedUnitPrice"
      isPACParent: true
      setUpForAS: true
      mainOrderShippingStatusFK: 6
      mainOrdersFK: 3
      retailPrice: 6.704019297950036
      extraFee: 5.944895607614016
  Discount:
    type: "object"
    properties:
      discountTypeID:
        type: "integer"
        format: "int32"
      isPoints:
        type: "boolean"
      discountType:
        type: "string"
      formattedTotal:
        type: "string"
      discountTotal:
        type: "number"
        format: "double"
    example:
      discountTypeID: 3
      isPoints: true
      discountTotal: 7.04836565559697
      discountType: "discountType"
      formattedTotal: "formattedTotal"
  PaymentStatus:
    type: "object"
    properties:
      amountPaid:
        type: "number"
        format: "double"
      balance:
        type: "number"
        format: "double"
      complete:
        type: "boolean"
      count:
        type: "integer"
        format: "int32"
      pendingPaid:
        type: "number"
        format: "double"
      processedFee:
        type: "number"
        format: "double"
      currencyRatesFK:
        type: "string"
      currencyCode:
        type: "string"
      currencySymbol:
        type: "string"
      currencyRate:
        type: "number"
        format: "double"
    example:
      amountPaid: 5.533258397034986
      balance: 3.2588565619047607
      processedFee: 6.628464275087742
      currencyRatesFK: "currencyRatesFK"
      count: 4
      currencySymbol: "currencySymbol"
      pendingPaid: 0.2025324113236393
      currencyRate: 4.258773108174356
      complete: true
      currencyCode: "currencyCode"
  OrderItemsConfigViewModel:
    type: "object"
    properties:
      mainOrderItemsFK:
        type: "integer"
        format: "int32"
      mainOrdersFK:
        type: "integer"
        format: "int32"
      productPK:
        type: "integer"
        format: "int32"
      configProductFK:
        type: "integer"
        format: "int32"
      packageFK:
        type: "integer"
        format: "int32"
      productName:
        type: "string"
      imageUrl:
        type: "string"
      quantity:
        type: "integer"
        format: "int32"
    example:
      configProductFK: 6
      packageFK: 8
      quantity: 9
      productPK: 9
      imageUrl: "imageUrl"
      mainOrdersFK: 9
      mainOrderItemsFK: 5
      productName: "productName"
  NewOrderFormModel:
    type: "object"
    required:
    - "countryCode"
    - "mainId"
    properties:
      mainId:
        type: "integer"
        format: "int32"
      mainOrderType:
        type: "integer"
        format: "int32"
      countryCode:
        type: "string"
        minLength: 0
        maxLength: 50
      salesCampaignFK:
        type: "integer"
        format: "int32"
      cartKey:
        type: "string"
        format: "uuid"
    example:
      salesCampaignFK: 1
      cartKey: "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
      countryCode: "countryCode"
      mainId: 0
      mainOrderType: 6
  SignupTokenOrderLimit:
    type: "object"
    properties:
      allowedPercent:
        type: "number"
        format: "double"
      allowedAmount:
        type: "number"
        format: "double"
      hasLimitReached:
        type: "boolean"
      bonusCreditAmount:
        type: "number"
        format: "double"
    example:
      allowedPercent: 0.8008281904610115
      hasLimitReached: true
      allowedAmount: 6.027456183070403
      bonusCreditAmount: 1.4658129805029452
  BraspagAntifraudScirptModel:
    type: "object"
    properties:
      src:
        type: "string"
      style:
        type: "string"
    example:
      src: "src"
      style: "style"
  PayUBankTransferDetails:
    type: "object"
    properties:
      name:
        type: "string"
      value:
        type: "string"
    example:
      name: "name"
      value: "value"
  IsCreditCardRedirectCheckoutModel:
    type: "object"
    properties:
      isCreditCardRedirectCheckout:
        type: "boolean"
      redirectUlr:
        type: "string"
    example:
      isCreditCardRedirectCheckout: true
      redirectUlr: "redirectUlr"
  AvailableCouponModel:
    type: "object"
    properties:
      mainPK:
        type: "integer"
        format: "int32"
      discountCode:
        type: "string"
      maxCouponAmount:
        type: "number"
        format: "double"
      discountPercentage:
        type: "number"
        format: "double"
      productPK:
        type: "integer"
        format: "int32"
      couponDetail:
        type: "string"
    example:
      discountPercentage: 1.4658129805029452
      discountCode: "discountCode"
      productPK: 5
      maxCouponAmount: 6.027456183070403
      couponDetail: "couponDetail"
      mainPK: 0
  PersonalUseQueryModel:
    type: "object"
    properties:
      mainOrdersPK:
        type: "integer"
        format: "int32"
      cartKey:
        type: "string"
  PersonalUseModel:
    type: "object"
    properties:
      isPersonalResaleOn:
        type: "boolean"
      showPersonalUseWarning:
        type: "boolean"
      showPersonalUse:
        type: "boolean"
      hasPackageItemWithFourOrMore:
        type: "boolean"
    example:
      isPersonalResaleOn: true
      showPersonalUse: true
      hasPackageItemWithFourOrMore: true
      showPersonalUseWarning: true
  PaymentOrderProcessingFeesQueryModel:
    type: "object"
    properties:
      countryCode:
        type: "string"
      culture:
        type: "string"
  PaymentOrderProcessingFeesModel:
    type: "object"
    properties:
      minSumInstalments:
        type: "integer"
        format: "int32"
      processingFees:
        type: "array"
        items:
          $ref: "#/definitions/PaymentOrderProcessingFeeModel"
    example:
      processingFees:
      - paymentMethodCode: "paymentMethodCode"
        noOfInstallments: 6
        langText: "langText"
        surchargeRate: 1.4658129805029452
      - paymentMethodCode: "paymentMethodCode"
        noOfInstallments: 6
        langText: "langText"
        surchargeRate: 1.4658129805029452
      minSumInstalments: 0
  PaymentOrderProcessingFeeModel:
    type: "object"
    properties:
      paymentMethodCode:
        type: "string"
      noOfInstallments:
        type: "integer"
        format: "int32"
      surchargeRate:
        type: "number"
        format: "double"
      langText:
        type: "string"
    example:
      paymentMethodCode: "paymentMethodCode"
      noOfInstallments: 6
      langText: "langText"
      surchargeRate: 1.4658129805029452
  CustomsPaymentWarningQueryModel:
    type: "object"
    properties:
      countryCode:
        type: "string"
      culture:
        type: "string"
  CustomsPaymentWarningModel:
    type: "object"
    properties:
      message:
        type: "string"
      messageType:
        type: "string"
    example:
      messageType: "messageType"
      message: "message"
  WalletDiscountQueryModel:
    type: "object"
    properties:
      mainOrdersFK:
        type: "integer"
        format: "int32"
      countryCode:
        type: "string"
  WalletDiscountModel:
    type: "object"
    properties:
      isDiscountAvailable:
        type: "boolean"
      discountAmount:
        type: "number"
        format: "double"
    example:
      discountAmount: 0.8008281904610115
      isDiscountAvailable: true
  SalesCampaignQueryModel:
    type: "object"
    properties:
      cartType:
        type: "string"
      culture:
        type: "string"
      siteUrl:
        type: "string"
  VerifyDiscountCodeFormModel:
    type: "object"
    properties:
      discountCode:
        type: "string"
      mainOrderTypeFk:
        type: "integer"
        format: "int32"
      mainOrderPk:
        type: "integer"
        format: "int32"
  VerifyDiscountCodeReturnModel:
    type: "object"
    properties:
      discountCodeValid:
        type: "boolean"
      discountType:
        type: "integer"
        format: "int32"
      discountCodePercent:
        type: "number"
        format: "double"
      maxDiscountAmount:
        type: "number"
        format: "double"
      eventSystemTicketId:
        type: "string"
    example:
      discountCodeValid: true
      maxDiscountAmount: 1.4658129805029452
      discountType: 0
      discountCodePercent: 6.027456183070403
      eventSystemTicketId: "eventSystemTicketId"
  GetCreditCardTypesRequestModel:
    type: "object"
    properties:
      mainOrderTypeFK:
        type: "integer"
        format: "int32"
        description: "Main Order Type PK for the request"
      mainOrderPk:
        type: "integer"
        format: "int32"
        description: "Main Order PK for the request"
    description: "Credit Card Types request model"
  QRCodePaymentStatusQueryModel:
    type: "object"
    properties:
      mainOrdersFK:
        type: "integer"
        format: "int32"
      paymentMethodCode:
        type: "string"
      paymentReference:
        type: "string"
  PaymentQueryModel:
    type: "object"
    properties:
      paidStatusFK:
        type: "integer"
        format: "int32"
      paymentStartDate:
        type: "string"
        format: "date-time"
      paymentEndDate:
        type: "string"
        format: "date-time"
      orderStartDate:
        type: "string"
        format: "date-time"
      orderEndDate:
        type: "string"
        format: "date-time"
      paymentMethodCode:
        type: "string"
      pageSize:
        type: "integer"
        format: "int32"
      page:
        type: "integer"
        format: "int32"
  PaymentSimpleViewModel:
    type: "object"
    required:
    - "payments"
    - "totalCount"
    properties:
      totalCount:
        type: "integer"
        format: "int32"
      payments:
        type: "array"
        items:
          $ref: "#/definitions/OrderPayments"
    example:
      payments:
      - paymentMethodCode: "paymentMethodCode"
        country: "country"
        refsiteurl: "refsiteurl"
        city: "city"
        orderTimeStamp: "2000-01-23T04:56:07.000+00:00"
        refundTotal: 5.507386964179881
        refundTotalFormat: "refundTotalFormat"
        paymentAmount: 4.86315908102884
        paidStatusFK: 8
        paymentMethodPK: 6
        state: "state"
        installmentPayments: 4
        zip: "zip"
        address: "address"
        address3: "address3"
        address2: "address2"
        currencySymbol: "currencySymbol"
        ccType: "ccType"
        paymentAmountFormat: "paymentAmountFormat"
        ccNumberLastFour: "ccNumberLastFour"
        paymentMethod: "paymentMethod"
        acStatus: "acStatus"
        ccExp: "ccExp"
        mainOrdersFK: 7
        currencyCode: "currencyCode"
        paymentTimeStamp: "2000-01-23T04:56:07.000+00:00"
      - paymentMethodCode: "paymentMethodCode"
        country: "country"
        refsiteurl: "refsiteurl"
        city: "city"
        orderTimeStamp: "2000-01-23T04:56:07.000+00:00"
        refundTotal: 5.507386964179881
        refundTotalFormat: "refundTotalFormat"
        paymentAmount: 4.86315908102884
        paidStatusFK: 8
        paymentMethodPK: 6
        state: "state"
        installmentPayments: 4
        zip: "zip"
        address: "address"
        address3: "address3"
        address2: "address2"
        currencySymbol: "currencySymbol"
        ccType: "ccType"
        paymentAmountFormat: "paymentAmountFormat"
        ccNumberLastFour: "ccNumberLastFour"
        paymentMethod: "paymentMethod"
        acStatus: "acStatus"
        ccExp: "ccExp"
        mainOrdersFK: 7
        currencyCode: "currencyCode"
        paymentTimeStamp: "2000-01-23T04:56:07.000+00:00"
      totalCount: 0
  RMAsSearchQueryParams:
    type: "object"
    properties:
      rmaNumber:
        type: "integer"
        format: "int32"
      orderNumber:
        type: "integer"
        format: "int32"
      customerSiteurl:
        type: "string"
      customerName:
        type: "string"
      issuedBy:
        type: "string"
      issuedDate:
        type: "string"
        format: "date-time"
      jnsDepartment:
        type: "string"
      statusId:
        type: "string"
      recivedDate:
        type: "string"
        format: "date-time"
      refundDate:
        type: "string"
        format: "date-time"
      offset:
        type: "integer"
        format: "int32"
      limit:
        type: "integer"
        format: "int32"
      orderBy:
        type: "string"
  RMAUpdateQueryModel:
    type: "object"
    properties:
      rmaid:
        type: "integer"
        format: "int32"
      statusID:
        type: "integer"
        format: "int32"
      reasonID:
        type: "integer"
        format: "int32"
  RMAFormModel:
    type: "object"
    properties:
      customerSiteUrl:
        type: "string"
      orderFK:
        type: "integer"
        format: "int32"
      reasonID:
        type: "integer"
        format: "int32"
      rmaProducts:
        type: "array"
        items:
          $ref: "#/definitions/RMAProducts"
  RMAProducts:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      productFK:
        type: "integer"
        format: "int32"
      mainOrderFK:
        type: "integer"
        format: "int32"
      rmA_Number:
        type: "integer"
        format: "int32"
      proratedProductPrice:
        type: "number"
        format: "double"
      productName:
        type: "string"
      orderQty:
        type: "integer"
        format: "int32"
      toBeReturnedQty:
        type: "integer"
        format: "int32"
  MainOrderQueryModel:
    type: "object"
    properties:
      mainId:
        type: "string"
      mainSiteUrl:
        type: "string"
      orderNumber:
        type: "string"
      shipmentNumber:
        type: "string"
      trackingNumber:
        type: "string"
      getCustomerOrders:
        type: "boolean"
      getAbandonedOrders:
        type: "boolean"
      getEnrollerOrders:
        type: "boolean"
      getDownlineOrders:
        type: "boolean"
      paidStatus:
        type: "boolean"
      startDate:
        type: "string"
        format: "date-time"
      endDate:
        type: "string"
        format: "date-time"
      orderType:
        type: "string"
      offset:
        type: "integer"
        format: "int32"
      limit:
        type: "integer"
        format: "int32"
      orderBy:
        type: "string"
      productPKs:
        type: "string"
      isRefunded:
        type: "boolean"
      countryCode:
        type: "string"
      salesCampaignPK:
        type: "integer"
        format: "int32"
      shippingStatus:
        type: "string"
      shouldIncludeShippingDetail:
        type: "boolean"
      shouldIncludeOrderItems:
        type: "boolean"
      shouldIncludePayments:
        type: "boolean"
      shouldCheckIfPrepaid:
        type: "boolean"
      orderLevel:
        type: "string"
      getDataToExport:
        type: "boolean"
      customerOrdersMainId:
        type: "integer"
        format: "int32"
      weChatOrderNumber:
        type: "string"
      memberID:
        type: "string"
  MainOrderSimpleViewModel:
    type: "object"
    required:
    - "orders"
    - "totalCount"
    properties:
      totalCount:
        type: "integer"
        format: "int32"
      orders:
        type: "array"
        items:
          $ref: "#/definitions/MainOrderSimpleModel"
    example:
      orders:
      - orderType: "orderType"
        markedPaidDate: "2000-01-23T04:56:07.000+00:00"
        siteURL: "siteURL"
        taxes: 7.386281948385884
        discount: 5.025004791520295
        showInvoice: true
        subTotal: 9.301444243932576
        convDiscount: 9.965781217890562
        krGuaranteeNo: "krGuaranteeNo"
        orderTypeValue: "orderTypeValue"
        isPA: true
        orderProcessingFees: 1.1730742509559433
        isPB: true
        shipFirstName: "shipFirstName"
        totalProductTax: 1.4894159098541704
        phone: "phone"
        hasCommercialInvoice: true
        hasCreditNote: true
        mainFK: 1
        isCC: true
        orderDate: "2000-01-23T04:56:07.000+00:00"
        shipLastName: "shipLastName"
        productTax: 1.2315135367772556
        convTotal: 7.061401241503109
        mainOrdersPK: 6
        additionalTaxLabel: "additionalTaxLabel"
        payments:
        - paymentMethodCode: "paymentMethodCode"
          country: "country"
          refsiteurl: "refsiteurl"
          city: "city"
          orderTimeStamp: "2000-01-23T04:56:07.000+00:00"
          refundTotal: 5.507386964179881
          refundTotalFormat: "refundTotalFormat"
          paymentAmount: 4.86315908102884
          paidStatusFK: 8
          paymentMethodPK: 6
          state: "state"
          installmentPayments: 4
          zip: "zip"
          address: "address"
          address3: "address3"
          address2: "address2"
          currencySymbol: "currencySymbol"
          ccType: "ccType"
          paymentAmountFormat: "paymentAmountFormat"
          ccNumberLastFour: "ccNumberLastFour"
          paymentMethod: "paymentMethod"
          acStatus: "acStatus"
          ccExp: "ccExp"
          mainOrdersFK: 7
          currencyCode: "currencyCode"
          paymentTimeStamp: "2000-01-23T04:56:07.000+00:00"
        - paymentMethodCode: "paymentMethodCode"
          country: "country"
          refsiteurl: "refsiteurl"
          city: "city"
          orderTimeStamp: "2000-01-23T04:56:07.000+00:00"
          refundTotal: 5.507386964179881
          refundTotalFormat: "refundTotalFormat"
          paymentAmount: 4.86315908102884
          paidStatusFK: 8
          paymentMethodPK: 6
          state: "state"
          installmentPayments: 4
          zip: "zip"
          address: "address"
          address3: "address3"
          address2: "address2"
          currencySymbol: "currencySymbol"
          ccType: "ccType"
          paymentAmountFormat: "paymentAmountFormat"
          ccNumberLastFour: "ccNumberLastFour"
          paymentMethod: "paymentMethod"
          acStatus: "acStatus"
          ccExp: "ccExp"
          mainOrdersFK: 7
          currencyCode: "currencyCode"
          paymentTimeStamp: "2000-01-23T04:56:07.000+00:00"
        convShipTotal: 4.145608029883936
        shipCountry: "shipCountry"
        orderItems:
        - shippingCompany: "shippingCompany"
          shippingDate: "2000-01-23T04:56:07.000+00:00"
          usProduct: "usProduct"
          mainOrdersPK: 7
          taxes: 1.041444916118296
          productsCategoryFK: 3
          shippingStatus: "shippingStatus"
          price: 0.2025324113236393
          imageUrl: "imageUrl"
          mainOrderItemsPK: 8
          convertedPriceFormat: "convertedPriceFormat"
          trackingNumber: "trackingNumber"
          sp: 0.5199002018724985
          isShippable: true
          unitPrice: 4.078845849666752
          product: "product"
          taxCodeFK: "taxCodeFK"
          quantity: 7
          productPK: 3
          vat: 4.258773108174356
          currencySymbol: "currencySymbol"
          isTaxable: true
          convertedPrice: 6.628464275087742
          shipTotal: 4.678947989005849
          productCode: "productCode"
          cv: 9.702963800023566
          mainFK: 3
          paymentMethod: "paymentMethod"
          orderCode: "orderCode"
          setUpForAS: true
          currencyRate: 5.533258397034986
          taxableTotal: 9.132027271330688
          retailPrice: 7.260521264802104
          currencyCode: "currencyCode"
          productPrice: 0.8774076871421566
        - shippingCompany: "shippingCompany"
          shippingDate: "2000-01-23T04:56:07.000+00:00"
          usProduct: "usProduct"
          mainOrdersPK: 7
          taxes: 1.041444916118296
          productsCategoryFK: 3
          shippingStatus: "shippingStatus"
          price: 0.2025324113236393
          imageUrl: "imageUrl"
          mainOrderItemsPK: 8
          convertedPriceFormat: "convertedPriceFormat"
          trackingNumber: "trackingNumber"
          sp: 0.5199002018724985
          isShippable: true
          unitPrice: 4.078845849666752
          product: "product"
          taxCodeFK: "taxCodeFK"
          quantity: 7
          productPK: 3
          vat: 4.258773108174356
          currencySymbol: "currencySymbol"
          isTaxable: true
          convertedPrice: 6.628464275087742
          shipTotal: 4.678947989005849
          productCode: "productCode"
          cv: 9.702963800023566
          mainFK: 3
          paymentMethod: "paymentMethod"
          orderCode: "orderCode"
          setUpForAS: true
          currencyRate: 5.533258397034986
          taxableTotal: 9.132027271330688
          retailPrice: 7.260521264802104
          currencyCode: "currencyCode"
          productPrice: 0.8774076871421566
        shippingStatus: "shippingStatus"
        shippingTax: 1.0246457001441578
        paidStatus: true
        total: 2.3021358869347655
        voucherURL: "voucherURL"
        shippingDetails:
        - country: "country"
          trackingLink: "trackingLink"
          address: "address"
          city: "city"
          shippingChartTypesPK: 0
          shipCompany: "shipCompany"
          mainOrdersPK: "mainOrdersPK"
          shippingType: "shippingType"
          upsCode: "upsCode"
          shipCountry: "shipCountry"
          shipFirstName: "shipFirstName"
          phone: "phone"
          company: "company"
          state: "state"
          trackingNumber: "trackingNumber"
          orderDate: "2000-01-23T04:56:07.000+00:00"
          shipLastName: "shipLastName"
          orderPackagingInfoPK: 4
          email: "email"
          status: "status"
        - country: "country"
          trackingLink: "trackingLink"
          address: "address"
          city: "city"
          shippingChartTypesPK: 0
          shipCompany: "shipCompany"
          mainOrdersPK: "mainOrdersPK"
          shippingType: "shippingType"
          upsCode: "upsCode"
          shipCountry: "shipCountry"
          shipFirstName: "shipFirstName"
          phone: "phone"
          company: "company"
          state: "state"
          trackingNumber: "trackingNumber"
          orderDate: "2000-01-23T04:56:07.000+00:00"
          shipLastName: "shipLastName"
          orderPackagingInfoPK: 4
          email: "email"
          status: "status"
        hasTaxInvoice: true
        convTotalFormat: "convTotalFormat"
        paidstatusfk: 9
        convSubtotal: 3.616076749251911
        weChatOrderNumber: "weChatOrderNumber"
        deliveryDate: "2000-01-23T04:56:07.000+00:00"
        paidStatusValue: "paidStatusValue"
        email: "email"
        refundAmount: 9.369310271410669
        isShippingPending: true
        encOrderNumber: "encOrderNumber"
        quantity: 5
        orderShippingStatus: "orderShippingStatus"
        isPrepaidOrder: true
        mainOrderTypeFK: 5
        convOrderProcessingFees: 4.965218492984954
        currencySymbol: "currencySymbol"
        additionalTax: 6.84685269835264
        convRefund: 6.683562403749608
        taxLabel: "taxLabel"
        shipTotal: 2.027123023002322
        salesCampaignFK: 8
        convTaxes: 7.457744773683766
        showOrderInvoice: true
        finalOrderType: "finalOrderType"
        currencyCode: "currencyCode"
        memberID: "memberID"
      - orderType: "orderType"
        markedPaidDate: "2000-01-23T04:56:07.000+00:00"
        siteURL: "siteURL"
        taxes: 7.386281948385884
        discount: 5.025004791520295
        showInvoice: true
        subTotal: 9.301444243932576
        convDiscount: 9.965781217890562
        krGuaranteeNo: "krGuaranteeNo"
        orderTypeValue: "orderTypeValue"
        isPA: true
        orderProcessingFees: 1.1730742509559433
        isPB: true
        shipFirstName: "shipFirstName"
        totalProductTax: 1.4894159098541704
        phone: "phone"
        hasCommercialInvoice: true
        hasCreditNote: true
        mainFK: 1
        isCC: true
        orderDate: "2000-01-23T04:56:07.000+00:00"
        shipLastName: "shipLastName"
        productTax: 1.2315135367772556
        convTotal: 7.061401241503109
        mainOrdersPK: 6
        additionalTaxLabel: "additionalTaxLabel"
        payments:
        - paymentMethodCode: "paymentMethodCode"
          country: "country"
          refsiteurl: "refsiteurl"
          city: "city"
          orderTimeStamp: "2000-01-23T04:56:07.000+00:00"
          refundTotal: 5.507386964179881
          refundTotalFormat: "refundTotalFormat"
          paymentAmount: 4.86315908102884
          paidStatusFK: 8
          paymentMethodPK: 6
          state: "state"
          installmentPayments: 4
          zip: "zip"
          address: "address"
          address3: "address3"
          address2: "address2"
          currencySymbol: "currencySymbol"
          ccType: "ccType"
          paymentAmountFormat: "paymentAmountFormat"
          ccNumberLastFour: "ccNumberLastFour"
          paymentMethod: "paymentMethod"
          acStatus: "acStatus"
          ccExp: "ccExp"
          mainOrdersFK: 7
          currencyCode: "currencyCode"
          paymentTimeStamp: "2000-01-23T04:56:07.000+00:00"
        - paymentMethodCode: "paymentMethodCode"
          country: "country"
          refsiteurl: "refsiteurl"
          city: "city"
          orderTimeStamp: "2000-01-23T04:56:07.000+00:00"
          refundTotal: 5.507386964179881
          refundTotalFormat: "refundTotalFormat"
          paymentAmount: 4.86315908102884
          paidStatusFK: 8
          paymentMethodPK: 6
          state: "state"
          installmentPayments: 4
          zip: "zip"
          address: "address"
          address3: "address3"
          address2: "address2"
          currencySymbol: "currencySymbol"
          ccType: "ccType"
          paymentAmountFormat: "paymentAmountFormat"
          ccNumberLastFour: "ccNumberLastFour"
          paymentMethod: "paymentMethod"
          acStatus: "acStatus"
          ccExp: "ccExp"
          mainOrdersFK: 7
          currencyCode: "currencyCode"
          paymentTimeStamp: "2000-01-23T04:56:07.000+00:00"
        convShipTotal: 4.145608029883936
        shipCountry: "shipCountry"
        orderItems:
        - shippingCompany: "shippingCompany"
          shippingDate: "2000-01-23T04:56:07.000+00:00"
          usProduct: "usProduct"
          mainOrdersPK: 7
          taxes: 1.041444916118296
          productsCategoryFK: 3
          shippingStatus: "shippingStatus"
          price: 0.2025324113236393
          imageUrl: "imageUrl"
          mainOrderItemsPK: 8
          convertedPriceFormat: "convertedPriceFormat"
          trackingNumber: "trackingNumber"
          sp: 0.5199002018724985
          isShippable: true
          unitPrice: 4.078845849666752
          product: "product"
          taxCodeFK: "taxCodeFK"
          quantity: 7
          productPK: 3
          vat: 4.258773108174356
          currencySymbol: "currencySymbol"
          isTaxable: true
          convertedPrice: 6.628464275087742
          shipTotal: 4.678947989005849
          productCode: "productCode"
          cv: 9.702963800023566
          mainFK: 3
          paymentMethod: "paymentMethod"
          orderCode: "orderCode"
          setUpForAS: true
          currencyRate: 5.533258397034986
          taxableTotal: 9.132027271330688
          retailPrice: 7.260521264802104
          currencyCode: "currencyCode"
          productPrice: 0.8774076871421566
        - shippingCompany: "shippingCompany"
          shippingDate: "2000-01-23T04:56:07.000+00:00"
          usProduct: "usProduct"
          mainOrdersPK: 7
          taxes: 1.041444916118296
          productsCategoryFK: 3
          shippingStatus: "shippingStatus"
          price: 0.2025324113236393
          imageUrl: "imageUrl"
          mainOrderItemsPK: 8
          convertedPriceFormat: "convertedPriceFormat"
          trackingNumber: "trackingNumber"
          sp: 0.5199002018724985
          isShippable: true
          unitPrice: 4.078845849666752
          product: "product"
          taxCodeFK: "taxCodeFK"
          quantity: 7
          productPK: 3
          vat: 4.258773108174356
          currencySymbol: "currencySymbol"
          isTaxable: true
          convertedPrice: 6.628464275087742
          shipTotal: 4.678947989005849
          productCode: "productCode"
          cv: 9.702963800023566
          mainFK: 3
          paymentMethod: "paymentMethod"
          orderCode: "orderCode"
          setUpForAS: true
          currencyRate: 5.533258397034986
          taxableTotal: 9.132027271330688
          retailPrice: 7.260521264802104
          currencyCode: "currencyCode"
          productPrice: 0.8774076871421566
        shippingStatus: "shippingStatus"
        shippingTax: 1.0246457001441578
        paidStatus: true
        total: 2.3021358869347655
        voucherURL: "voucherURL"
        shippingDetails:
        - country: "country"
          trackingLink: "trackingLink"
          address: "address"
          city: "city"
          shippingChartTypesPK: 0
          shipCompany: "shipCompany"
          mainOrdersPK: "mainOrdersPK"
          shippingType: "shippingType"
          upsCode: "upsCode"
          shipCountry: "shipCountry"
          shipFirstName: "shipFirstName"
          phone: "phone"
          company: "company"
          state: "state"
          trackingNumber: "trackingNumber"
          orderDate: "2000-01-23T04:56:07.000+00:00"
          shipLastName: "shipLastName"
          orderPackagingInfoPK: 4
          email: "email"
          status: "status"
        - country: "country"
          trackingLink: "trackingLink"
          address: "address"
          city: "city"
          shippingChartTypesPK: 0
          shipCompany: "shipCompany"
          mainOrdersPK: "mainOrdersPK"
          shippingType: "shippingType"
          upsCode: "upsCode"
          shipCountry: "shipCountry"
          shipFirstName: "shipFirstName"
          phone: "phone"
          company: "company"
          state: "state"
          trackingNumber: "trackingNumber"
          orderDate: "2000-01-23T04:56:07.000+00:00"
          shipLastName: "shipLastName"
          orderPackagingInfoPK: 4
          email: "email"
          status: "status"
        hasTaxInvoice: true
        convTotalFormat: "convTotalFormat"
        paidstatusfk: 9
        convSubtotal: 3.616076749251911
        weChatOrderNumber: "weChatOrderNumber"
        deliveryDate: "2000-01-23T04:56:07.000+00:00"
        paidStatusValue: "paidStatusValue"
        email: "email"
        refundAmount: 9.369310271410669
        isShippingPending: true
        encOrderNumber: "encOrderNumber"
        quantity: 5
        orderShippingStatus: "orderShippingStatus"
        isPrepaidOrder: true
        mainOrderTypeFK: 5
        convOrderProcessingFees: 4.965218492984954
        currencySymbol: "currencySymbol"
        additionalTax: 6.84685269835264
        convRefund: 6.683562403749608
        taxLabel: "taxLabel"
        shipTotal: 2.027123023002322
        salesCampaignFK: 8
        convTaxes: 7.457744773683766
        showOrderInvoice: true
        finalOrderType: "finalOrderType"
        currencyCode: "currencyCode"
        memberID: "memberID"
      totalCount: 0
  MainOrderSimpleModel:
    type: "object"
    required:
    - "currencySymbol"
    - "hasCommercialInvoice"
    - "hasCreditNote"
    - "hasTaxInvoice"
    - "isCC"
    - "isPA"
    - "isPB"
    - "mainOrdersPK"
    - "orderDate"
    - "orderType"
    - "paidStatus"
    - "siteURL"
    properties:
      orderDate:
        type: "string"
        format: "date-time"
      mainOrdersPK:
        type: "integer"
        format: "int32"
      orderType:
        type: "string"
      finalOrderType:
        type: "string"
      siteURL:
        type: "string"
      encOrderNumber:
        type: "string"
      currencySymbol:
        type: "string"
      currencyCode:
        type: "string"
      paidStatus:
        type: "boolean"
      hasTaxInvoice:
        type: "boolean"
      hasCommercialInvoice:
        type: "boolean"
      hasCreditNote:
        type: "boolean"
      isShippingPending:
        type: "boolean"
      isPB:
        type: "boolean"
      isPA:
        type: "boolean"
      isCC:
        type: "boolean"
      mainFK:
        type: "integer"
        format: "int32"
      mainOrderTypeFK:
        type: "integer"
        format: "int32"
      voucherURL:
        type: "string"
      shipCountry:
        type: "string"
      shippingStatus:
        type: "string"
      orderShippingStatus:
        type: "string"
      orderTypeValue:
        type: "string"
      paidStatusValue:
        type: "string"
      quantity:
        type: "integer"
        format: "int32"
      email:
        type: "string"
      phone:
        type: "string"
      shipFirstName:
        type: "string"
      shipLastName:
        type: "string"
      markedPaidDate:
        type: "string"
        format: "date-time"
      total:
        type: "number"
        format: "double"
      convTotal:
        type: "number"
        format: "double"
      convTotalFormat:
        type: "string"
      subTotal:
        type: "number"
        format: "double"
      convSubtotal:
        type: "number"
        format: "double"
      shipTotal:
        type: "number"
        format: "double"
      convShipTotal:
        type: "number"
        format: "double"
      taxes:
        type: "number"
        format: "double"
      taxLabel:
        type: "string"
      productTax:
        type: "number"
        format: "double"
      shippingTax:
        type: "number"
        format: "double"
      totalProductTax:
        type: "number"
        format: "double"
      additionalTaxLabel:
        type: "string"
      additionalTax:
        type: "number"
        format: "double"
      convTaxes:
        type: "number"
        format: "double"
      orderProcessingFees:
        type: "number"
        format: "double"
      convOrderProcessingFees:
        type: "number"
        format: "double"
      discount:
        type: "number"
        format: "double"
      convDiscount:
        type: "number"
        format: "double"
      refundAmount:
        type: "number"
        format: "double"
      convRefund:
        type: "number"
        format: "double"
      salesCampaignFK:
        type: "integer"
        format: "int32"
      paidstatusfk:
        type: "integer"
        format: "int32"
      deliveryDate:
        type: "string"
        format: "date-time"
      shippingDetails:
        type: "array"
        items:
          $ref: "#/definitions/MainOrderTrackingModel"
      orderItems:
        type: "array"
        items:
          $ref: "#/definitions/MainOrderItemModel"
      payments:
        type: "array"
        items:
          $ref: "#/definitions/OrderPayments"
      isPrepaidOrder:
        type: "boolean"
      showInvoice:
        type: "boolean"
      showOrderInvoice:
        type: "boolean"
      krGuaranteeNo:
        type: "string"
      weChatOrderNumber:
        type: "string"
      memberID:
        type: "string"
    example:
      orderType: "orderType"
      markedPaidDate: "2000-01-23T04:56:07.000+00:00"
      siteURL: "siteURL"
      taxes: 7.386281948385884
      discount: 5.025004791520295
      showInvoice: true
      subTotal: 9.301444243932576
      convDiscount: 9.965781217890562
      krGuaranteeNo: "krGuaranteeNo"
      orderTypeValue: "orderTypeValue"
      isPA: true
      orderProcessingFees: 1.1730742509559433
      isPB: true
      shipFirstName: "shipFirstName"
      totalProductTax: 1.4894159098541704
      phone: "phone"
      hasCommercialInvoice: true
      hasCreditNote: true
      mainFK: 1
      isCC: true
      orderDate: "2000-01-23T04:56:07.000+00:00"
      shipLastName: "shipLastName"
      productTax: 1.2315135367772556
      convTotal: 7.061401241503109
      mainOrdersPK: 6
      additionalTaxLabel: "additionalTaxLabel"
      payments:
      - paymentMethodCode: "paymentMethodCode"
        country: "country"
        refsiteurl: "refsiteurl"
        city: "city"
        orderTimeStamp: "2000-01-23T04:56:07.000+00:00"
        refundTotal: 5.507386964179881
        refundTotalFormat: "refundTotalFormat"
        paymentAmount: 4.86315908102884
        paidStatusFK: 8
        paymentMethodPK: 6
        state: "state"
        installmentPayments: 4
        zip: "zip"
        address: "address"
        address3: "address3"
        address2: "address2"
        currencySymbol: "currencySymbol"
        ccType: "ccType"
        paymentAmountFormat: "paymentAmountFormat"
        ccNumberLastFour: "ccNumberLastFour"
        paymentMethod: "paymentMethod"
        acStatus: "acStatus"
        ccExp: "ccExp"
        mainOrdersFK: 7
        currencyCode: "currencyCode"
        paymentTimeStamp: "2000-01-23T04:56:07.000+00:00"
      - paymentMethodCode: "paymentMethodCode"
        country: "country"
        refsiteurl: "refsiteurl"
        city: "city"
        orderTimeStamp: "2000-01-23T04:56:07.000+00:00"
        refundTotal: 5.507386964179881
        refundTotalFormat: "refundTotalFormat"
        paymentAmount: 4.86315908102884
        paidStatusFK: 8
        paymentMethodPK: 6
        state: "state"
        installmentPayments: 4
        zip: "zip"
        address: "address"
        address3: "address3"
        address2: "address2"
        currencySymbol: "currencySymbol"
        ccType: "ccType"
        paymentAmountFormat: "paymentAmountFormat"
        ccNumberLastFour: "ccNumberLastFour"
        paymentMethod: "paymentMethod"
        acStatus: "acStatus"
        ccExp: "ccExp"
        mainOrdersFK: 7
        currencyCode: "currencyCode"
        paymentTimeStamp: "2000-01-23T04:56:07.000+00:00"
      convShipTotal: 4.145608029883936
      shipCountry: "shipCountry"
      orderItems:
      - shippingCompany: "shippingCompany"
        shippingDate: "2000-01-23T04:56:07.000+00:00"
        usProduct: "usProduct"
        mainOrdersPK: 7
        taxes: 1.041444916118296
        productsCategoryFK: 3
        shippingStatus: "shippingStatus"
        price: 0.2025324113236393
        imageUrl: "imageUrl"
        mainOrderItemsPK: 8
        convertedPriceFormat: "convertedPriceFormat"
        trackingNumber: "trackingNumber"
        sp: 0.5199002018724985
        isShippable: true
        unitPrice: 4.078845849666752
        product: "product"
        taxCodeFK: "taxCodeFK"
        quantity: 7
        productPK: 3
        vat: 4.258773108174356
        currencySymbol: "currencySymbol"
        isTaxable: true
        convertedPrice: 6.628464275087742
        shipTotal: 4.678947989005849
        productCode: "productCode"
        cv: 9.702963800023566
        mainFK: 3
        paymentMethod: "paymentMethod"
        orderCode: "orderCode"
        setUpForAS: true
        currencyRate: 5.533258397034986
        taxableTotal: 9.132027271330688
        retailPrice: 7.260521264802104
        currencyCode: "currencyCode"
        productPrice: 0.8774076871421566
      - shippingCompany: "shippingCompany"
        shippingDate: "2000-01-23T04:56:07.000+00:00"
        usProduct: "usProduct"
        mainOrdersPK: 7
        taxes: 1.041444916118296
        productsCategoryFK: 3
        shippingStatus: "shippingStatus"
        price: 0.2025324113236393
        imageUrl: "imageUrl"
        mainOrderItemsPK: 8
        convertedPriceFormat: "convertedPriceFormat"
        trackingNumber: "trackingNumber"
        sp: 0.5199002018724985
        isShippable: true
        unitPrice: 4.078845849666752
        product: "product"
        taxCodeFK: "taxCodeFK"
        quantity: 7
        productPK: 3
        vat: 4.258773108174356
        currencySymbol: "currencySymbol"
        isTaxable: true
        convertedPrice: 6.628464275087742
        shipTotal: 4.678947989005849
        productCode: "productCode"
        cv: 9.702963800023566
        mainFK: 3
        paymentMethod: "paymentMethod"
        orderCode: "orderCode"
        setUpForAS: true
        currencyRate: 5.533258397034986
        taxableTotal: 9.132027271330688
        retailPrice: 7.260521264802104
        currencyCode: "currencyCode"
        productPrice: 0.8774076871421566
      shippingStatus: "shippingStatus"
      shippingTax: 1.0246457001441578
      paidStatus: true
      total: 2.3021358869347655
      voucherURL: "voucherURL"
      shippingDetails:
      - country: "country"
        trackingLink: "trackingLink"
        address: "address"
        city: "city"
        shippingChartTypesPK: 0
        shipCompany: "shipCompany"
        mainOrdersPK: "mainOrdersPK"
        shippingType: "shippingType"
        upsCode: "upsCode"
        shipCountry: "shipCountry"
        shipFirstName: "shipFirstName"
        phone: "phone"
        company: "company"
        state: "state"
        trackingNumber: "trackingNumber"
        orderDate: "2000-01-23T04:56:07.000+00:00"
        shipLastName: "shipLastName"
        orderPackagingInfoPK: 4
        email: "email"
        status: "status"
      - country: "country"
        trackingLink: "trackingLink"
        address: "address"
        city: "city"
        shippingChartTypesPK: 0
        shipCompany: "shipCompany"
        mainOrdersPK: "mainOrdersPK"
        shippingType: "shippingType"
        upsCode: "upsCode"
        shipCountry: "shipCountry"
        shipFirstName: "shipFirstName"
        phone: "phone"
        company: "company"
        state: "state"
        trackingNumber: "trackingNumber"
        orderDate: "2000-01-23T04:56:07.000+00:00"
        shipLastName: "shipLastName"
        orderPackagingInfoPK: 4
        email: "email"
        status: "status"
      hasTaxInvoice: true
      convTotalFormat: "convTotalFormat"
      paidstatusfk: 9
      convSubtotal: 3.616076749251911
      weChatOrderNumber: "weChatOrderNumber"
      deliveryDate: "2000-01-23T04:56:07.000+00:00"
      paidStatusValue: "paidStatusValue"
      email: "email"
      refundAmount: 9.369310271410669
      isShippingPending: true
      encOrderNumber: "encOrderNumber"
      quantity: 5
      orderShippingStatus: "orderShippingStatus"
      isPrepaidOrder: true
      mainOrderTypeFK: 5
      convOrderProcessingFees: 4.965218492984954
      currencySymbol: "currencySymbol"
      additionalTax: 6.84685269835264
      convRefund: 6.683562403749608
      taxLabel: "taxLabel"
      shipTotal: 2.027123023002322
      salesCampaignFK: 8
      convTaxes: 7.457744773683766
      showOrderInvoice: true
      finalOrderType: "finalOrderType"
      currencyCode: "currencyCode"
      memberID: "memberID"
  OrderMainTypeFormModel:
    type: "object"
    properties:
      mainOrderPk:
        type: "integer"
        format: "int32"
      mainOrderTypeFk:
        type: "integer"
        format: "int32"
    example:
      mainOrderTypeFk: 6
      mainOrderPk: 0
  SetShippingFormModel:
    type: "object"
    properties:
      orderPk:
        type: "integer"
        format: "int32"
      chartTypeFk:
        type: "integer"
        format: "int32"
      signatureRequired:
        type: "boolean"
      cartKey:
        type: "string"
        format: "uuid"
    example:
      cartKey: "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
      orderPk: 0
      signatureRequired: true
      chartTypeFk: 6
  UpdateOrderShipAddressFormModel:
    type: "object"
    required:
    - "address1"
    - "city"
    - "country"
    - "firstName"
    - "lastName"
    - "state"
    properties:
      mainOrdersFK:
        type: "integer"
        format: "int32"
      firstName:
        type: "string"
        minLength: 0
        maxLength: 50
      lastName:
        type: "string"
        minLength: 0
        maxLength: 50
      address1:
        type: "string"
        minLength: 0
        maxLength: 250
      address2:
        type: "string"
        minLength: 0
        maxLength: 250
      address3:
        type: "string"
        minLength: 0
        maxLength: 250
      city:
        type: "string"
        minLength: 0
        maxLength: 50
      state:
        type: "string"
        minLength: 0
        maxLength: 50
      postalCode:
        type: "string"
        minLength: 0
        maxLength: 50
      country:
        type: "string"
        minLength: 0
        maxLength: 50
      area:
        type: "string"
      isResidential:
        type: "boolean"
      email:
        type: "string"
        minLength: 0
        maxLength: 250
      phone:
        type: "string"
        minLength: 0
        maxLength: 50
      fax:
        type: "string"
        minLength: 0
        maxLength: 50
      verifiedShippingAddress:
        type: "boolean"
    example:
      area: "area"
      lastName: "lastName"
      country: "country"
      address3: "address3"
      address2: "address2"
      city: "city"
      address1: "address1"
      postalCode: "postalCode"
      firstName: "firstName"
      phone: "phone"
      isResidential: true
      verifiedShippingAddress: true
      state: "state"
      fax: "fax"
      mainOrdersFK: 0
      email: "email"
  IxoPayTokenModel:
    type: "object"
    properties:
      token:
        type: "string"
      referenceNumber:
        type: "string"
      tokenHMAC:
        type: "string"
      cvvIncluded:
        type: "string"
      firstSix:
        type: "string"
      lastFour:
        type: "string"
      cardType:
        type: "string"
      error:
        type: "string"
      message:
        type: "string"
    example:
      lastFour: "lastFour"
      referenceNumber: "referenceNumber"
      tokenHMAC: "tokenHMAC"
      cardType: "cardType"
      firstSix: "firstSix"
      error: "error"
      message: "message"
      cvvIncluded: "cvvIncluded"
      token: "token"
  PaymentUpdateFormModel:
    type: "object"
    properties:
      mainOrdersFK:
        type: "integer"
        format: "int32"
      paidStatusFK:
        type: "integer"
        format: "int32"
      paymentMethodPK:
        type: "integer"
        format: "int32"
      paymentMethodTypePK:
        type: "integer"
        format: "int32"
    example:
      paymentMethodPK: 1
      paymentMethodTypePK: 5
      mainOrdersFK: 0
      paidStatusFK: 6
  AddLogOrderStatusFormModel:
    type: "object"
    properties:
      mainOrdersFK:
        type: "integer"
        format: "int32"
      orderStep:
        type: "string"
        enum:
        - "InitializeOrder"
        - "AddProductsToOrder"
        - "UpdateBilling"
        - "UpdateShipping"
        - "GetShippingMethods"
        - "AddShipping"
        - "AddPayment"
        - "GetTaxCalculation"
        - "AddTax"
        - "ProcessOrder"
        - "PaymentFailed"
      successful:
        type: "boolean"
    example:
      orderStep: "InitializeOrder"
      mainOrdersFK: 0
      successful: true
  OrderComplete3DS2Model:
    type: "object"
    required:
    - "mainOrderPk"
    properties:
      mainOrderPk:
        type: "integer"
        format: "int32"
      paymentMethodCode:
        type: "string"
      params3DS:
        type: "array"
        items:
          $ref: "#/definitions/OrderComplete3DS2ModelParameter"
      source:
        type: "string"
  OrderComplete3DS2ModelParameter:
    type: "object"
    properties:
      name:
        type: "string"
      value:
        type: "string"
  OrderCompleteModel:
    type: "object"
    required:
    - "mainOrderPk"
    - "paymentType"
    properties:
      mainOrderPk:
        type: "integer"
        format: "int32"
      securityCode:
        type: "string"
      inAuthId:
        type: "string"
      amount:
        type: "number"
        format: "double"
      source:
        type: "string"
      paymentMethodCode:
        type: "string"
      paymentType:
        type: "string"
        enum:
        - "Other"
        - "CreditCard"
        - "CreateToken"
      card3DSTokenType:
        type: "string"
        enum:
        - "Unknown"
        - "WP3DS"
    example:
      paymentMethodCode: "paymentMethodCode"
      inAuthId: "inAuthId"
      amount: 6.027456183070403
      card3DSTokenType: "Unknown"
      securityCode: "securityCode"
      source: "source"
      mainOrderPk: 0
      paymentType: "Other"
  AddProductFormModel:
    type: "object"
    properties:
      orderPK:
        type: "integer"
        format: "int32"
      priceListFK:
        type: "integer"
        format: "int32"
      products:
        type: "array"
        items:
          $ref: "#/definitions/ProductModel"
      configurations:
        type: "array"
        items:
          $ref: "#/definitions/ConfigurationModel"
    example:
      orderPK: 0
      configurations:
      - productPk: 7
        configPk: 9
        packagePk: 2
      - productPk: 7
        configPk: 9
        packagePk: 2
      priceListFK: 6
      products:
      - setupForAs: true
        quantity: 5
        productPk: 1
        priceListFK: 5
      - setupForAs: true
        quantity: 5
        productPk: 1
        priceListFK: 5
  ProductModel:
    type: "object"
    properties:
      productPk:
        type: "integer"
        format: "int32"
      quantity:
        type: "integer"
        format: "int32"
      priceListFK:
        type: "integer"
        format: "int32"
      setupForAs:
        type: "boolean"
    example:
      setupForAs: true
      quantity: 5
      productPk: 1
      priceListFK: 5
  ConfigurationModel:
    type: "object"
    properties:
      packagePk:
        type: "integer"
        format: "int32"
      productPk:
        type: "integer"
        format: "int32"
      configPk:
        type: "integer"
        format: "int32"
    example:
      productPk: 7
      configPk: 9
      packagePk: 2
  RMASendSummaryInfoModel:
    type: "object"
    properties:
      returnAdress:
        type: "string"
      returnLabel:
        type: "string"
      qualityReturnAdress:
        type: "string"
      qualityCaseToFollow:
        type: "string"
      isEmailPreview:
        type: "boolean"
      id:
        type: "integer"
        format: "int32"
      rmaNumber:
        type: "integer"
        format: "int32"
      customerID:
        type: "integer"
        format: "int32"
      orderID:
        type: "integer"
        format: "int32"
      adminID:
        type: "integer"
        format: "int32"
      status:
        type: "string"
      statusID:
        type: "integer"
        format: "int32"
      issueDate:
        type: "string"
        format: "date-time"
      recivedDate:
        type: "string"
        format: "date-time"
      refundDate:
        type: "string"
        format: "date-time"
      reasonID:
        type: "integer"
        format: "int32"
      reason:
        type: "string"
      siteURL:
        type: "string"
      customerName:
        type: "string"
      departmentName:
        type: "string"
      issuedBy:
        type: "string"
      notes:
        type: "string"
  OrderCompleteTokenModel:
    type: "object"
    required:
    - "oncode"
    properties:
      paymentMethodCode:
        type: "string"
      oncode:
        type: "string"
      source:
        type: "string"
      token:
        type: "string"
      useOrder:
        type: "string"
    example:
      paymentMethodCode: "paymentMethodCode"
      useOrder: "useOrder"
      oncode: "oncode"
      source: "source"
      token: "token"
  AddMainRetailInfoFormModel:
    type: "object"
    properties:
      mainFK:
        type: "integer"
        format: "int32"
      mainOrdersFK:
        type: "integer"
        format: "int32"
      salesCampaignFK:
        type: "integer"
        format: "int32"
      startedAsPreferredCustomer:
        type: "boolean"
      ccapEligible:
        type: "boolean"
    example:
      ccapEligible: true
      salesCampaignFK: 1
      mainFK: 0
      startedAsPreferredCustomer: true
      mainOrdersFK: 6
  UpdateOrderTypeFormModel:
    type: "object"
    required:
    - "cartKey"
    - "mainOrdersFk"
    properties:
      mainOrdersFk:
        type: "integer"
        format: "int32"
      cartKey:
        type: "string"
        format: "uuid"
    example:
      cartKey: "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
      mainOrdersFk: 0
  UpdateOrderTypeViewModel:
    type: "object"
    properties:
      mainOrdersFk:
        type: "integer"
        format: "int32"
      cartKey:
        type: "string"
        format: "uuid"
      mainOrderTypeFk:
        type: "integer"
        format: "int32"
    example:
      cartKey: "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
      mainOrderTypeFk: 6
      mainOrdersFk: 0
  MerchantInstallmentsFormModel:
    type: "object"
    properties:
      mainOrdersFK:
        type: "integer"
        format: "int32"
      splitAvailableAndChecked:
        type: "boolean"
      countryCode:
        type: "string"
      creditCardType:
        type: "string"
      mainOrderTypeFK:
        type: "string"
      amountToPay:
        type: "number"
        format: "double"
      noOfInstallments:
        type: "integer"
        format: "int32"
      creditCardNumber:
        type: "string"
      creditCardFK:
        type: "integer"
        format: "int32"
    example:
      amountToPay: 6.027456183070403
      creditCardFK: 5
      splitAvailableAndChecked: true
      noOfInstallments: 1
      countryCode: "countryCode"
      creditCardNumber: "creditCardNumber"
      mainOrderTypeFK: "mainOrderTypeFK"
      creditCardType: "creditCardType"
      mainOrdersFK: 0
  MerchantInstallmentsConfigModel:
    type: "object"
    properties:
      available:
        type: "boolean"
      maxInstallments:
        type: "integer"
        format: "int32"
      minInstallments:
        type: "integer"
        format: "int32"
      minSumInstallment:
        type: "integer"
        format: "int32"
      extensionAvailable:
        type: "boolean"
      installmentList:
        type: "array"
        items:
          type: "string"
      viewModel:
        $ref: "#/definitions/InstallmentsViewModel"
      minOrderTotal:
        type: "integer"
        format: "int32"
    example:
      extensionAvailable: true
      maxInstallments: 0
      minSumInstallment: 1
      minInstallments: 6
      available: true
      viewModel:
        paymentTotalLocal: 5.637376656633329
        errorMessage: "errorMessage"
        paymentTotal: 5.962133916683182
      installmentList:
      - "installmentList"
      - "installmentList"
      minOrderTotal: 2
  InstallmentsViewModel:
    type: "object"
    properties:
      errorMessage:
        type: "string"
      paymentTotal:
        type: "number"
        format: "double"
      paymentTotalLocal:
        type: "number"
        format: "double"
    example:
      paymentTotalLocal: 5.637376656633329
      errorMessage: "errorMessage"
      paymentTotal: 5.962133916683182
  OrderResponseModel:
    type: "object"
    properties:
      queryString:
        type: "string"
      inAuthId:
        type: "string"
    example:
      inAuthId: "inAuthId"
      queryString: "queryString"
  SavedCCModel:
    type: "object"
    properties:
      mainOrdersFK:
        type: "integer"
        format: "int32"
      sequenceFK:
        type: "integer"
        format: "int32"
  AddProcessingFeesFormModel:
    type: "object"
    properties:
      mainOrdersFK:
        type: "integer"
        format: "int32"
      paymentMethodCode:
        type: "string"
      noOfInstallments:
        type: "integer"
        format: "int32"
      paymentGtwAccountId:
        type: "integer"
        format: "int32"
      remainingAmount:
        type: "number"
        format: "double"
    example:
      paymentMethodCode: "paymentMethodCode"
      remainingAmount: 5.962133916683182
      noOfInstallments: 6
      paymentGtwAccountId: 1
      mainOrdersFK: 0
  AddCCPaymentFormModel:
    type: "object"
    required:
    - "cardFullName"
    - "cardNumber"
    - "cvv"
    - "expireMonth"
    - "expireYear"
    properties:
      mainOrdersFK:
        type: "integer"
        format: "int32"
      mainFK:
        type: "integer"
        format: "int32"
      cardFullName:
        type: "string"
      cardNumber:
        type: "string"
      cardType:
        type: "string"
      cvv:
        type: "string"
      expireMonth:
        type: "string"
      expireYear:
        type: "string"
      saveCardInfo:
        type: "boolean"
      clearCards:
        type: "boolean"
      installment:
        type: "integer"
        format: "int32"
      useBillingAddress:
        type: "boolean"
      fname:
        type: "string"
      lname:
        type: "string"
      address1:
        type: "string"
      address2:
        type: "string"
      city:
        type: "string"
      state:
        type: "string"
      zip:
        type: "string"
      country:
        type: "string"
      phone:
        type: "string"
      email:
        type: "string"
      cardToken:
        type: "string"
  ValidateCreditCardModel:
    type: "object"
    properties:
      ccNumber:
        type: "string"
      ccType:
        type: "string"
    example:
      ccType: "ccType"
      ccNumber: "ccNumber"
  ValidateCreditCardResponse:
    type: "object"
    properties:
      isValid:
        type: "boolean"
    example:
      isValid: true
  OrderInfoModel:
    type: "object"
    properties:
      mainPK:
        type: "integer"
        format: "int32"
      mainOrdersPK:
        type: "integer"
        format: "int32"
      total:
        type: "number"
        format: "double"
      shippingWon:
        type: "number"
        format: "double"
      taxableSubtotal:
        type: "number"
        format: "double"
      subTotal:
        type: "number"
        format: "double"
      shippingTypeFK:
        type: "integer"
        format: "int32"
      discount:
        type: "number"
        format: "double"
      shipTotal:
        type: "number"
        format: "double"
      taxes:
        type: "number"
        format: "double"
      siteURL:
        type: "string"
      referrerMainPK:
        type: "integer"
        format: "int32"
      referrerSiteURL:
        type: "string"
      paidStatus:
        type: "boolean"
      paidStatusPK:
        type: "integer"
        format: "int32"
      paidStatusName:
        type: "string"
      refunded:
        type: "boolean"
      refundTotal:
        type: "number"
        format: "double"
      mainOrderShippingStatusPK:
        type: "integer"
        format: "int32"
      mainOrderShippingStatusName:
        type: "string"
      shipFirstName:
        type: "string"
      shipLastName:
        type: "string"
      shipAddress:
        type: "string"
      shipAddress2:
        type: "string"
      shipAddress3:
        type: "string"
      shipCity:
        type: "string"
      shipState:
        type: "string"
      shipOtherState:
        type: "string"
      shipZip:
        type: "string"
      shipCountry:
        type: "string"
      email:
        type: "string"
      phone:
        type: "string"
      mainOrderTypePK:
        type: "integer"
        format: "int32"
      mainOrderTypeName:
        type: "string"
      orderDate:
        type: "string"
        format: "date-time"
      currencyRatesFK:
        type: "integer"
        format: "int32"
      currencyCode:
        type: "string"
      currencySymbol:
        type: "string"
      currencyRate:
        type: "number"
        format: "double"
      mainCreditCardsFK:
        type: "integer"
        format: "int32"
      taxExempt:
        type: "boolean"
      priceWon:
        type: "number"
        format: "double"
      convSubTotal:
        type: "number"
        format: "double"
      convVAT:
        type: "number"
        format: "double"
      priceKRVAT:
        type: "number"
        format: "double"
      productVAT:
        type: "number"
        format: "double"
      country:
        type: "string"
      productShipPrice:
        type: "number"
        format: "double"
      isShippable:
        type: "boolean"
      isInternetSpecial:
        type: "boolean"
      importOrder:
        type: "boolean"
      shippingMainFK:
        type: "integer"
        format: "int32"
      krGuaranteeNo:
        type: "string"
      convTotal:
        type: "number"
        format: "double"
      mFName:
        type: "string"
      mLName:
        type: "string"
      allowAdminProcessing:
        type: "boolean"
      reqdFedExSignature:
        type: "string"
      shippingPackageCode:
        type: "string"
      shippingConfirmationType:
        type: "string"
      orderProcessingFees:
        type: "number"
        format: "double"
      noOfInstallments:
        type: "integer"
        format: "int32"
      relatedMainOrders:
        type: "string"
      cartKey:
        type: "string"
        format: "uuid"
      orderItems:
        type: "array"
        items:
          $ref: "#/definitions/OrderInfoItemModel"
      orderTaxTotals:
        $ref: "#/definitions/OrderTaxTotalsModel"
      shippingZone:
        type: "integer"
        format: "int32"
    example:
      country: "country"
      siteURL: "siteURL"
      referrerMainPK: 4
      importOrder: true
      convSubTotal: 5.025004791520295
      discount: 9.301444243932576
      taxes: 2.027123023002322
      subTotal: 2.3021358869347655
      cartKey: "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
      krGuaranteeNo: "krGuaranteeNo"
      relatedMainOrders: "relatedMainOrders"
      productShipPrice: 8.762042012749001
      taxExempt: true
      shipZip: "shipZip"
      mainOrderTypeName: "mainOrderTypeName"
      orderProcessingFees: 3.5571952270680973
      shipFirstName: "shipFirstName"
      shipOtherState: "shipOtherState"
      phone: "phone"
      mainOrderShippingStatusPK: 1
      mainOrderTypePK: 1
      shippingZone: 6
      shipState: "shipState"
      priceKRVAT: 9.369310271410669
      shipLastName: "shipLastName"
      orderDate: "2000-01-23T04:56:07.000+00:00"
      orderTaxTotals:
        productTax: 7.143538047012306
        shippingTax: 0.8851374739011653
        orderTaxTotal: 7.058770351582356
      referrerSiteURL: "referrerSiteURL"
      shippingWon: 5.962133916683182
      productVAT: 6.683562403749608
      shippingMainFK: 9
      convTotal: 6.438423552598547
      mainOrdersPK: 6
      refundTotal: 1.2315135367772556
      shipCountry: "shipCountry"
      allowAdminProcessing: true
      orderItems:
      - unitPrice: 6.778324963048013
        campaignPrice: 6.704019297950036
        unitCV: 3
        setupForAS: true
        productCode: "productCode"
        quantity: 2
        cv: 3
        productPK: 1
        price: 6.878052220127876
        discount: 5.944895607614016
        productName: "productName"
      - unitPrice: 6.778324963048013
        campaignPrice: 6.704019297950036
        unitCV: 3
        setupForAS: true
        productCode: "productCode"
        quantity: 2
        cv: 3
        productPK: 1
        price: 6.878052220127876
        discount: 5.944895607614016
        productName: "productName"
      total: 1.4658129805029452
      paidStatus: true
      shippingPackageCode: "shippingPackageCode"
      priceWon: 4.965218492984954
      isInternetSpecial: true
      refunded: true
      mFName: "mFName"
      email: "email"
      isShippable: true
      shippingTypeFK: 7
      shipCity: "shipCity"
      convVAT: 9.965781217890562
      mainOrderShippingStatusName: "mainOrderShippingStatusName"
      noOfInstallments: 6
      shipAddress2: "shipAddress2"
      shipAddress3: "shipAddress3"
      currencySymbol: "currencySymbol"
      reqdFedExSignature: "reqdFedExSignature"
      taxableSubtotal: 5.637376656633329
      shipAddress: "shipAddress"
      shipTotal: 3.616076749251911
      currencyRatesFK: 6
      paidStatusPK: 7
      shippingConfirmationType: "shippingConfirmationType"
      currencyRate: 7.457744773683766
      mainPK: 0
      currencyCode: "currencyCode"
      mainCreditCardsFK: 1
      paidStatusName: "paidStatusName"
      mLName: "mLName"
  OrderInfoItemModel:
    type: "object"
    properties:
      productPK:
        type: "integer"
        format: "int32"
      productName:
        type: "string"
      productCode:
        type: "string"
      quantity:
        type: "integer"
        format: "int32"
      unitPrice:
        type: "number"
        format: "double"
      price:
        type: "number"
        format: "double"
      discount:
        type: "number"
        format: "double"
      campaignPrice:
        type: "number"
        format: "double"
      unitCV:
        type: "integer"
        format: "int32"
      cv:
        type: "integer"
        format: "int32"
      setupForAS:
        type: "boolean"
    example:
      unitPrice: 6.778324963048013
      campaignPrice: 6.704019297950036
      unitCV: 3
      setupForAS: true
      productCode: "productCode"
      quantity: 2
      cv: 3
      productPK: 1
      price: 6.878052220127876
      discount: 5.944895607614016
      productName: "productName"
  OrderTaxTotalsModel:
    type: "object"
    properties:
      productTax:
        type: "number"
        format: "double"
      shippingTax:
        type: "number"
        format: "double"
      orderTaxTotal:
        type: "number"
        format: "double"
    example:
      productTax: 7.143538047012306
      shippingTax: 0.8851374739011653
      orderTaxTotal: 7.058770351582356
  CartItemFormModel:
    type: "object"
    required:
    - "productFk"
    - "quantity"
    properties:
      quantity:
        type: "integer"
        format: "int32"
      setupForAs:
        type: "boolean"
      productFk:
        type: "integer"
        format: "int32"
      packageFk:
        type: "integer"
        format: "int32"
      configFk:
        type: "integer"
        format: "int32"
      priceListFk:
        type: "integer"
        format: "int32"
    example:
      setupForAs: true
      packageFk: 1
      quantity: 0
      priceListFk: 5
      productFk: 6
      configFk: 5
  AutoshipOrderInfoViewModel:
    type: "object"
    properties:
      mainOrderPk:
        type: "integer"
        format: "int32"
      encMainOrderPk:
        type: "string"
      validationMessage:
        type: "string"
    example:
      encMainOrderPk: "encMainOrderPk"
      validationMessage: "validationMessage"
      mainOrderPk: 0
  OrderProcessModel:
    type: "object"
    properties:
      urlString:
        type: "string"
      amount:
        type: "number"
        format: "double"
    example:
      amount: 0.8008281904610115
      urlString: "urlString"
  ValidateOrderViewModel:
    type: "object"
    properties:
      count:
        type: "integer"
        format: "int32"
      messages:
        type: "array"
        items:
          $ref: "#/definitions/ValidateOrderErrorItem"
    example:
      count: 0
      messages:
      - code: 6
        content: "content"
      - code: 6
        content: "content"
  ValidateOrderErrorItem:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      content:
        type: "string"
    example:
      code: 6
      content: "content"
  MerchantRedirectFormModel:
    type: "object"
    properties:
      mainOrdersFK:
        type: "integer"
        format: "int32"
      paymentMethodCode:
        type: "string"
      amount:
        type: "number"
        format: "double"
      source:
        type: "string"
      sourceDomain:
        type: "string"
    example:
      paymentMethodCode: "paymentMethodCode"
      amount: 6.027456183070403
      source: "source"
      sourceDomain: "sourceDomain"
      mainOrdersFK: 0
  InvoiceInsuranceTypeModel:
    type: "object"
    required:
    - "mainOrderPk"
    properties:
      mainOrderPk:
        type: "integer"
        format: "int32"
      twInvoiceInsuranceType:
        type: "string"
    example:
      twInvoiceInsuranceType: "twInvoiceInsuranceType"
      mainOrderPk: 0
  MerchantRedirectFormModelStep2:
    type: "object"
    properties:
      formName:
        type: "string"
      placeHolderID:
        type: "string"
      submitButtonID:
        type: "string"
      pendingPlaceHolderID:
        type: "string"
      errorPlaceHolderID:
        type: "string"
      formParameters_json:
        type: "string"
      autoSubmitScript:
        type: "boolean"
      isGuestMember:
        type: "boolean"
      mainOrdersFK:
        type: "integer"
        format: "int32"
      paymentMethodCode:
        type: "string"
      amount:
        type: "number"
        format: "double"
      source:
        type: "string"
      sourceDomain:
        type: "string"
    example:
      paymentMethodCode: "paymentMethodCode"
      autoSubmitScript: true
      isGuestMember: true
      amount: 6.027456183070403
      errorPlaceHolderID: "errorPlaceHolderID"
      pendingPlaceHolderID: "pendingPlaceHolderID"
      source: "source"
      submitButtonID: "submitButtonID"
      formParameters_json: "formParameters_json"
      formName: "formName"
      placeHolderID: "placeHolderID"
      sourceDomain: "sourceDomain"
      mainOrdersFK: 0
  MerchantRedirectModelStep2:
    type: "object"
    properties:
      mainOrdersFK:
        type: "integer"
        format: "int32"
      paymentMethodCode:
        type: "string"
      scriptModel:
        $ref: "#/definitions/MerchantRedirectScriptViewModel"
      qrCodeModel:
        $ref: "#/definitions/MerchantRedirectQRCodeViewModel"
    example:
      paymentMethodCode: "paymentMethodCode"
      qrCodeModel:
        paymentReference: "paymentReference"
        errorMessage: "errorMessage"
        qrCodeText: "qrCodeText"
        qrCodeImgSrc: "qrCodeImgSrc"
      scriptModel:
        sourceScript: "sourceScript"
        errorMessage: "errorMessage"
        initScript: "initScript"
      mainOrdersFK: 0
  MerchantRedirectScriptViewModel:
    type: "object"
    properties:
      sourceScript:
        type: "string"
      initScript:
        type: "string"
      errorMessage:
        type: "string"
    example:
      sourceScript: "sourceScript"
      errorMessage: "errorMessage"
      initScript: "initScript"
  MerchantRedirectQRCodeViewModel:
    type: "object"
    properties:
      qrCodeImgSrc:
        type: "string"
      qrCodeText:
        type: "string"
      paymentReference:
        type: "string"
      errorMessage:
        type: "string"
    example:
      paymentReference: "paymentReference"
      errorMessage: "errorMessage"
      qrCodeText: "qrCodeText"
      qrCodeImgSrc: "qrCodeImgSrc"
  RimanDollarsPaymentModel:
    type: "object"
    properties:
      mainOrdersFK:
        type: "integer"
        format: "int32"
      amount:
        type: "number"
        format: "double"
      tokenSiteURL:
        type: "string"
      token:
        type: "string"
      transactionDate:
        type: "string"
      ip:
        type: "string"
    example:
      tokenSiteURL: "tokenSiteURL"
      amount: 6.027456183070403
      ip: "ip"
      transactionDate: "transactionDate"
      mainOrdersFK: 0
      token: "token"
  ApplyOrderDiscountFormModel:
    type: "object"
    properties:
      discountPercent:
        type: "number"
        format: "double"
      discountType:
        type: "integer"
        format: "int32"
      maxDiscountAmount:
        type: "number"
        format: "double"
      eventSystemTicketId:
        type: "string"
    example:
      discountPercent: 0.8008281904610115
      maxDiscountAmount: 1.4658129805029452
      discountType: 6
      eventSystemTicketId: "eventSystemTicketId"
  UpdatePersonalUseFormModel:
    type: "object"
    properties:
      noPersonalUseOnly:
        type: "boolean"
    example:
      noPersonalUseOnly: true
  ProductRegulatoryDetailsQueryModel:
    type: "object"
    properties:
      sku:
        type: "string"
      culture:
        type: "string"
  ProductRegulatoryDetailsViewModel:
    type: "object"
    properties:
      productCode:
        type: "string"
      brandName:
        type: "string"
      productName:
        type: "string"
      description:
        type: "string"
      ingredients:
        type: "string"
      usage:
        type: "string"
      benefits:
        type: "string"
      imageUrl:
        type: "string"
      weight:
        type: "number"
        format: "double"
    example:
      benefits: "benefits"
      brandName: "brandName"
      productCode: "productCode"
      usage: "usage"
      imageUrl: "imageUrl"
      description: "description"
      ingredients: "ingredients"
      weight: 0.8008281904610115
      productName: "productName"
  ProductDetailFormModel:
    type: "object"
    properties:
      langId:
        type: "integer"
        format: "int32"
      itemIdArray:
        type: "array"
        items:
          type: "integer"
          format: "int32"
      itemCodeArray:
        type: "array"
        items:
          type: "string"
      productNameArray:
        type: "array"
        items:
          type: "string"
    example:
      itemCodeArray:
      - "itemCodeArray"
      - "itemCodeArray"
      productNameArray:
      - "productNameArray"
      - "productNameArray"
      itemIdArray:
      - 6
      - 6
      langId: 0
  ProductFormModel:
    type: "object"
    properties:
      siteUrl:
        type: "string"
      cultureName:
        type: "string"
      country:
        type: "string"
    example:
      country: "country"
      siteUrl: "siteUrl"
      cultureName: "cultureName"
  ProductConfigurationFormModel:
    type: "object"
    properties:
      cartType:
        type: "string"
      countryCode:
        type: "string"
      productPK:
        type: "integer"
        format: "int32"
      languageID:
        type: "integer"
        format: "int32"
      siteUrl:
        type: "string"
      isPackage:
        type: "boolean"
      isConfigurable:
        type: "boolean"
    example:
      siteUrl: "siteUrl"
      productPK: 0
      isConfigurable: true
      countryCode: "countryCode"
      languageID: 6
      cartType: "cartType"
      isPackage: true
  ShadeRequestModel:
    type: "object"
    properties:
      manufacturer:
        type: "string"
      brand:
        type: "string"
      shade:
        type: "string"
      email:
        type: "string"
    example:
      shade: "shade"
      brand: "brand"
      email: "email"
      manufacturer: "manufacturer"
  QuizModel:
    type: "object"
    properties:
      questions:
        type: "array"
        items:
          $ref: "#/definitions/QuestionModel"
    example:
      questions:
      - questionPK: 0
        question: "question"
        isSlider: true
        answers:
        - answerPK: 6
          imgUrl: "imgUrl"
          answer: "answer"
          questionFK: 1
          description: "description"
          productFK: 5
        - answerPK: 6
          imgUrl: "imgUrl"
          answer: "answer"
          questionFK: 1
          description: "description"
          productFK: 5
      - questionPK: 0
        question: "question"
        isSlider: true
        answers:
        - answerPK: 6
          imgUrl: "imgUrl"
          answer: "answer"
          questionFK: 1
          description: "description"
          productFK: 5
        - answerPK: 6
          imgUrl: "imgUrl"
          answer: "answer"
          questionFK: 1
          description: "description"
          productFK: 5
  QuestionModel:
    type: "object"
    properties:
      questionPK:
        type: "integer"
        format: "int32"
      question:
        type: "string"
      isSlider:
        type: "boolean"
      answers:
        type: "array"
        items:
          $ref: "#/definitions/AnswerModel"
    example:
      questionPK: 0
      question: "question"
      isSlider: true
      answers:
      - answerPK: 6
        imgUrl: "imgUrl"
        answer: "answer"
        questionFK: 1
        description: "description"
        productFK: 5
      - answerPK: 6
        imgUrl: "imgUrl"
        answer: "answer"
        questionFK: 1
        description: "description"
        productFK: 5
  AnswerModel:
    type: "object"
    properties:
      answerPK:
        type: "integer"
        format: "int32"
      questionFK:
        type: "integer"
        format: "int32"
      answer:
        type: "string"
      description:
        type: "string"
      imgUrl:
        type: "string"
      productFK:
        type: "integer"
        format: "int32"
    example:
      answerPK: 6
      imgUrl: "imgUrl"
      answer: "answer"
      questionFK: 1
      description: "description"
      productFK: 5
  QuizAnswerFormModel:
    type: "object"
    required:
    - "answerIds"
    properties:
      answerIds:
        type: "array"
        items:
          type: "integer"
          format: "int32"
      cartType:
        type: "string"
    example:
      cartType: "cartType"
      answerIds:
      - 0
      - 0
  FullProductViewModel:
    type: "object"
    properties:
      productPK:
        type: "integer"
        format: "int32"
      productCode:
        type: "string"
      sku:
        type: "string"
      productCategory:
        type: "string"
      brandId:
        type: "integer"
        format: "int32"
      brandName:
        type: "string"
      productBrand:
        type: "string"
      name:
        type: "string"
      imageUrl:
        type: "string"
      weight:
        type: "number"
        format: "double"
      isComingSoon:
        type: "boolean"
      comingSoonMessage:
        type: "string"
      isPackage:
        type: "boolean"
      packageItems:
        type: "array"
        items:
          $ref: "#/definitions/PackComponentModel"
      isConfigurable:
        type: "boolean"
      isProductAvailableOnAutoship:
        type: "boolean"
      isProductOnAutoship:
        type: "boolean"
      autoshipProductPk:
        type: "integer"
        format: "int32"
      maxLimit:
        type: "integer"
        format: "int32"
      points:
        type: "number"
        format: "double"
      bv:
        type: "number"
        format: "double"
      sp:
        type: "number"
        format: "double"
      productMenuId:
        type: "integer"
        format: "int32"
      productMenu:
        type: "string"
      configurations:
        type: "array"
        items:
          $ref: "#/definitions/ProductConfigurationViewModel"
      pricing:
        type: "array"
        items:
          $ref: "#/definitions/ProductPricingViewModel"
      description:
        type: "string"
      imageUrls:
        type: "array"
        items:
          $ref: "#/definitions/ProductImageModel"
      additionalInfo:
        type: "array"
        items:
          $ref: "#/definitions/ProductAdditionalInfoViewModel"
      documents:
        type: "array"
        items:
          $ref: "#/definitions/ProductDocumentViewModel"
      isShippable:
        type: "boolean"
      isStarterKit:
        type: "boolean"
      seqNo:
        type: "integer"
        format: "int32"
      isFoodProduct:
        type: "boolean"
      rankInfo:
        $ref: "#/definitions/GetRankResponseModel"
      isRetailPackage:
        type: "boolean"
      isVolumeBasedRSB:
        type: "boolean"
      mainType:
        type: "integer"
        format: "int32"
      activeSmartDelivery:
        type: "boolean"
      isRedemption:
        type: "boolean"
      priceType:
        type: "string"
      doNotSplitPackBV:
        type: "boolean"
      sdOnlyPackage:
        type: "boolean"
      showSDCheckbox:
        type: "boolean"
      offerAffiliateProgram:
        type: "boolean"
      offerPreferredCust:
        type: "boolean"
      offerLoyaltyProgram:
        type: "boolean"
      offerSDOnShop:
        type: "boolean"
      isRetailCart:
        type: "boolean"
      productLineId:
        type: "integer"
        format: "int32"
      productLine:
        type: "string"
      productFunction:
        type: "string"
      maxLifetimeLimitCatCode:
        type: "string"
      maxLifetimeLimit:
        type: "integer"
        format: "int32"
      joinMaxLifetimeLimitCatCode:
        type: "string"
      joinMaxLifetimeLimit:
        type: "integer"
        format: "int32"
      productCmsData:
        type: "array"
        items:
          $ref: "#/definitions/ProductCmsDataModel"
    example:
      isProductOnAutoship: true
      seqNo: 1
      documents:
      - name: "name"
        url: "url"
      - name: "name"
        url: "url"
      joinMaxLifetimeLimitCatCode: "joinMaxLifetimeLimitCatCode"
      configurations:
      - image: "image"
        packageFK: 4
        comingSoonMessage: "comingSoonMessage"
        productPK: 1
        seqNo: 6.846853
        description: "description"
        productName: "productName"
        unit: 1
        isComingSoon: true
        productCode: "productCode"
        price: 1.4894159098541704
        attribute1: "attribute1"
        attribute3: "attribute3"
        attribute2: "attribute2"
        configurableProductPK: 7
      - image: "image"
        packageFK: 4
        comingSoonMessage: "comingSoonMessage"
        productPK: 1
        seqNo: 6.846853
        description: "description"
        productName: "productName"
        unit: 1
        isComingSoon: true
        productCode: "productCode"
        price: 1.4894159098541704
        attribute1: "attribute1"
        attribute3: "attribute3"
        attribute2: "attribute2"
        configurableProductPK: 7
      productBrand: "productBrand"
      points: 9.301444243932576
      productLine: "productLine"
      joinMaxLifetimeLimit: 5
      additionalInfo:
      - name: "name"
        content: "content"
      - name: "name"
        content: "content"
      sku: "sku"
      productCmsData:
      - dataTag: "dataTag"
        name: "name"
        value: "value"
      - dataTag: "dataTag"
        name: "name"
        value: "value"
      activeSmartDelivery: true
      brandName: "brandName"
      doNotSplitPackBV: true
      sdOnlyPackage: true
      weight: 1.4658129805029452
      isVolumeBasedRSB: true
      isRetailCart: true
      offerLoyaltyProgram: true
      isComingSoon: true
      brandId: 6
      productMenuId: 4
      name: "name"
      isRedemption: true
      maxLifetimeLimit: 4
      rankInfo:
        image: "image"
        isDirectorRank: true
        color: "color"
        rankId: 1
        name: "name"
        description: "description"
        monthlyBVRequirement: 6
      description: "description"
      autoshipProductPk: 2
      offerPreferredCust: true
      productCategory: "productCategory"
      bv: 3.616076749251911
      showSDCheckbox: true
      offerSDOnShop: true
      imageUrl: "imageUrl"
      offerAffiliateProgram: true
      sp: 2.027123023002322
      isShippable: true
      productLineId: 1
      comingSoonMessage: "comingSoonMessage"
      productPK: 0
      isConfigurable: true
      isStarterKit: true
      isRetailPackage: true
      priceType: "priceType"
      productFunction: "productFunction"
      isPackage: true
      mainType: 7
      maxLifetimeLimitCatCode: "maxLifetimeLimitCatCode"
      productCode: "productCode"
      packageItems:
      - imgUrl: "imgUrl"
        productPK: 5
        qty: 5
        name: "name"
        description: "description"
      - imgUrl: "imgUrl"
        productPK: 5
        qty: 5
        name: "name"
        description: "description"
      isFoodProduct: true
      maxLimit: 7
      imageUrls:
      - imageName: "imageName"
        imageUrl: "imageUrl"
      - imageName: "imageName"
        imageUrl: "imageUrl"
      isProductAvailableOnAutoship: true
      productMenu: "productMenu"
      pricing:
      - formattedPrice: "formattedPrice"
        price: 7.386281948385884
        priceType: "priceType"
        priceWarning: "priceWarning"
        currencySymbol: "currencySymbol"
        noVatPrice: 1.2315135367772556
      - formattedPrice: "formattedPrice"
        price: 7.386281948385884
        priceType: "priceType"
        priceWarning: "priceWarning"
        currencySymbol: "currencySymbol"
        noVatPrice: 1.2315135367772556
  PackComponentModel:
    type: "object"
    properties:
      productPK:
        type: "integer"
        format: "int32"
      name:
        type: "string"
      description:
        type: "string"
      imgUrl:
        type: "string"
      qty:
        type: "integer"
        format: "int32"
    example:
      imgUrl: "imgUrl"
      productPK: 5
      qty: 5
      name: "name"
      description: "description"
  ProductPricingViewModel:
    type: "object"
    properties:
      priceType:
        type: "string"
      currencySymbol:
        type: "string"
      price:
        type: "number"
        format: "double"
      noVatPrice:
        type: "number"
        format: "double"
      formattedPrice:
        type: "string"
      priceWarning:
        type: "string"
    example:
      formattedPrice: "formattedPrice"
      price: 7.386281948385884
      priceType: "priceType"
      priceWarning: "priceWarning"
      currencySymbol: "currencySymbol"
      noVatPrice: 1.2315135367772556
  ProductImageModel:
    type: "object"
    properties:
      imageUrl:
        type: "string"
      imageName:
        type: "string"
    example:
      imageName: "imageName"
      imageUrl: "imageUrl"
  ProductAdditionalInfoViewModel:
    type: "object"
    properties:
      name:
        type: "string"
      content:
        type: "string"
    example:
      name: "name"
      content: "content"
  ProductDocumentViewModel:
    type: "object"
    properties:
      name:
        type: "string"
      url:
        type: "string"
    example:
      name: "name"
      url: "url"
  GetRankResponseModel:
    type: "object"
    properties:
      rankId:
        type: "integer"
        format: "int32"
      name:
        type: "string"
      description:
        type: "string"
      image:
        type: "string"
      color:
        type: "string"
      monthlyBVRequirement:
        type: "integer"
        format: "int32"
      isDirectorRank:
        type: "boolean"
    example:
      image: "image"
      isDirectorRank: true
      color: "color"
      rankId: 1
      name: "name"
      description: "description"
      monthlyBVRequirement: 6
  ProductCmsDataModel:
    type: "object"
    properties:
      name:
        type: "string"
      value:
        type: "string"
      dataTag:
        type: "string"
    example:
      dataTag: "dataTag"
      name: "name"
      value: "value"
  CustomerReferralStatusModel:
    type: "object"
    properties:
      totalReferrals:
        type: "integer"
        format: "int32"
      todayTotalReferrals:
        type: "integer"
        format: "int32"
      dailyLimitReached:
        type: "boolean"
      lifetimeLimitReached:
        type: "boolean"
    example:
      dailyLimitReached: true
      totalReferrals: 0
      todayTotalReferrals: 6
      lifetimeLimitReached: true
  CustomerReferralSettingsSimpleModel:
    type: "object"
    properties:
      dailyLimit:
        type: "integer"
        format: "int32"
      dailyLimitText:
        type: "string"
      dailyLimitKey:
        type: "string"
      perEmailLimit:
        type: "integer"
        format: "int32"
      perEmailLimitKey:
        type: "string"
      perEmailLimitText:
        type: "string"
      lifetimeLimit:
        type: "integer"
        format: "int32"
      lifetimeLimitKey:
        type: "string"
      lifetimeLimitText:
        type: "string"
      referrerPointsReward:
        type: "number"
        format: "double"
      referralPointsReward:
        type: "number"
        format: "double"
      notificationStatus:
        type: "array"
        items:
          $ref: "#/definitions/CustomerReferralNotificationStatusModel"
    example:
      notificationStatus:
      - referralStatusName: "referralStatusName"
        referralStatusKey: "referralStatusKey"
        createdBy: 7
        id: 2
        createdOn: "2000-01-23T04:56:07.000+00:00"
      - referralStatusName: "referralStatusName"
        referralStatusKey: "referralStatusKey"
        createdBy: 7
        id: 2
        createdOn: "2000-01-23T04:56:07.000+00:00"
      lifetimeLimitKey: "lifetimeLimitKey"
      lifetimeLimitText: "lifetimeLimitText"
      perEmailLimitKey: "perEmailLimitKey"
      dailyLimit: 0
      perEmailLimit: 6
      dailyLimitKey: "dailyLimitKey"
      lifetimeLimit: 1
      referralPointsReward: 5.637376656633329
      dailyLimitText: "dailyLimitText"
      perEmailLimitText: "perEmailLimitText"
      referrerPointsReward: 5.962133916683182
  CustomerReferralNotificationStatusModel:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      referralStatusName:
        type: "string"
      referralStatusKey:
        type: "string"
      createdOn:
        type: "string"
        format: "date-time"
      createdBy:
        type: "integer"
        format: "int32"
    example:
      referralStatusName: "referralStatusName"
      referralStatusKey: "referralStatusKey"
      createdBy: 7
      id: 2
      createdOn: "2000-01-23T04:56:07.000+00:00"
  CustomerReferralsQuery:
    type: "object"
    properties:
      customerMainPk:
        type: "string"
      referralId:
        type: "string"
      referralEmail:
        type: "string"
      referralFirstName:
        type: "string"
      referralLastName:
        type: "string"
      referralStatus:
        type: "string"
      referralBeforeDate:
        type: "string"
        format: "date-time"
      referralAfterDate:
        type: "string"
        format: "date-time"
      earnedPointsBeforeDate:
        type: "string"
        format: "date-time"
      earnedPointsAfterDate:
        type: "string"
        format: "date-time"
      offset:
        type: "integer"
        format: "int32"
      limit:
        type: "integer"
        format: "int32"
      orderBy:
        type: "string"
      skipCount:
        type: "boolean"
  CustomerReferralViewModel:
    type: "object"
    properties:
      totalCount:
        type: "integer"
        format: "int32"
      referrals:
        type: "array"
        items:
          $ref: "#/definitions/CustomerReferralModel"
    example:
      referrals:
      - customerSiteUrl: "customerSiteUrl"
        referralID: "referralID"
        referralLastName: "referralLastName"
        customerMainPK: 1
        referralFirstName: "referralFirstName"
        referralEmail: "referralEmail"
        pointsEarned: 5.637376656633329
        pointsEarnedDate: "2000-01-23T04:56:07.000+00:00"
        referralStatusName: "referralStatusName"
        referralDate: "2000-01-23T04:56:07.000+00:00"
        customerFirstName: "customerFirstName"
        customerLastName: "customerLastName"
        customerLoyaltyRankFK: 5
        id: 6
        referralStatusFK: 2
        sponsorSiteUrl: "sponsorSiteUrl"
      - customerSiteUrl: "customerSiteUrl"
        referralID: "referralID"
        referralLastName: "referralLastName"
        customerMainPK: 1
        referralFirstName: "referralFirstName"
        referralEmail: "referralEmail"
        pointsEarned: 5.637376656633329
        pointsEarnedDate: "2000-01-23T04:56:07.000+00:00"
        referralStatusName: "referralStatusName"
        referralDate: "2000-01-23T04:56:07.000+00:00"
        customerFirstName: "customerFirstName"
        customerLastName: "customerLastName"
        customerLoyaltyRankFK: 5
        id: 6
        referralStatusFK: 2
        sponsorSiteUrl: "sponsorSiteUrl"
      totalCount: 0
  CustomerReferralModel:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      referralID:
        type: "string"
      customerMainPK:
        type: "integer"
        format: "int32"
      customerSiteUrl:
        type: "string"
      customerFirstName:
        type: "string"
      customerLastName:
        type: "string"
      customerLoyaltyRankFK:
        type: "integer"
        format: "int32"
      referralDate:
        type: "string"
        format: "date-time"
      pointsEarned:
        type: "number"
        format: "double"
      pointsEarnedDate:
        type: "string"
        format: "date-time"
      sponsorSiteUrl:
        type: "string"
      referralStatusFK:
        type: "integer"
        format: "int32"
      referralStatusName:
        type: "string"
      referralFirstName:
        type: "string"
      referralLastName:
        type: "string"
      referralEmail:
        type: "string"
    example:
      customerSiteUrl: "customerSiteUrl"
      referralID: "referralID"
      referralLastName: "referralLastName"
      customerMainPK: 1
      referralFirstName: "referralFirstName"
      referralEmail: "referralEmail"
      pointsEarned: 5.637376656633329
      pointsEarnedDate: "2000-01-23T04:56:07.000+00:00"
      referralStatusName: "referralStatusName"
      referralDate: "2000-01-23T04:56:07.000+00:00"
      customerFirstName: "customerFirstName"
      customerLastName: "customerLastName"
      customerLoyaltyRankFK: 5
      id: 6
      referralStatusFK: 2
      sponsorSiteUrl: "sponsorSiteUrl"
  CustomerReferralFormModel:
    type: "object"
    properties:
      referrals:
        type: "array"
        items:
          $ref: "#/definitions/CustomerReferralSimpleModel"
    example:
      referrals:
      - referralEmail: "referralEmail"
        referralLastName: "referralLastName"
        referralFirstName: "referralFirstName"
      - referralEmail: "referralEmail"
        referralLastName: "referralLastName"
        referralFirstName: "referralFirstName"
  CustomerReferralSimpleModel:
    type: "object"
    properties:
      referralFirstName:
        type: "string"
      referralLastName:
        type: "string"
      referralEmail:
        type: "string"
    example:
      referralEmail: "referralEmail"
      referralLastName: "referralLastName"
      referralFirstName: "referralFirstName"
  CustomerReferralReturnModel:
    type: "object"
    properties:
      referralStatus:
        type: "string"
      referralStatusKey:
        type: "string"
      referralID:
        type: "string"
      sponsorMainFK:
        type: "integer"
        format: "int32"
      referralSuccess:
        type: "boolean"
      referralFirstName:
        type: "string"
      referralLastName:
        type: "string"
      referralEmail:
        type: "string"
    example:
      referralSuccess: true
      referralEmail: "referralEmail"
      referralStatusKey: "referralStatusKey"
      referralStatus: "referralStatus"
      referralID: "referralID"
      sponsorMainFK: 0
      referralLastName: "referralLastName"
      referralFirstName: "referralFirstName"
  AddressModel:
    type: "object"
    properties:
      firstName:
        type: "string"
      lastName:
        type: "string"
      address1:
        type: "string"
      address2:
        type: "string"
      address3:
        type: "string"
      city:
        type: "string"
      zip:
        type: "string"
      state:
        type: "string"
      phone:
        type: "string"
      email:
        type: "string"
      country:
        type: "string"
    example:
      zip: "zip"
      firstName: "firstName"
      lastName: "lastName"
      country: "country"
      address3: "address3"
      address2: "address2"
      city: "city"
      phone: "phone"
      address1: "address1"
      state: "state"
      email: "email"
  AddressValidationModel:
    type: "object"
    properties:
      status:
        type: "integer"
        format: "int32"
      similarAddresses:
        type: "array"
        items:
          $ref: "#/definitions/Address"
    example:
      similarAddresses:
      - zip: "zip"
        area: "area"
        country: "country"
        city: "city"
        stateCode: "stateCode"
        state: "state"
        addressLine: "addressLine"
      - zip: "zip"
        area: "area"
        country: "country"
        city: "city"
        stateCode: "stateCode"
        state: "state"
        addressLine: "addressLine"
      status: 0
  Address:
    type: "object"
    properties:
      addressLine:
        type: "string"
      city:
        type: "string"
      country:
        type: "string"
      state:
        type: "string"
      stateCode:
        type: "string"
      zip:
        type: "string"
      area:
        type: "string"
    example:
      zip: "zip"
      area: "area"
      country: "country"
      city: "city"
      stateCode: "stateCode"
      state: "state"
      addressLine: "addressLine"
  CartViewModel:
    type: "object"
    properties:
      cartKey:
        type: "string"
        format: "uuid"
      cartType:
        type: "string"
        minLength: 0
        maxLength: 10
      countryCode:
        type: "string"
        minLength: 0
        maxLength: 2
      mainFK:
        type: "integer"
        format: "int32"
      mainReferrerFK:
        type: "integer"
        format: "int32"
      culture:
        type: "string"
      languageFK:
        type: "integer"
        format: "int32"
      mainOrderTypeFK:
        type: "integer"
        format: "int32"
      priceListFK:
        type: "integer"
        format: "int32"
      campaignCode:
        type: "string"
        minLength: 0
        maxLength: 250
      salesCampaignFK:
        type: "integer"
        format: "int32"
      ip:
        type: "string"
      dateEntered:
        type: "string"
        format: "date-time"
      gaCode:
        type: "string"
        minLength: 0
        maxLength: 50
      facebookCode:
        type: "string"
        minLength: 0
        maxLength: 50
      luckyOrange:
        type: "string"
        minLength: 0
        maxLength: 50
      referrerSiteUrl:
        type: "string"
        minLength: 0
        maxLength: 50
      referrerIsCorporate:
        type: "boolean"
      customerReferralId:
        type: "string"
        minLength: 0
        maxLength: 15
      mainCreditCardsFK:
        type: "integer"
        format: "int32"
      mainOrdersFK:
        type: "integer"
        format: "int32"
      shippingTypeFK:
        type: "integer"
        format: "int32"
      cartStatus:
        type: "integer"
        format: "int32"
      firstName:
        type: "string"
        minLength: 0
        maxLength: 100
      lastName:
        type: "string"
        minLength: 0
        maxLength: 100
      phone:
        type: "string"
        minLength: 0
        maxLength: 100
      email:
        type: "string"
        minLength: 0
        maxLength: 100
      dateModified:
        type: "string"
        format: "date-time"
      subTotal:
        type: "number"
        format: "double"
      formattedSubTotal:
        type: "string"
      tax:
        type: "number"
        format: "double"
      formattedTax:
        type: "string"
      shipping:
        type: "number"
        format: "double"
      formattedShipping:
        type: "string"
      discount:
        type: "number"
        format: "double"
      formattedDiscount:
        type: "string"
      total:
        type: "number"
        format: "double"
      formattedTotal:
        type: "string"
      pointsTotal:
        type: "number"
        format: "double"
      shipSignatureRequired:
        type: "boolean"
      shipSignatureFee:
        type: "number"
        format: "double"
      currencyFK:
        type: "integer"
        format: "int32"
      currencyCode:
        type: "string"
      mainDiscountCode:
        type: "string"
      activeSmartDelivery:
        type: "boolean"
      allowImportCart:
        type: "boolean"
      offerPreferredCust:
        type: "boolean"
      isAffiliateOn:
        type: "boolean"
      isVolumeBasedRSB:
        type: "boolean"
      offerLoyaltyProgram:
        type: "boolean"
      offerSmartDelivery:
        type: "boolean"
      isRetailSignup:
        type: "boolean"
      hasRetailStarterKit:
        type: "boolean"
      allowRetailSignup:
        type: "boolean"
      eventMemberID:
        type: "integer"
        format: "int32"
      showAbandonedOrderWarning:
        type: "boolean"
      shouldCreateAccount:
        type: "boolean"
      isCartCreatedFromBag:
        type: "boolean"
      isCartCreatedFromSignup:
        type: "boolean"
      currencySymbol:
        type: "string"
      shippingAddress:
        $ref: "#/definitions/CartAddressViewModel"
      mailingAddress:
        $ref: "#/definitions/CartAddressViewModel"
      billingAddress:
        $ref: "#/definitions/CartAddressViewModel"
      formattedAutoshipSubtotal:
        type: "string"
      cartItems:
        type: "array"
        readOnly: true
        items:
          $ref: "#/definitions/CartItemViewModel"
    example:
      isCartCreatedFromBag: true
      luckyOrange: "luckyOrange"
      isRetailSignup: true
      shipSignatureFee: 7.457744773683766
      currencyFK: 1
      discount: 1.0246457001441578
      subTotal: 4.145608029883936
      hasRetailStarterKit: true
      cartStatus: 2
      allowRetailSignup: true
      showAbandonedOrderWarning: true
      cartKey: "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
      shipping: 1.2315135367772556
      formattedSubTotal: "formattedSubTotal"
      cartType: "cartType"
      facebookCode: "facebookCode"
      referrerIsCorporate: true
      activeSmartDelivery: true
      ip: "ip"
      formattedAutoshipSubtotal: "formattedAutoshipSubtotal"
      tax: 7.386281948385884
      isVolumeBasedRSB: true
      formattedShipping: "formattedShipping"
      offerSmartDelivery: true
      mainDiscountCode: "mainDiscountCode"
      dateEntered: "2000-01-23T04:56:07.000+00:00"
      firstName: "firstName"
      offerLoyaltyProgram: true
      formattedDiscount: "formattedDiscount"
      shouldCreateAccount: true
      phone: "phone"
      mainFK: 0
      pointsTotal: 6.84685269835264
      formattedTotal: "formattedTotal"
      referrerSiteUrl: "referrerSiteUrl"
      isCartCreatedFromSignup: true
      lastName: "lastName"
      allowImportCart: true
      offerPreferredCust: true
      formattedTax: "formattedTax"
      total: 1.4894159098541704
      countryCode: "countryCode"
      isAffiliateOn: true
      gaCode: "gaCode"
      email: "email"
      campaignCode: "campaignCode"
      shippingTypeFK: 3
      languageFK: 1
      priceListFK: 5
      customerReferralId: "customerReferralId"
      mainOrderTypeFK: 5
      currencySymbol: "currencySymbol"
      dateModified: "2000-01-23T04:56:07.000+00:00"
      eventMemberID: 4
      salesCampaignFK: 2
      shipSignatureRequired: true
      mailingAddress:
        lastName: "lastName"
        country: "country"
        address3: "address3"
        address2: "address2"
        city: "city"
        address1: "address1"
        postalCode: "postalCode"
        firstName: "firstName"
        isPOBox: true
        isResidential: true
        mainCartAddressPK: 5
        company: "company"
        state: "state"
      culture: "culture"
      shippingAddress:
        lastName: "lastName"
        country: "country"
        address3: "address3"
        address2: "address2"
        city: "city"
        address1: "address1"
        postalCode: "postalCode"
        firstName: "firstName"
        isPOBox: true
        isResidential: true
        mainCartAddressPK: 5
        company: "company"
        state: "state"
      mainReferrerFK: 6
      billingAddress:
        lastName: "lastName"
        country: "country"
        address3: "address3"
        address2: "address2"
        city: "city"
        address1: "address1"
        postalCode: "postalCode"
        firstName: "firstName"
        isPOBox: true
        isResidential: true
        mainCartAddressPK: 5
        company: "company"
        state: "state"
      cartItems:
      - isSignup: true
        packageFk: 8
        joinMaxLifetimeLimitCatCode: "joinMaxLifetimeLimitCatCode"
        priceListFk: 6
        discount: 6.965117697638846
        childItems:
        - null
        - null
        configFk: 9
        offerPreferredCust: true
        formattedBasePrice: "formattedBasePrice"
        points: 3.353193347011243
        joinMaxLifetimeLimit: 0
        formattedLineTotal: "formattedLineTotal"
        showSDCheckbox: true
        countryCode: "countryCode"
        imageUrl: "imageUrl"
        formattedLineSubTotal: "formattedLineSubTotal"
        productFk: 6
        offerAffiliateProgram: true
        id: 9
        sku: "sku"
        currencyPK: 3
        formattedRetailTaxablePrice: "formattedRetailTaxablePrice"
        sp: 5.944895607614016
        isShippable: true
        isPaCItem: true
        basePrice: 1.284659006116532
        unitPrice: 2.8841621266687802
        brandName: "brandName"
        quantity: 9
        lineTotal: 7.143538047012306
        priceType: "priceType"
        isStarterKit: true
        currencySymbol: "currencySymbol"
        isVolumeBasedRSB: true
        retailTaxablePrice: 6.778324963048013
        lineSubTotal: 3.0937452626664474
        offerLoyaltyProgram: true
        setupForAs: true
        formattedDiscount: "formattedDiscount"
        cv: 6.878052220127876
        maxLimit: 6
        name: "name"
        formattedUnitPrice: "formattedUnitPrice"
        currencyCode: "currencyCode"
        extraFee: "extraFee"
      - isSignup: true
        packageFk: 8
        joinMaxLifetimeLimitCatCode: "joinMaxLifetimeLimitCatCode"
        priceListFk: 6
        discount: 6.965117697638846
        childItems:
        - null
        - null
        configFk: 9
        offerPreferredCust: true
        formattedBasePrice: "formattedBasePrice"
        points: 3.353193347011243
        joinMaxLifetimeLimit: 0
        formattedLineTotal: "formattedLineTotal"
        showSDCheckbox: true
        countryCode: "countryCode"
        imageUrl: "imageUrl"
        formattedLineSubTotal: "formattedLineSubTotal"
        productFk: 6
        offerAffiliateProgram: true
        id: 9
        sku: "sku"
        currencyPK: 3
        formattedRetailTaxablePrice: "formattedRetailTaxablePrice"
        sp: 5.944895607614016
        isShippable: true
        isPaCItem: true
        basePrice: 1.284659006116532
        unitPrice: 2.8841621266687802
        brandName: "brandName"
        quantity: 9
        lineTotal: 7.143538047012306
        priceType: "priceType"
        isStarterKit: true
        currencySymbol: "currencySymbol"
        isVolumeBasedRSB: true
        retailTaxablePrice: 6.778324963048013
        lineSubTotal: 3.0937452626664474
        offerLoyaltyProgram: true
        setupForAs: true
        formattedDiscount: "formattedDiscount"
        cv: 6.878052220127876
        maxLimit: 6
        name: "name"
        formattedUnitPrice: "formattedUnitPrice"
        currencyCode: "currencyCode"
        extraFee: "extraFee"
      mainCreditCardsFK: 7
      mainOrdersFK: 9
      currencyCode: "currencyCode"
  CartAddressViewModel:
    type: "object"
    properties:
      mainCartAddressPK:
        type: "integer"
        format: "int32"
      firstName:
        type: "string"
        minLength: 0
        maxLength: 50
      lastName:
        type: "string"
        minLength: 0
        maxLength: 50
      company:
        type: "string"
        minLength: 0
        maxLength: 100
      address1:
        type: "string"
        minLength: 0
        maxLength: 250
      address2:
        type: "string"
        minLength: 0
        maxLength: 250
      address3:
        type: "string"
        minLength: 0
        maxLength: 250
      city:
        type: "string"
        minLength: 0
        maxLength: 50
      state:
        type: "string"
        minLength: 0
        maxLength: 50
      postalCode:
        type: "string"
        minLength: 0
        maxLength: 50
      country:
        type: "string"
        minLength: 0
        maxLength: 50
      isPOBox:
        type: "boolean"
      isResidential:
        type: "boolean"
    example:
      lastName: "lastName"
      country: "country"
      address3: "address3"
      address2: "address2"
      city: "city"
      address1: "address1"
      postalCode: "postalCode"
      firstName: "firstName"
      isPOBox: true
      isResidential: true
      mainCartAddressPK: 5
      company: "company"
      state: "state"
  CartItemViewModel:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      quantity:
        type: "integer"
        format: "int32"
      productFk:
        type: "integer"
        format: "int32"
      packageFk:
        type: "integer"
        format: "int32"
      name:
        type: "string"
      imageUrl:
        type: "string"
      setupForAs:
        type: "boolean"
      configFk:
        type: "integer"
        format: "int32"
      priceListFk:
        type: "integer"
        format: "int32"
      isPaCItem:
        type: "boolean"
      isSignup:
        type: "boolean"
      sku:
        type: "string"
      priceType:
        type: "string"
      countryCode:
        type: "string"
      currencyPK:
        type: "integer"
        format: "int32"
      currencyCode:
        type: "string"
      currencySymbol:
        type: "string"
      extraFee:
        type: "string"
      discount:
        type: "number"
        format: "double"
      formattedDiscount:
        type: "string"
      basePrice:
        type: "number"
        format: "double"
      formattedBasePrice:
        type: "string"
      unitPrice:
        type: "number"
        format: "double"
      formattedUnitPrice:
        type: "string"
      retailTaxablePrice:
        type: "number"
        format: "double"
      formattedRetailTaxablePrice:
        type: "string"
      cv:
        type: "number"
        format: "double"
      sp:
        type: "number"
        format: "double"
      maxLimit:
        type: "integer"
        format: "int32"
      points:
        type: "number"
        format: "double"
      isShippable:
        type: "boolean"
      isStarterKit:
        type: "boolean"
      brandName:
        type: "string"
      lineSubTotal:
        type: "number"
        format: "double"
      formattedLineSubTotal:
        type: "string"
      lineTotal:
        type: "number"
        format: "double"
      formattedLineTotal:
        type: "string"
      offerAffiliateProgram:
        type: "boolean"
      isVolumeBasedRSB:
        type: "boolean"
      offerPreferredCust:
        type: "boolean"
      offerLoyaltyProgram:
        type: "boolean"
      showSDCheckbox:
        type: "boolean"
      joinMaxLifetimeLimitCatCode:
        type: "string"
      joinMaxLifetimeLimit:
        type: "integer"
        format: "int32"
      childItems:
        type: "array"
        items:
          $ref: "#/definitions/CartItemViewModel"
    example:
      isSignup: true
      packageFk: 8
      joinMaxLifetimeLimitCatCode: "joinMaxLifetimeLimitCatCode"
      priceListFk: 6
      discount: 6.965117697638846
      childItems:
      - null
      - null
      configFk: 9
      offerPreferredCust: true
      formattedBasePrice: "formattedBasePrice"
      points: 3.353193347011243
      joinMaxLifetimeLimit: 0
      formattedLineTotal: "formattedLineTotal"
      showSDCheckbox: true
      countryCode: "countryCode"
      imageUrl: "imageUrl"
      formattedLineSubTotal: "formattedLineSubTotal"
      productFk: 6
      offerAffiliateProgram: true
      id: 9
      sku: "sku"
      currencyPK: 3
      formattedRetailTaxablePrice: "formattedRetailTaxablePrice"
      sp: 5.944895607614016
      isShippable: true
      isPaCItem: true
      basePrice: 1.284659006116532
      unitPrice: 2.8841621266687802
      brandName: "brandName"
      quantity: 9
      lineTotal: 7.143538047012306
      priceType: "priceType"
      isStarterKit: true
      currencySymbol: "currencySymbol"
      isVolumeBasedRSB: true
      retailTaxablePrice: 6.778324963048013
      lineSubTotal: 3.0937452626664474
      offerLoyaltyProgram: true
      setupForAs: true
      formattedDiscount: "formattedDiscount"
      cv: 6.878052220127876
      maxLimit: 6
      name: "name"
      formattedUnitPrice: "formattedUnitPrice"
      currencyCode: "currencyCode"
      extraFee: "extraFee"
  CartFormModel:
    type: "object"
    required:
    - "culture"
    properties:
      cartType:
        type: "string"
        minLength: 0
        maxLength: 10
      countryCode:
        type: "string"
        minLength: 0
        maxLength: 2
      mainFK:
        type: "integer"
        format: "int32"
      mainReferrerFK:
        type: "integer"
        format: "int32"
      culture:
        type: "string"
      campaignCode:
        type: "string"
        minLength: 0
        maxLength: 250
      salesCampaignFK:
        type: "integer"
        format: "int32"
      ip:
        type: "string"
        minLength: 0
        maxLength: 50
      gaCode:
        type: "string"
        minLength: 0
        maxLength: 50
      facebookCode:
        type: "string"
        minLength: 0
        maxLength: 50
      luckyOrange:
        type: "string"
        minLength: 0
        maxLength: 50
      referrerSiteUrl:
        type: "string"
        minLength: 0
        maxLength: 50
      customerReferralId:
        type: "string"
        minLength: 0
        maxLength: 15
      mainCreditCardsFK:
        type: "integer"
        format: "int32"
      mainOrdersFK:
        type: "integer"
        format: "int32"
      shippingTypeFK:
        type: "integer"
        format: "int32"
      cartStatus:
        type: "integer"
        format: "int32"
      firstName:
        type: "string"
        minLength: 0
        maxLength: 100
      lastName:
        type: "string"
        minLength: 0
        maxLength: 100
      phone:
        type: "string"
        minLength: 0
        maxLength: 100
      email:
        type: "string"
        minLength: 0
        maxLength: 100
      shippingAddressFK:
        type: "integer"
        format: "int32"
      mailingAddressFK:
        type: "integer"
        format: "int32"
      billingAddressFK:
        type: "integer"
        format: "int32"
      shipSignatureRequired:
        type: "boolean"
      shipSignatureFee:
        type: "number"
        format: "double"
      priceListFK:
        type: "integer"
        format: "int32"
      currencyFK:
        type: "integer"
        format: "int32"
      mainOrderTypeFK:
        type: "integer"
        format: "int32"
      mainDiscountCode:
        type: "string"
      isVolumeBasedRSB:
        type: "boolean"
      validateReferrer:
        type: "boolean"
      isRetailSignup:
        type: "boolean"
      eventMemberID:
        type: "integer"
        format: "int32"
      shouldCreateAccount:
        type: "boolean"
      isCartCreatedFromBag:
        type: "boolean"
      isCartCreatedFromSignup:
        type: "boolean"
    example:
      shippingAddressFK: 9
      isCartCreatedFromSignup: true
      lastName: "lastName"
      isCartCreatedFromBag: true
      luckyOrange: "luckyOrange"
      isRetailSignup: true
      shipSignatureFee: 4.145608029883936
      currencyFK: 1
      billingAddressFK: 2
      cartStatus: 7
      mailingAddressFK: 3
      countryCode: "countryCode"
      cartType: "cartType"
      facebookCode: "facebookCode"
      gaCode: "gaCode"
      email: "email"
      campaignCode: "campaignCode"
      shippingTypeFK: 2
      validateReferrer: true
      ip: "ip"
      customerReferralId: "customerReferralId"
      priceListFK: 7
      mainOrderTypeFK: 1
      isVolumeBasedRSB: true
      eventMemberID: 1
      mainDiscountCode: "mainDiscountCode"
      firstName: "firstName"
      shouldCreateAccount: true
      salesCampaignFK: 1
      shipSignatureRequired: true
      phone: "phone"
      mainFK: 0
      culture: "culture"
      mainReferrerFK: 6
      mainCreditCardsFK: 5
      mainOrdersFK: 5
      referrerSiteUrl: "referrerSiteUrl"
  CartPatchModel:
    type: "object"
    properties:
      cartType:
        type: "string"
        minLength: 0
        maxLength: 10
      countryCode:
        type: "string"
        minLength: 0
        maxLength: 2
      mainFK:
        type: "integer"
        format: "int32"
      mainReferrerFK:
        type: "integer"
        format: "int32"
      culture:
        type: "string"
      languageFK:
        type: "integer"
        format: "int32"
      mainOrderTypeFK:
        type: "integer"
        format: "int32"
      priceListFK:
        type: "integer"
        format: "int32"
      campaignCode:
        type: "string"
        minLength: 0
        maxLength: 250
      salesCampaignFK:
        type: "integer"
        format: "int32"
      ip:
        type: "string"
      gaCode:
        type: "string"
        minLength: 0
        maxLength: 50
      facebookCode:
        type: "string"
        minLength: 0
        maxLength: 50
      luckyOrange:
        type: "string"
        minLength: 0
        maxLength: 50
      referrerSiteUrl:
        type: "string"
        minLength: 0
        maxLength: 50
      customerReferralId:
        type: "string"
        minLength: 0
        maxLength: 15
      mainCreditCardsFK:
        type: "integer"
        format: "int32"
      mainOrdersFK:
        type: "integer"
        format: "int32"
      shippingTypeFK:
        type: "integer"
        format: "int32"
      cartStatus:
        type: "integer"
        format: "int32"
      firstName:
        type: "string"
        minLength: 0
        maxLength: 100
      lastName:
        type: "string"
        minLength: 0
        maxLength: 100
      phone:
        type: "string"
        minLength: 0
        maxLength: 100
      email:
        type: "string"
        minLength: 0
        maxLength: 100
      shipSignatureRequired:
        type: "boolean"
      shipSignatureFee:
        type: "number"
        format: "double"
      currencyFK:
        type: "integer"
        format: "int32"
      mainDiscountCode:
        type: "string"
      isRetailSignup:
        type: "boolean"
      shouldCreateAccount:
        type: "boolean"
      isCartCreatedFromBag:
        type: "boolean"
      isCartCreatedFromSignup:
        type: "boolean"
    example:
      isCartCreatedFromSignup: true
      lastName: "lastName"
      isCartCreatedFromBag: true
      luckyOrange: "luckyOrange"
      isRetailSignup: true
      shipSignatureFee: 4.145608029883936
      currencyFK: 7
      cartStatus: 2
      countryCode: "countryCode"
      cartType: "cartType"
      facebookCode: "facebookCode"
      gaCode: "gaCode"
      email: "email"
      campaignCode: "campaignCode"
      shippingTypeFK: 3
      languageFK: 1
      priceListFK: 5
      ip: "ip"
      customerReferralId: "customerReferralId"
      mainOrderTypeFK: 5
      mainDiscountCode: "mainDiscountCode"
      firstName: "firstName"
      shouldCreateAccount: true
      salesCampaignFK: 2
      shipSignatureRequired: true
      phone: "phone"
      mainFK: 0
      culture: "culture"
      mainReferrerFK: 6
      mainCreditCardsFK: 7
      mainOrdersFK: 9
      referrerSiteUrl: "referrerSiteUrl"
  TaxModel:
    type: "object"
    properties:
      rate:
        type: "number"
        format: "double"
      displayRate:
        type: "string"
      rawRate:
        type: "number"
        format: "double"
    example:
      rate: 0.8008281904610115
      rawRate: 6.027456183070403
      displayRate: "displayRate"
  ShippingMethodsViewModel:
    type: "object"
    properties:
      message:
        type: "string"
      zipCodeMessage:
        type: "string"
      showShipFilter:
        type: "boolean"
      methods:
        type: "array"
        items:
          $ref: "#/definitions/ShippingMethodViewModel"
    example:
      showShipFilter: true
      methods:
      - shippingCompany: "shippingCompany"
        shippingChartType: 6
        selectedVal: 5
        cost: 0.8008281904610115
        confirmationType: "confirmationType"
        signatureOffered: true
        expectedDeliveryDate: "2000-01-23T04:56:07.000+00:00"
        isPickup: true
        displayCost: "displayCost"
        currencySymbol: "currencySymbol"
        shippingMessage: "shippingMessage"
        isAPIMethod: true
        signatureMessage: "signatureMessage"
        signaturePromptNoFee: "signaturePromptNoFee"
        packageType: "packageType"
        isSignatureSelectionRequired: true
        signatureRequired: true
        name: "name"
        signaturePromptFee: "signaturePromptFee"
        originalCurrencyCost: 1.4658129805029452
        signatureFee: 5.962133916683182
      - shippingCompany: "shippingCompany"
        shippingChartType: 6
        selectedVal: 5
        cost: 0.8008281904610115
        confirmationType: "confirmationType"
        signatureOffered: true
        expectedDeliveryDate: "2000-01-23T04:56:07.000+00:00"
        isPickup: true
        displayCost: "displayCost"
        currencySymbol: "currencySymbol"
        shippingMessage: "shippingMessage"
        isAPIMethod: true
        signatureMessage: "signatureMessage"
        signaturePromptNoFee: "signaturePromptNoFee"
        packageType: "packageType"
        isSignatureSelectionRequired: true
        signatureRequired: true
        name: "name"
        signaturePromptFee: "signaturePromptFee"
        originalCurrencyCost: 1.4658129805029452
        signatureFee: 5.962133916683182
      zipCodeMessage: "zipCodeMessage"
      message: "message"
  ShippingMethodViewModel:
    type: "object"
    properties:
      name:
        type: "string"
      cost:
        type: "number"
        format: "double"
      shippingCompany:
        type: "string"
      packageType:
        type: "string"
      confirmationType:
        type: "string"
      shippingChartType:
        type: "integer"
        format: "int32"
      currencySymbol:
        type: "string"
      isPickup:
        type: "boolean"
      signatureRequired:
        type: "boolean"
      isSignatureSelectionRequired:
        type: "boolean"
      signatureOffered:
        type: "boolean"
      originalCurrencyCost:
        type: "number"
        format: "double"
      displayCost:
        type: "string"
      signatureFee:
        type: "number"
        format: "double"
      signatureMessage:
        type: "string"
      shippingMessage:
        type: "string"
      signaturePromptFee:
        type: "string"
      signaturePromptNoFee:
        type: "string"
      selectedVal:
        type: "integer"
        format: "int32"
      expectedDeliveryDate:
        type: "string"
        format: "date-time"
      isAPIMethod:
        type: "boolean"
    example:
      shippingCompany: "shippingCompany"
      shippingChartType: 6
      selectedVal: 5
      cost: 0.8008281904610115
      confirmationType: "confirmationType"
      signatureOffered: true
      expectedDeliveryDate: "2000-01-23T04:56:07.000+00:00"
      isPickup: true
      displayCost: "displayCost"
      currencySymbol: "currencySymbol"
      shippingMessage: "shippingMessage"
      isAPIMethod: true
      signatureMessage: "signatureMessage"
      signaturePromptNoFee: "signaturePromptNoFee"
      packageType: "packageType"
      isSignatureSelectionRequired: true
      signatureRequired: true
      name: "name"
      signaturePromptFee: "signaturePromptFee"
      originalCurrencyCost: 1.4658129805029452
      signatureFee: 5.962133916683182
  CampaignRequestModel:
    type: "object"
    properties:
      culture:
        type: "string"
  CampaignResponseModel:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      name:
        type: "string"
      active:
        type: "boolean"
    example:
      name: "name"
      active: true
      id: 0
  ValidateCartQueryModel:
    type: "object"
    properties:
      orderNumber:
        type: "string"
  ValidateCartViewModel:
    type: "object"
    properties:
      splitPayment:
        type: "boolean"
      orderPaid:
        type: "boolean"
      paidStatusFK:
        type: "integer"
        format: "int32"
      redirectAction:
        type: "integer"
        format: "int32"
      message:
        type: "string"
      orderNumber:
        type: "string"
    example:
      orderNumber: "orderNumber"
      redirectAction: 6
      splitPayment: true
      message: "message"
      orderPaid: true
      paidStatusFK: 0
  CheckoutMessageQueryModel:
    type: "object"
    properties:
      countryCode:
        type: "string"
      languageFK:
        type: "integer"
        format: "int32"
      cartKey:
        type: "string"
        format: "uuid"
  CheckoutMessageViewModel:
    type: "object"
    properties:
      messageType:
        type: "string"
      message:
        type: "string"
    example:
      messageType: "messageType"
      message: "message"
  CartDiscountFormModel:
    type: "object"
    properties:
      discountCode:
        type: "string"
      mainOrdersFK:
        type: "integer"
        format: "int32"
    example:
      discountCode: "discountCode"
      mainOrdersFK: 0
  CartSetShippingFormModel:
    type: "object"
    properties:
      shippingChartTypeFk:
        type: "integer"
        format: "int32"
      shippingCost:
        type: "number"
        format: "double"
      signatureFee:
        type: "number"
        format: "double"
      signatureRequested:
        type: "boolean"
      signatureRequired:
        type: "boolean"
    example:
      shippingCost: 6.027456183070403
      signatureRequested: true
      signatureRequired: true
      shippingChartTypeFk: 0
      signatureFee: 1.4658129805029452
  GetQualifiedSalesCampaignRequestModel:
    type: "object"
    properties:
      cartType:
        type: "string"
      cartKey:
        type: "string"
        format: "uuid"
      culture:
        type: "string"
    example:
      cartKey: "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
      culture: "culture"
      cartType: "cartType"
  GetQualifiedSalesCampaignViewModel:
    type: "object"
    properties:
      isQualified:
        type: "boolean"
      bannerText:
        type: "string"
      salesCampaignsFK:
        type: "integer"
        format: "int32"
      priceListFK:
        type: "integer"
        format: "int32"
    example:
      priceListFK: 6
      bannerText: "bannerText"
      isQualified: true
      salesCampaignsFK: 0
  CartAddressFormModel:
    type: "object"
    required:
    - "address1"
    - "city"
    - "country"
    - "firstName"
    - "lastName"
    - "state"
    properties:
      firstName:
        type: "string"
        minLength: 0
        maxLength: 50
      lastName:
        type: "string"
        minLength: 0
        maxLength: 50
      company:
        type: "string"
        minLength: 0
        maxLength: 100
      address1:
        type: "string"
        minLength: 0
        maxLength: 250
      address2:
        type: "string"
        minLength: 0
        maxLength: 250
      address3:
        type: "string"
        minLength: 0
        maxLength: 250
      city:
        type: "string"
        minLength: 0
        maxLength: 50
      state:
        type: "string"
        minLength: 0
        maxLength: 50
      postalCode:
        type: "string"
        minLength: 0
        maxLength: 50
      country:
        type: "string"
        minLength: 0
        maxLength: 50
      isPOBox:
        type: "boolean"
      isResidential:
        type: "boolean"
    example:
      firstName: "firstName"
      lastName: "lastName"
      country: "country"
      address3: "address3"
      address2: "address2"
      city: "city"
      isPOBox: true
      address1: "address1"
      isResidential: true
      postalCode: "postalCode"
      company: "company"
      state: "state"
  ValidateCartItemsViewModel:
    type: "object"
    properties:
      message:
        type: "string"
      allowCheckout:
        type: "boolean"
    example:
      allowCheckout: true
      message: "message"
  CartItemPatchModel:
    type: "object"
    properties:
      quantity:
        type: "integer"
        format: "int32"
      setupForAs:
        type: "boolean"
      productFk:
        type: "integer"
        format: "int32"
      packageFk:
        type: "integer"
        format: "int32"
      configFk:
        type: "integer"
        format: "int32"
      priceListFk:
        type: "integer"
        format: "int32"
      enteredPrice:
        type: "number"
        format: "double"
    example:
      setupForAs: true
      packageFk: 1
      quantity: 0
      priceListFk: 5
      productFk: 6
      configFk: 5
      enteredPrice: 2.3021358869347655
  CartItemAffiliateModel:
    type: "object"
    required:
    - "listItems"
    properties:
      listItems:
        type: "array"
        items:
          type: "string"
      cartType:
        type: "string"
      country:
        type: "string"
    example:
      listItems:
      - "listItems"
      - "listItems"
      country: "country"
      cartType: "cartType"
  AffiliateCartResponseModel:
    type: "object"
    properties:
      message:
        type: "string"
      addedItems:
        type: "array"
        items:
          $ref: "#/definitions/CartItemViewModel"
    example:
      addedItems:
      - isSignup: true
        packageFk: 8
        joinMaxLifetimeLimitCatCode: "joinMaxLifetimeLimitCatCode"
        priceListFk: 6
        discount: 6.965117697638846
        childItems:
        - null
        - null
        configFk: 9
        offerPreferredCust: true
        formattedBasePrice: "formattedBasePrice"
        points: 3.353193347011243
        joinMaxLifetimeLimit: 0
        formattedLineTotal: "formattedLineTotal"
        showSDCheckbox: true
        countryCode: "countryCode"
        imageUrl: "imageUrl"
        formattedLineSubTotal: "formattedLineSubTotal"
        productFk: 6
        offerAffiliateProgram: true
        id: 9
        sku: "sku"
        currencyPK: 3
        formattedRetailTaxablePrice: "formattedRetailTaxablePrice"
        sp: 5.944895607614016
        isShippable: true
        isPaCItem: true
        basePrice: 1.284659006116532
        unitPrice: 2.8841621266687802
        brandName: "brandName"
        quantity: 9
        lineTotal: 7.143538047012306
        priceType: "priceType"
        isStarterKit: true
        currencySymbol: "currencySymbol"
        isVolumeBasedRSB: true
        retailTaxablePrice: 6.778324963048013
        lineSubTotal: 3.0937452626664474
        offerLoyaltyProgram: true
        setupForAs: true
        formattedDiscount: "formattedDiscount"
        cv: 6.878052220127876
        maxLimit: 6
        name: "name"
        formattedUnitPrice: "formattedUnitPrice"
        currencyCode: "currencyCode"
        extraFee: "extraFee"
      - isSignup: true
        packageFk: 8
        joinMaxLifetimeLimitCatCode: "joinMaxLifetimeLimitCatCode"
        priceListFk: 6
        discount: 6.965117697638846
        childItems:
        - null
        - null
        configFk: 9
        offerPreferredCust: true
        formattedBasePrice: "formattedBasePrice"
        points: 3.353193347011243
        joinMaxLifetimeLimit: 0
        formattedLineTotal: "formattedLineTotal"
        showSDCheckbox: true
        countryCode: "countryCode"
        imageUrl: "imageUrl"
        formattedLineSubTotal: "formattedLineSubTotal"
        productFk: 6
        offerAffiliateProgram: true
        id: 9
        sku: "sku"
        currencyPK: 3
        formattedRetailTaxablePrice: "formattedRetailTaxablePrice"
        sp: 5.944895607614016
        isShippable: true
        isPaCItem: true
        basePrice: 1.284659006116532
        unitPrice: 2.8841621266687802
        brandName: "brandName"
        quantity: 9
        lineTotal: 7.143538047012306
        priceType: "priceType"
        isStarterKit: true
        currencySymbol: "currencySymbol"
        isVolumeBasedRSB: true
        retailTaxablePrice: 6.778324963048013
        lineSubTotal: 3.0937452626664474
        offerLoyaltyProgram: true
        setupForAs: true
        formattedDiscount: "formattedDiscount"
        cv: 6.878052220127876
        maxLimit: 6
        name: "name"
        formattedUnitPrice: "formattedUnitPrice"
        currencyCode: "currencyCode"
        extraFee: "extraFee"
      message: "message"
  SmartDeliveryViewModel:
    type: "object"
    required:
    - "active"
    - "agreedToTerms"
    - "askForKidsDonation"
    - "isPaymentSetup"
    - "isPickup"
    - "isPickupOffered"
    properties:
      active:
        type: "boolean"
      isPaymentSetup:
        type: "boolean"
      agreedToTerms:
        type: "boolean"
      isPickupOffered:
        type: "boolean"
      isPickup:
        type: "boolean"
      askForKidsDonation:
        type: "boolean"
      nextDeliveryDate:
        type: "string"
        format: "date-time"
      startedDate:
        type: "string"
        format: "date-time"
      itemsTotal:
        type: "string"
      shipMethod:
        type: "integer"
        format: "int32"
      shippingInstructions:
        type: "string"
      signatureRequired:
        type: "boolean"
      noPersonalUseOnly:
        type: "boolean"
      askForPersonalUse:
        type: "boolean"
      askForWalletUse:
        type: "boolean"
      walletFirst:
        type: "boolean"
      partialWallet:
        type: "boolean"
      isValidPhotoID:
        type: "boolean"
      isImportOrder:
        type: "boolean"
      isImportAllowed:
        type: "boolean"
      paymentType:
        type: "string"
      manualPayment:
        type: "boolean"
      showAbandonedOrderWarning:
        type: "boolean"
      minCV:
        type: "integer"
        format: "int32"
      alreadyPaidThisMonth:
        type: "boolean"
    example:
      isPickup: true
      startedDate: "2000-01-23T04:56:07.000+00:00"
      noPersonalUseOnly: true
      paymentType: "paymentType"
      manualPayment: true
      isPickupOffered: true
      isValidPhotoID: true
      showAbandonedOrderWarning: true
      isImportAllowed: true
      alreadyPaidThisMonth: true
      agreedToTerms: true
      partialWallet: true
      askForWalletUse: true
      walletFirst: true
      shippingInstructions: "shippingInstructions"
      nextDeliveryDate: "2000-01-23T04:56:07.000+00:00"
      active: true
      isPaymentSetup: true
      askForKidsDonation: true
      itemsTotal: "itemsTotal"
      minCV: 6
      shipMethod: 0
      signatureRequired: true
      askForPersonalUse: true
      isImportOrder: true
  SmartDeliveryFormModel:
    type: "object"
    properties:
      isPickup:
        type: "boolean"
      shipMethod:
        type: "integer"
        format: "int32"
      signatureReq:
        type: "boolean"
      noPersonalUseOnly:
        type: "boolean"
      walletFirst:
        type: "boolean"
      partialWallet:
        type: "boolean"
      paymentType:
        type: "string"
      nextRunDate:
        type: "string"
        format: "date-time"
    example:
      walletFirst: true
      signatureReq: true
      isPickup: true
      shipMethod: 0
      nextRunDate: "2000-01-23T04:56:07.000+00:00"
      noPersonalUseOnly: true
      partialWallet: true
      paymentType: "paymentType"
  SmartDeliveryItemModel:
    type: "object"
    required:
    - "autoshipOrderItemsPK"
    - "currencyCode"
    - "currencyRatesFK"
    - "currencySymbol"
    - "formattedUnitPrice"
    - "imageUrl"
    - "maxLimit"
    - "productName"
    - "productPK"
    - "quantity"
    - "unitPrice"
    properties:
      autoshipOrderItemsPK:
        type: "integer"
        format: "int32"
      productPK:
        type: "integer"
        format: "int32"
      productName:
        type: "string"
      unitPrice:
        type: "number"
        format: "double"
      currencyCode:
        type: "string"
      currencySymbol:
        type: "string"
      currencyRatesFK:
        type: "integer"
        format: "int32"
      formattedUnitPrice:
        type: "string"
      quantity:
        type: "integer"
        format: "int32"
      imageUrl:
        type: "string"
      maxLimit:
        type: "integer"
        format: "int32"
      bv:
        type: "number"
        format: "double"
      sp:
        type: "number"
        format: "double"
      points:
        type: "number"
        format: "double"
      configs:
        type: "array"
        items:
          $ref: "#/definitions/SmartDeliveryItemConfigViewModel"
      validationMessages:
        type: "array"
        items:
          type: "string"
      priceNote:
        type: "string"
      pricing:
        type: "array"
        items:
          $ref: "#/definitions/ProductPricingViewModel"
    example:
      unitPrice: 1.4658129805029452
      configs:
      - autoshipOrderItemsFK: 2
        configProductFK: 1
        packageFK: 1
        imageUrl: "imageUrl"
        productFK: 7
        autoshipOrderFK: 4
        productName: "productName"
      - autoshipOrderItemsFK: 2
        configProductFK: 1
        packageFK: 1
        imageUrl: "imageUrl"
        productFK: 7
        autoshipOrderFK: 4
        productName: "productName"
      validationMessages:
      - "validationMessages"
      - "validationMessages"
      quantity: 5
      productPK: 6
      currencySymbol: "currencySymbol"
      productName: "productName"
      points: 3.616076749251911
      priceNote: "priceNote"
      bv: 7.061401241503109
      maxLimit: 2
      currencyRatesFK: 5
      imageUrl: "imageUrl"
      formattedUnitPrice: "formattedUnitPrice"
      autoshipOrderItemsPK: 0
      currencyCode: "currencyCode"
      sp: 9.301444243932576
      pricing:
      - formattedPrice: "formattedPrice"
        price: 7.386281948385884
        priceType: "priceType"
        priceWarning: "priceWarning"
        currencySymbol: "currencySymbol"
        noVatPrice: 1.2315135367772556
      - formattedPrice: "formattedPrice"
        price: 7.386281948385884
        priceType: "priceType"
        priceWarning: "priceWarning"
        currencySymbol: "currencySymbol"
        noVatPrice: 1.2315135367772556
  SmartDeliveryItemConfigViewModel:
    type: "object"
    properties:
      autoshipOrderItemsFK:
        type: "integer"
        format: "int32"
      autoshipOrderFK:
        type: "integer"
        format: "int32"
      productFK:
        type: "integer"
        format: "int32"
      configProductFK:
        type: "integer"
        format: "int32"
      packageFK:
        type: "integer"
        format: "int32"
      productName:
        type: "string"
      imageUrl:
        type: "string"
    example:
      autoshipOrderItemsFK: 2
      configProductFK: 1
      packageFK: 1
      imageUrl: "imageUrl"
      productFK: 7
      autoshipOrderFK: 4
      productName: "productName"
  SmartDeliveryItemFormModel:
    type: "object"
    required:
    - "quantity"
    properties:
      quantity:
        type: "integer"
        format: "int32"
      productFk:
        type: "integer"
        format: "int32"
      agreedToTerms:
        type: "boolean"
      selectedConfig:
        type: "array"
        items:
          $ref: "#/definitions/SmartDeliveryItemConfigurationFormModel"
    example:
      quantity: 0
      productFk: 6
      agreedToTerms: true
      selectedConfig:
      - productFk: 1
        configFK: 5
      - productFk: 1
        configFK: 5
  SmartDeliveryItemConfigurationFormModel:
    type: "object"
    properties:
      productFk:
        type: "integer"
        format: "int32"
      configFK:
        type: "integer"
        format: "int32"
    example:
      productFk: 1
      configFK: 5
  PrepaidQueryModel:
    type: "object"
    properties:
      mainSiteUrl:
        type: "string"
      orderNumber:
        type: "string"
      startDate:
        type: "string"
        format: "date-time"
      endDate:
        type: "string"
        format: "date-time"
      prepaidStatus:
        type: "string"
      offset:
        type: "integer"
        format: "int32"
      limit:
        type: "integer"
        format: "int32"
  PrepaidViewModel:
    type: "object"
    required:
    - "orders"
    - "totalCount"
    properties:
      totalCount:
        type: "integer"
        format: "int32"
      orders:
        type: "array"
        items:
          $ref: "#/definitions/PrepaidPBOrderModel"
    example:
      orders:
      - noOfPrepaidMonths: 5
        minDate: "2000-01-23T04:56:07.000+00:00"
        endDate: "2000-01-23T04:56:07.000+00:00"
        nextProcessDate: "2000-01-23T04:56:07.000+00:00"
        monthlyBV: 2
        createdDate: "2000-01-23T04:56:07.000+00:00"
        prepaidStatus: "prepaidStatus"
        totalBV: 7
        mainFK: 1
        subPA:
        - monthlyBV: 7
          prepaidStatus: "prepaidStatus"
          endDate: "2000-01-23T04:56:07.000+00:00"
          mainFK: 3
          id: 9
          processedMainOrdersFK: 4
          mainOrdersFK: 2
        - monthlyBV: 7
          prepaidStatus: "prepaidStatus"
          endDate: "2000-01-23T04:56:07.000+00:00"
          mainFK: 3
          id: 9
          processedMainOrdersFK: 4
          mainOrdersFK: 2
        id: 6
        mainOrdersFK: 5
        startDate: "2000-01-23T04:56:07.000+00:00"
      - noOfPrepaidMonths: 5
        minDate: "2000-01-23T04:56:07.000+00:00"
        endDate: "2000-01-23T04:56:07.000+00:00"
        nextProcessDate: "2000-01-23T04:56:07.000+00:00"
        monthlyBV: 2
        createdDate: "2000-01-23T04:56:07.000+00:00"
        prepaidStatus: "prepaidStatus"
        totalBV: 7
        mainFK: 1
        subPA:
        - monthlyBV: 7
          prepaidStatus: "prepaidStatus"
          endDate: "2000-01-23T04:56:07.000+00:00"
          mainFK: 3
          id: 9
          processedMainOrdersFK: 4
          mainOrdersFK: 2
        - monthlyBV: 7
          prepaidStatus: "prepaidStatus"
          endDate: "2000-01-23T04:56:07.000+00:00"
          mainFK: 3
          id: 9
          processedMainOrdersFK: 4
          mainOrdersFK: 2
        id: 6
        mainOrdersFK: 5
        startDate: "2000-01-23T04:56:07.000+00:00"
      totalCount: 0
  PrepaidPBOrderModel:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      mainFK:
        type: "integer"
        format: "int32"
      mainOrdersFK:
        type: "integer"
        format: "int32"
      prepaidStatus:
        type: "string"
      startDate:
        type: "string"
        format: "date-time"
      endDate:
        type: "string"
        format: "date-time"
      nextProcessDate:
        type: "string"
        format: "date-time"
      createdDate:
        type: "string"
        format: "date-time"
      noOfPrepaidMonths:
        type: "integer"
        format: "int32"
      monthlyBV:
        type: "integer"
        format: "int32"
      totalBV:
        type: "integer"
        format: "int32"
      minDate:
        type: "string"
        format: "date-time"
      subPA:
        type: "array"
        items:
          $ref: "#/definitions/PrepaidPAOrderViewModel"
    example:
      noOfPrepaidMonths: 5
      minDate: "2000-01-23T04:56:07.000+00:00"
      endDate: "2000-01-23T04:56:07.000+00:00"
      nextProcessDate: "2000-01-23T04:56:07.000+00:00"
      monthlyBV: 2
      createdDate: "2000-01-23T04:56:07.000+00:00"
      prepaidStatus: "prepaidStatus"
      totalBV: 7
      mainFK: 1
      subPA:
      - monthlyBV: 7
        prepaidStatus: "prepaidStatus"
        endDate: "2000-01-23T04:56:07.000+00:00"
        mainFK: 3
        id: 9
        processedMainOrdersFK: 4
        mainOrdersFK: 2
      - monthlyBV: 7
        prepaidStatus: "prepaidStatus"
        endDate: "2000-01-23T04:56:07.000+00:00"
        mainFK: 3
        id: 9
        processedMainOrdersFK: 4
        mainOrdersFK: 2
      id: 6
      mainOrdersFK: 5
      startDate: "2000-01-23T04:56:07.000+00:00"
  PrepaidPAOrderViewModel:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      mainFK:
        type: "integer"
        format: "int32"
      mainOrdersFK:
        type: "integer"
        format: "int32"
      processedMainOrdersFK:
        type: "integer"
        format: "int32"
      prepaidStatus:
        type: "string"
      endDate:
        type: "string"
        format: "date-time"
      monthlyBV:
        type: "integer"
        format: "int32"
    example:
      monthlyBV: 7
      prepaidStatus: "prepaidStatus"
      endDate: "2000-01-23T04:56:07.000+00:00"
      mainFK: 3
      id: 9
      processedMainOrdersFK: 4
      mainOrdersFK: 2
